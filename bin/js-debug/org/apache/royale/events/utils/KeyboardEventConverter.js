/**
 * Generated by Apache Royale Compiler from org/apache/royale/events/utils/KeyboardEventConverter.as
 * org.apache.royale.events.utils.KeyboardEventConverter
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.events.utils.KeyboardEventConverter');
/* Royale Dependency List: org.apache.royale.events.KeyboardEvent,org.apache.royale.events.utils.KeyConverter*/




/**
 * @constructor
 */
org.apache.royale.events.utils.KeyboardEventConverter = function() {
};


/**
 *  Converts JS keyboard events to Royale ones.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.8
 *  @royaleignorecoercion Event
 * @royaleignorecoercion goog.events.Event
 * We're lying to the compiler for now because it thinks it's supposed to accept a goog.events.Event.
 * We need to fix this in typedefs
 * @nocollapse
 * @param {Object} nativeEvent
 * @param {goog.events.BrowserEvent=} browserEvent
 * @return {org.apache.royale.events.KeyboardEvent}
 */
org.apache.royale.events.utils.KeyboardEventConverter.convert = function(nativeEvent, browserEvent) {
  browserEvent = typeof browserEvent !== 'undefined' ? browserEvent : null;
  var /** @type {string} */ type = org.apache.royale.utils.Language.string(nativeEvent["type"]);
  var /** @type {string} */ key = org.apache.royale.utils.Language.string(nativeEvent["key"]);
  if (!key)
    key = org.apache.royale.events.utils.KeyConverter.convertCharCode((nativeEvent['charCode']) >>> 0);
  var /** @type {string} */ code = org.apache.royale.utils.Language.string(nativeEvent["code"]);
  if (code == null)
    code = org.apache.royale.events.utils.KeyConverter.convertKeyCode((nativeEvent['keyCode']) >>> 0);
  var /** @type {org.apache.royale.events.KeyboardEvent} */ newEvent = new org.apache.royale.events.KeyboardEvent(type, key, code, nativeEvent["shiftKey"]);
  if (!browserEvent) {
    browserEvent = new goog.events.BrowserEvent(nativeEvent, nativeEvent["currentTarget"]);
  }
  newEvent.wrapEvent(browserEvent);
  return newEvent;
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.events.utils.KeyboardEventConverter.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'KeyboardEventConverter', qName: 'org.apache.royale.events.utils.KeyboardEventConverter', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.events.utils.KeyboardEventConverter.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    methods: function () {
      return {
        '|convert': { type: 'org.apache.royale.events.KeyboardEvent', declaredBy: 'org.apache.royale.events.utils.KeyboardEventConverter', parameters: function () { return [ 'Object', false ,'goog.events.BrowserEvent', true ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.events.utils.KeyboardEventConverter.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./KeyboardEventConverter.js.map
