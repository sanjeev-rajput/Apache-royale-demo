/**
 * Generated by Apache Royale Compiler from org/apache/royale/jewel/beads/controls/Disabled.as
 * org.apache.royale.jewel.beads.controls.Disabled
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.jewel.beads.controls.Disabled');
/* Royale Dependency List: org.apache.royale.core.HTMLElementWrapper,org.apache.royale.core.IStrand,org.apache.royale.core.IUIBase,org.apache.royale.events.ValueChangeEvent,org.apache.royale.events.ValueEvent,org.apache.royale.utils.sendStrandEvent,org.apache.royale.utils.Language*/

goog.require('org.apache.royale.core.DispatcherBead');



/**
 *  constructor.
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.9.4
 * @constructor
 * @extends {org.apache.royale.core.DispatcherBead}
 */
org.apache.royale.jewel.beads.controls.Disabled = function() {
  org.apache.royale.jewel.beads.controls.Disabled.base(this, 'constructor');
};
goog.inherits(org.apache.royale.jewel.beads.controls.Disabled, org.apache.royale.core.DispatcherBead);


/**
 * @protected
 * @type {string}
 */
org.apache.royale.jewel.beads.controls.Disabled.prototype.lastElementTabVal = null;


/**
 * @protected
 * @type {boolean}
 */
org.apache.royale.jewel.beads.controls.Disabled.prototype.initialized = false;


/**
 * @private
 * @type {boolean}
 */
org.apache.royale.jewel.beads.controls.Disabled.prototype.org_apache_royale_jewel_beads_controls_Disabled__disabled = true;


/**
 * @protected
 */
org.apache.royale.jewel.beads.controls.Disabled.prototype.updateHost = function() {
  var /** @type {HTMLElement} */ elem = org.apache.royale.utils.Language.as(this._strand, org.apache.royale.core.HTMLElementWrapper).element;
  var /** @type {HTMLElement} */ pos = org.apache.royale.utils.Language.as(this._strand, org.apache.royale.core.IUIBase).positioner;
  if (!this.initialized) {
    this.initialized = true;
    this.lastElementTabVal = elem.getAttribute("tabindex");
  }
  if (this.org_apache_royale_jewel_beads_controls_Disabled__disabled) {
    this.setDisableAndTabIndex(pos, true);
    this.setDisableAndTabIndex(elem);
  } else {
    this.removeDisableAndTabIndex(pos, true);
    this.removeDisableAndTabIndex(elem, false, this.lastElementTabVal);
  }
};


/**
 * @protected
 * @param {HTMLElement} o
 * @param {boolean=} positioner
 */
org.apache.royale.jewel.beads.controls.Disabled.prototype.setDisableAndTabIndex = function(o, positioner) {
  positioner = typeof positioner !== 'undefined' ? positioner : false;
  o.setAttribute("disabled", "");
  o.style.pointerEvents = 'none';
  if (!positioner)
    o.tabIndex = -1;
};


/**
 * @protected
 * @param {*} o
 * @param {boolean=} positioner
 * @param {string=} lastTabVal
 */
org.apache.royale.jewel.beads.controls.Disabled.prototype.removeDisableAndTabIndex = function(o, positioner, lastTabVal) {
  positioner = typeof positioner !== 'undefined' ? positioner : false;
  lastTabVal = typeof lastTabVal !== 'undefined' ? lastTabVal : null;
  o.removeAttribute("disabled");
  o.style.pointerEvents = '';
  if (!positioner)
    o.tabIndex = (lastTabVal == null) ? null : lastTabVal;
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
org.apache.royale.jewel.beads.controls.Disabled.prototype.disabled;


org.apache.royale.jewel.beads.controls.Disabled.prototype.get__disabled = function() {
  return this.org_apache_royale_jewel_beads_controls_Disabled__disabled;
};


org.apache.royale.jewel.beads.controls.Disabled.prototype.bindable__set__disabled_org_apache_royale_jewel_beads_controls_Disabled = function(value) {
  if (value != this.org_apache_royale_jewel_beads_controls_Disabled__disabled) {
    this.org_apache_royale_jewel_beads_controls_Disabled__disabled = value;
    if (this._strand) {
      this.updateHost();
      org.apache.royale.utils.sendStrandEvent(this._strand, new org.apache.royale.events.ValueEvent("disabledChange", this.disabled));
    }
  }
};


org.apache.royale.jewel.beads.controls.Disabled.prototype.set__disabled = function(value) {
var oldValue = this.get__disabled();
if (oldValue != value) {
this.bindable__set__disabled_org_apache_royale_jewel_beads_controls_Disabled(value);
    this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(
         this, "disabled", oldValue, value));
}
};


org.apache.royale.jewel.beads.controls.Disabled.prototype.set__strand = function(value) {
  org.apache.royale.jewel.beads.controls.Disabled.superClass_.set__strand.apply(this, [value]);
  this.updateHost();
};


Object.defineProperties(org.apache.royale.jewel.beads.controls.Disabled.prototype, /** @lends {org.apache.royale.jewel.beads.controls.Disabled.prototype} */ {
/**
 * @type {boolean}
 */
disabled: {
get: org.apache.royale.jewel.beads.controls.Disabled.prototype.get__disabled,
set: org.apache.royale.jewel.beads.controls.Disabled.prototype.set__disabled},
/**
 * @type {org.apache.royale.core.IStrand}
 */
strand: {
set: org.apache.royale.jewel.beads.controls.Disabled.prototype.set__strand}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.jewel.beads.controls.Disabled.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'Disabled', qName: 'org.apache.royale.jewel.beads.controls.Disabled', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.jewel.beads.controls.Disabled.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'disabled': { type: 'Boolean', access: 'readwrite', declaredBy: 'org.apache.royale.jewel.beads.controls.Disabled', metadata: function () { return [ { name: 'Bindable' } ]; }},
        'strand': { type: 'org.apache.royale.core.IStrand', access: 'writeonly', declaredBy: 'org.apache.royale.jewel.beads.controls.Disabled'}
      };
    },
    methods: function () {
      return {
        'Disabled': { type: '', declaredBy: 'org.apache.royale.jewel.beads.controls.Disabled'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.jewel.beads.controls.Disabled.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./Disabled.js.map
