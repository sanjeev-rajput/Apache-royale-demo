/**
 * Generated by Apache Royale Compiler from org/apache/royale/jewel/beads/itemRenderers/IAlignItemRenderer.as
 * org.apache.royale.jewel.beads.itemRenderers.IAlignItemRenderer
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.jewel.beads.itemRenderers.IAlignItemRenderer');
/* Royale Dependency List: */



/**
 * @interface
 */
org.apache.royale.jewel.beads.itemRenderers.IAlignItemRenderer = function() {
};
/**  * @type {string}
 */org.apache.royale.jewel.beads.itemRenderers.IAlignItemRenderer.prototype.align;


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.jewel.beads.itemRenderers.IAlignItemRenderer.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'IAlignItemRenderer', qName: 'org.apache.royale.jewel.beads.itemRenderers.IAlignItemRenderer', kind: 'interface' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.jewel.beads.itemRenderers.IAlignItemRenderer.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'align': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.royale.jewel.beads.itemRenderers.IAlignItemRenderer'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.jewel.beads.itemRenderers.IAlignItemRenderer.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./IAlignItemRenderer.js.map
