/**
 * Generated by Apache Royale Compiler from org/apache/royale/jewel/beads/itemRenderers/DataContainerItemRendererInitializer.as
 * org.apache.royale.jewel.beads.itemRenderers.DataContainerItemRendererInitializer
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.jewel.beads.itemRenderers.DataContainerItemRendererInitializer');
/* Royale Dependency List: org.apache.royale.core.IIndexedItemRenderer,org.apache.royale.core.IItemRendererOwnerView,org.apache.royale.core.IStrand,org.apache.royale.core.IStrandWithModelView,org.apache.royale.core.StyledMXMLItemRenderer,org.apache.royale.utils.Language*/

goog.require('org.apache.royale.html.beads.IndexedItemRendererInitializer');



/**
 *  constructor.
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.9.7
 * @constructor
 * @extends {org.apache.royale.html.beads.IndexedItemRendererInitializer}
 */
org.apache.royale.jewel.beads.itemRenderers.DataContainerItemRendererInitializer = function() {
  org.apache.royale.jewel.beads.itemRenderers.DataContainerItemRendererInitializer.base(this, 'constructor');
};
goog.inherits(org.apache.royale.jewel.beads.itemRenderers.DataContainerItemRendererInitializer, org.apache.royale.html.beads.IndexedItemRendererInitializer);


/**
 * @protected
 * @type {org.apache.royale.core.IItemRendererOwnerView}
 */
org.apache.royale.jewel.beads.itemRenderers.DataContainerItemRendererInitializer.prototype.ownerView;


/**
 * @protected
 * @override
 */
org.apache.royale.jewel.beads.itemRenderers.DataContainerItemRendererInitializer.prototype.setupVisualsForItemRenderer = function(ir) {
  if (org.apache.royale.utils.Language.is(ir, org.apache.royale.core.StyledMXMLItemRenderer) && this.ownerView)
    org.apache.royale.utils.Language.as(ir, org.apache.royale.core.StyledMXMLItemRenderer).itemRendererOwnerView = this.ownerView;
};


org.apache.royale.jewel.beads.itemRenderers.DataContainerItemRendererInitializer.prototype.set__strand = function(value) {
  org.apache.royale.jewel.beads.itemRenderers.DataContainerItemRendererInitializer.superClass_.set__strand.apply(this, [value]);
  this.ownerView = org.apache.royale.utils.Language.as(org.apache.royale.utils.Language.as(value, org.apache.royale.core.IStrandWithModelView).view, org.apache.royale.core.IItemRendererOwnerView);
};


Object.defineProperties(org.apache.royale.jewel.beads.itemRenderers.DataContainerItemRendererInitializer.prototype, /** @lends {org.apache.royale.jewel.beads.itemRenderers.DataContainerItemRendererInitializer.prototype} */ {
/**
 * @type {org.apache.royale.core.IStrand}
 */
strand: {
set: org.apache.royale.jewel.beads.itemRenderers.DataContainerItemRendererInitializer.prototype.set__strand}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.jewel.beads.itemRenderers.DataContainerItemRendererInitializer.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'DataContainerItemRendererInitializer', qName: 'org.apache.royale.jewel.beads.itemRenderers.DataContainerItemRendererInitializer', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.jewel.beads.itemRenderers.DataContainerItemRendererInitializer.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'strand': { type: 'org.apache.royale.core.IStrand', access: 'writeonly', declaredBy: 'org.apache.royale.jewel.beads.itemRenderers.DataContainerItemRendererInitializer'}
      };
    },
    methods: function () {
      return {
        'DataContainerItemRendererInitializer': { type: '', declaredBy: 'org.apache.royale.jewel.beads.itemRenderers.DataContainerItemRendererInitializer'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.jewel.beads.itemRenderers.DataContainerItemRendererInitializer.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./DataContainerItemRendererInitializer.js.map
