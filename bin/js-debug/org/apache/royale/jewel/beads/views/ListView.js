/**
 * Generated by Apache Royale Compiler from org/apache/royale/jewel/beads/views/ListView.as
 * org.apache.royale.jewel.beads.views.ListView
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.jewel.beads.views.ListView');
/* Royale Dependency List: org.apache.royale.core.IItemRenderer,org.apache.royale.core.IItemRendererOwnerView,org.apache.royale.core.ILayoutView,org.apache.royale.core.IListWithPresentationModel,org.apache.royale.core.IRollOverModel,org.apache.royale.core.ISelectableItemRenderer,org.apache.royale.core.ISelectionModel,org.apache.royale.core.IStyledUIBase,org.apache.royale.events.Event,org.apache.royale.html.util.getModelByType,org.apache.royale.jewel.beads.models.IJewelSelectionModel,org.apache.royale.jewel.beads.models.ListPresentationModel,org.apache.royale.jewel.supportClasses.list.IListPresentationModel,org.apache.royale.utils.getSelectionRenderBead,org.apache.royale.utils.Language*/

goog.require('org.apache.royale.html.beads.DataContainerView');
goog.require('org.apache.royale.jewel.beads.views.IScrollToIndexView');



/**
 * @constructor
 * @extends {org.apache.royale.html.beads.DataContainerView}
 * @implements {org.apache.royale.jewel.beads.views.IScrollToIndexView}
 */
org.apache.royale.jewel.beads.views.ListView = function() {
  org.apache.royale.jewel.beads.views.ListView.base(this, 'constructor');
};
goog.inherits(org.apache.royale.jewel.beads.views.ListView, org.apache.royale.html.beads.DataContainerView);


/**
 * @private
 * @type {org.apache.royale.core.IItemRendererOwnerView}
 */
org.apache.royale.jewel.beads.views.ListView.prototype.org_apache_royale_jewel_beads_views_ListView__dataGroup;


/**
 * @protected
 * @type {org.apache.royale.core.ISelectionModel}
 */
org.apache.royale.jewel.beads.views.ListView.prototype.listModel;


/**
 * @protected
 * @type {number}
 */
org.apache.royale.jewel.beads.views.ListView.prototype.lastSelectedIndex = -1;


/**
 * @asprivate
 * @royaleignorecoercion org.apache.royale.core.ISelectionModel
 * @protected
 * @override
 */
org.apache.royale.jewel.beads.views.ListView.prototype.handleInitComplete = function(event) {
  this.listModel = org.apache.royale.html.util.getModelByType(this._strand, org.apache.royale.core.ISelectionModel);
  this.listModel.addEventListener("selectionChanged", org.apache.royale.utils.Language.closure(this.selectionChangeHandler, this, 'selectionChangeHandler'));
  this.listModel.addEventListener("rollOverIndexChanged", org.apache.royale.utils.Language.closure(this.rollOverIndexChangeHandler, this, 'rollOverIndexChangeHandler'));
  org.apache.royale.jewel.beads.views.ListView.superClass_.handleInitComplete.apply(this, [event]);
};


/**
 * @asprivate
 * Ensure the list selects the selectedItem if some is set by the user at creation time
 * @protected
 * @override
 */
org.apache.royale.jewel.beads.views.ListView.prototype.itemsCreatedHandler = function(event) {
  org.apache.royale.jewel.beads.views.ListView.superClass_.itemsCreatedHandler.apply(this, [event]);
  if (this.listModel.selectedIndex != -1)
    this.selectionChangeHandler(null);
};


/**
 * @royaleignorecoercion org.apache.royale.core.IItemRenderer
 * @royaleignorecoercion org.apache.royale.core.ISelectableItemRenderer
 * @protected
 * @param {org.apache.royale.events.Event} event
 */
org.apache.royale.jewel.beads.views.ListView.prototype.selectionChangeHandler = function(event) {
  var /** @type {Object} */ selectionBead;
  var /** @type {Object} */ ir = this.dataGroup.getItemRendererForIndex(this.lastSelectedIndex);
  if (ir) {
    selectionBead = org.apache.royale.utils.getSelectionRenderBead(ir);
    if (selectionBead)
      selectionBead.selected = false;
  }
  ir = this.dataGroup.getItemRendererForIndex(this.listModel.selectedIndex);
  if (ir) {
    selectionBead = org.apache.royale.utils.getSelectionRenderBead(ir);
    if (selectionBead)
      selectionBead.selected = true;
  }
  this.lastSelectedIndex = this.listModel.selectedIndex;
  this.itemClickedAction();
};


/**
 * if the selection was not from a user click selection, then scrol to index
 * @protected
 */
org.apache.royale.jewel.beads.views.ListView.prototype.itemClickedAction = function() {
  if (!org.apache.royale.utils.Language.as(this.listModel, org.apache.royale.jewel.beads.models.IJewelSelectionModel).isItemClicked) {
    this.scrollToIndex(this.lastSelectedIndex);
  }
};


/**
 * @protected
 * @type {number}
 */
org.apache.royale.jewel.beads.views.ListView.prototype.lastRollOverIndex = -1;


/**
 * @royaleignorecoercion org.apache.royale.core.IItemRenderer
 * @royaleignorecoercion org.apache.royale.core.IRollOverModel
 * @protected
 * @param {org.apache.royale.events.Event} event
 */
org.apache.royale.jewel.beads.views.ListView.prototype.rollOverIndexChangeHandler = function(event) {
  var /** @type {org.apache.royale.core.ISelectableItemRenderer} */ selectionBead;
  var /** @type {Object} */ ir = this.dataGroup.getItemRendererForIndex(this.lastRollOverIndex);
  if (ir) {
    selectionBead = org.apache.royale.utils.getSelectionRenderBead(ir);
    if (selectionBead)
      selectionBead.hovered = false;
  }
  ir = this.dataGroup.getItemRendererForIndex(this.listModel.rollOverIndex);
  if (ir) {
    selectionBead = org.apache.royale.utils.getSelectionRenderBead(ir);
    if (selectionBead)
      selectionBead.hovered = true;
  }
  this.lastRollOverIndex = this.listModel.rollOverIndex;
};


/**
 *  Ensures that the data provider item at the given index is visible.
 *  
 *  If the item is visible, the <code>verticalScrollPosition</code>
 *  property is left unchanged even if the item is not the first visible
 *  item. If the item is not currently visible, the 
 *  <code>verticalScrollPosition</code>
 *  property is changed make the item the first visible item, unless there
 *  aren't enough rows to do so because the 
 *  <code>verticalScrollPosition</code> value is limited by the 
 *  <code>maxVerticalScrollPosition</code> property.
 *
 *  @asparam index The index of the item in the data provider.
 *
 *  @asreturn <code>true</code> if <code>verticalScrollPosition</code> changed.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Royale 0.9.7
 * @param {number} index
 * @return {boolean}
 */
org.apache.royale.jewel.beads.views.ListView.prototype.scrollToIndex = function(index) {
  if (index == -1)
    return false;
  var /** @type {HTMLElement} */ scrollArea = org.apache.royale.utils.Language.as(this._strand, org.apache.royale.core.IStyledUIBase).element;
  var /** @type {number} */ oldScroll = scrollArea.scrollTop;
  var /** @type {number} */ totalHeight = 0;
  if (this.presentationModel.variableRowHeight) {
    var /** @type {number} */ n = (this.listModel.dataProvider.length) >> 0;
    var /** @type {Array} */ irHeights = [];
    for (var /** @type {number} */ i = 0; i <= index; i++) {
      var /** @type {org.apache.royale.core.IItemRenderer} */ ir = org.apache.royale.utils.Language.as(this.dataGroup.getItemRendererForIndex(i), org.apache.royale.core.IItemRenderer);
      totalHeight += ir.element.clientHeight;
      irHeights.push(totalHeight + ir.element.clientHeight - scrollArea.clientHeight);
    }
    scrollArea.scrollTop = Math.min(irHeights[index], totalHeight);
  } else {
    var /** @type {number} */ rowHeight;
    rowHeight = isNaN(this.presentationModel.rowHeight) ? org.apache.royale.jewel.beads.models.ListPresentationModel.DEFAULT_ROW_HEIGHT : this.presentationModel.rowHeight;
    totalHeight = this.listModel.dataProvider.length * rowHeight - scrollArea.clientHeight;
    scrollArea.scrollTop = Math.min(index * rowHeight, totalHeight);
  }
  return oldScroll != scrollArea.scrollTop;
};


org.apache.royale.jewel.beads.views.ListView.prototype.get__dataGroup = function() {
  if (!this.org_apache_royale_jewel_beads_views_ListView__dataGroup) {
    var /** @type {org.apache.royale.core.ILayoutView} */ c = this.contentView;
    if (c && org.apache.royale.utils.Language.is(c, org.apache.royale.core.IItemRendererOwnerView))
      this.org_apache_royale_jewel_beads_views_ListView__dataGroup = c;
    else
      this.org_apache_royale_jewel_beads_views_ListView__dataGroup = org.apache.royale.jewel.beads.views.ListView.superClass_.get__dataGroup.apply(this);
  }
  return this.org_apache_royale_jewel_beads_views_ListView__dataGroup;
};


/**
 * @nocollapse
 * @type {org.apache.royale.jewel.supportClasses.list.IListPresentationModel}
 */
org.apache.royale.jewel.beads.views.ListView.prototype.presentationModel;


org.apache.royale.jewel.beads.views.ListView.prototype.get__presentationModel = function() {
  return org.apache.royale.utils.Language.as(org.apache.royale.utils.Language.as(this._strand, org.apache.royale.core.IListWithPresentationModel).presentationModel, org.apache.royale.jewel.supportClasses.list.IListPresentationModel);
};


Object.defineProperties(org.apache.royale.jewel.beads.views.ListView.prototype, /** @lends {org.apache.royale.jewel.beads.views.ListView.prototype} */ {
/**
 * @type {org.apache.royale.core.IItemRendererOwnerView}
 */
dataGroup: {
get: org.apache.royale.jewel.beads.views.ListView.prototype.get__dataGroup},
/**
 * @type {org.apache.royale.jewel.supportClasses.list.IListPresentationModel}
 */
presentationModel: {
get: org.apache.royale.jewel.beads.views.ListView.prototype.get__presentationModel}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.jewel.beads.views.ListView.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'ListView', qName: 'org.apache.royale.jewel.beads.views.ListView', kind: 'class' }], interfaces: [org.apache.royale.jewel.beads.views.IScrollToIndexView] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.jewel.beads.views.ListView.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'dataGroup': { type: 'org.apache.royale.core.IItemRendererOwnerView', access: 'readonly', declaredBy: 'org.apache.royale.jewel.beads.views.ListView'}
      };
    },
    methods: function () {
      return {
        'ListView': { type: '', declaredBy: 'org.apache.royale.jewel.beads.views.ListView'},
        'scrollToIndex': { type: 'Boolean', declaredBy: 'org.apache.royale.jewel.beads.views.ListView', parameters: function () { return [ 'int', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.jewel.beads.views.ListView.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./ListView.js.map
