/**
 * Generated by Apache Royale Compiler from org/apache/royale/jewel/beads/models/PopUpModel.as
 * org.apache.royale.jewel.beads.models.PopUpModel
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.jewel.beads.models.PopUpModel');
/* Royale Dependency List: org.apache.royale.core.IStrand,org.apache.royale.events.Event*/

goog.require('org.apache.royale.events.EventDispatcher');
goog.require('org.apache.royale.core.IBeadModel');



/**
 *  Constructor.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.9.4
 * @constructor
 * @extends {org.apache.royale.events.EventDispatcher}
 * @implements {org.apache.royale.core.IBeadModel}
 */
org.apache.royale.jewel.beads.models.PopUpModel = function() {
  org.apache.royale.jewel.beads.models.PopUpModel.base(this, 'constructor');
};
goog.inherits(org.apache.royale.jewel.beads.models.PopUpModel, org.apache.royale.events.EventDispatcher);


/**
 * @private
 * @type {org.apache.royale.core.IStrand}
 */
org.apache.royale.jewel.beads.models.PopUpModel.prototype.org_apache_royale_jewel_beads_models_PopUpModel__strand;


/**
 * @private
 * @type {number}
 */
org.apache.royale.jewel.beads.models.PopUpModel.prototype.org_apache_royale_jewel_beads_models_PopUpModel__duration = 4000;


/**
 * @nocollapse
 * @export
 * @type {org.apache.royale.core.IStrand}
 */
org.apache.royale.jewel.beads.models.PopUpModel.prototype.strand;


org.apache.royale.jewel.beads.models.PopUpModel.prototype.set__strand = function(value) {
  this.org_apache_royale_jewel_beads_models_PopUpModel__strand = value;
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
org.apache.royale.jewel.beads.models.PopUpModel.prototype.duration;


org.apache.royale.jewel.beads.models.PopUpModel.prototype.get__duration = function() {
  return this.org_apache_royale_jewel_beads_models_PopUpModel__duration;
};


org.apache.royale.jewel.beads.models.PopUpModel.prototype.set__duration = function(value) {
  if (value != this.org_apache_royale_jewel_beads_models_PopUpModel__duration) {
    this.org_apache_royale_jewel_beads_models_PopUpModel__duration = value;
    this.dispatchEvent(new org.apache.royale.events.Event("durationChange"));
  }
};


Object.defineProperties(org.apache.royale.jewel.beads.models.PopUpModel.prototype, /** @lends {org.apache.royale.jewel.beads.models.PopUpModel.prototype} */ {
/**
 * @type {org.apache.royale.core.IStrand}
 */
strand: {
set: org.apache.royale.jewel.beads.models.PopUpModel.prototype.set__strand},
/**
 * @type {number}
 */
duration: {
get: org.apache.royale.jewel.beads.models.PopUpModel.prototype.get__duration,
set: org.apache.royale.jewel.beads.models.PopUpModel.prototype.set__duration}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.jewel.beads.models.PopUpModel.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'PopUpModel', qName: 'org.apache.royale.jewel.beads.models.PopUpModel', kind: 'class' }], interfaces: [org.apache.royale.core.IBeadModel] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.jewel.beads.models.PopUpModel.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'strand': { type: 'org.apache.royale.core.IStrand', access: 'writeonly', declaredBy: 'org.apache.royale.jewel.beads.models.PopUpModel'},
        'duration': { type: 'int', access: 'readwrite', declaredBy: 'org.apache.royale.jewel.beads.models.PopUpModel', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'durationChange' } ] } ]; }}
      };
    },
    methods: function () {
      return {
        'PopUpModel': { type: '', declaredBy: 'org.apache.royale.jewel.beads.models.PopUpModel'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.jewel.beads.models.PopUpModel.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./PopUpModel.js.map
