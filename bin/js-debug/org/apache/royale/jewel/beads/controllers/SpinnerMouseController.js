/**
 * Generated by Apache Royale Compiler from org/apache/royale/jewel/beads/controllers/SpinnerMouseController.as
 * org.apache.royale.jewel.beads.controllers.SpinnerMouseController
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.jewel.beads.controllers.SpinnerMouseController');
/* Royale Dependency List: org.apache.royale.core.IRangeModel,org.apache.royale.core.IStrand,org.apache.royale.core.UIBase,org.apache.royale.events.Event,org.apache.royale.events.MouseEvent,org.apache.royale.events.ValueChangeEvent,org.apache.royale.jewel.Button,org.apache.royale.jewel.beads.controls.spinner.ISpinnerView,org.apache.royale.utils.Timer,org.apache.royale.utils.sendStrandEvent,org.apache.royale.utils.Language*/

goog.require('org.apache.royale.core.IBeadController');



/**
 *  constructor.
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.9.4
 * @constructor
 * @implements {org.apache.royale.core.IBeadController}
 */
org.apache.royale.jewel.beads.controllers.SpinnerMouseController = function() {
};


/**
 * @private
 * @type {org.apache.royale.core.IRangeModel}
 */
org.apache.royale.jewel.beads.controllers.SpinnerMouseController.prototype.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_rangeModel;


/**
 * @private
 * @type {org.apache.royale.core.IStrand}
 */
org.apache.royale.jewel.beads.controllers.SpinnerMouseController.prototype.org_apache_royale_jewel_beads_controllers_SpinnerMouseController__strand;


/**
 * @private
 * @type {boolean}
 */
org.apache.royale.jewel.beads.controllers.SpinnerMouseController.prototype.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_mouseDown = false;


/**
 * @protected
 * @type {org.apache.royale.utils.Timer}
 */
org.apache.royale.jewel.beads.controllers.SpinnerMouseController.prototype.timer;


/**
 * @protected
 * @type {number}
 */
org.apache.royale.jewel.beads.controllers.SpinnerMouseController.prototype.timerdelay = 500;


/**
 * Make timer be faster as user maintain the button pressed
 * @asprivate
 * @private
 * @param {Function} incOrDecFunc
 */
org.apache.royale.jewel.beads.controllers.SpinnerMouseController.prototype.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_increaseCadence = function(incOrDecFunc) {
  if (!this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_mouseDown)
    return;
  if (this.timer != null && this.timer.running) {
    if (this.timer.delay > 150) {
      var /** @type {number} */ newdelay = this.timer.delay / 2;
      this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_createTimer(incOrDecFunc, newdelay);
    }
  }
};


/**
 * @private
 * @type {Function}
 */
org.apache.royale.jewel.beads.controllers.SpinnerMouseController.prototype.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_currentFunc;


/**
 * Create the timer each time needed depending on function to listen and delay
 * @asprivate
 * @private
 * @param {Function} incOrDecFunc
 * @param {number} delay
 */
org.apache.royale.jewel.beads.controllers.SpinnerMouseController.prototype.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_createTimer = function(incOrDecFunc, delay) {
  this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_removeTimer();
  this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_currentFunc = incOrDecFunc;
  this.timer = new org.apache.royale.utils.Timer(delay, 0);
  this.timer.addEventListener("timer", incOrDecFunc);
  this.timer.start();
};


/**
 * Remove the timer each time needed depending on function to listen
 * @asprivate
 * @private
 */
org.apache.royale.jewel.beads.controllers.SpinnerMouseController.prototype.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_removeTimer = function() {
  if (!this.timer || !this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_currentFunc)
    return;
  this.timer.removeEventListener("timer", this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_currentFunc);
  this.timer.stop();
  this.timer = null;
};


/**
 * Cancel increment/decrement timers if still running when mouse moves away from buttons
 * @private
 * @param {org.apache.royale.events.MouseEvent} event
 */
org.apache.royale.jewel.beads.controllers.SpinnerMouseController.prototype.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_cancelTimerMouseOutHandler = function(event) {
  this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_removeTimer();
};


/**
 * Increment mouse down handler
 * @private
 * @param {org.apache.royale.events.MouseEvent} event
 */
org.apache.royale.jewel.beads.controllers.SpinnerMouseController.prototype.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_incrementMouseDownHandler = function(event) {
  if (event.button !== 0)
    return;
  this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_mouseDown = true;
  this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_createTimer(org.apache.royale.utils.Language.closure(this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_incrementClickHandler, this, 'org_apache_royale_jewel_beads_controllers_SpinnerMouseController_incrementClickHandler'), this.timerdelay);
};


/**
 * Increment mouse up handler
 * @private
 * @param {org.apache.royale.events.MouseEvent} event
 */
org.apache.royale.jewel.beads.controllers.SpinnerMouseController.prototype.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_incrementMouseUpHandlermouseUpHandler = function(event) {
  if (event.button !== 0)
    return;
  this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_mouseDown = false;
  this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_removeTimer();
};


/**
 * Increment mouse click handler
 * @private
 * @param {org.apache.royale.events.Event} event
 */
org.apache.royale.jewel.beads.controllers.SpinnerMouseController.prototype.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_incrementClickHandler = function(event) {
  this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_increaseCadence(org.apache.royale.utils.Language.closure(this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_incrementClickHandler, this, 'org_apache_royale_jewel_beads_controllers_SpinnerMouseController_incrementClickHandler'));
  var /** @type {number} */ oldValue = this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_rangeModel.value;
  this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_rangeModel.value = Math.min(this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_rangeModel.maximum, this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_rangeModel.value + this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_rangeModel.stepSize);
  var /** @type {org.apache.royale.events.ValueChangeEvent} */ vce = org.apache.royale.events.ValueChangeEvent.createUpdateEvent(this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController__strand, "value", oldValue, this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_rangeModel.value);
  org.apache.royale.utils.sendStrandEvent(this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController__strand, vce);
};


/**
 * Decrement mouse down handler
 * @private
 * @param {org.apache.royale.events.MouseEvent} event
 */
org.apache.royale.jewel.beads.controllers.SpinnerMouseController.prototype.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_decrementMouseDownHandler = function(event) {
  if (event.button !== 0)
    return;
  this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_mouseDown = true;
  this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_createTimer(org.apache.royale.utils.Language.closure(this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_decrementClickHandler, this, 'org_apache_royale_jewel_beads_controllers_SpinnerMouseController_decrementClickHandler'), this.timerdelay);
};


/**
 * Decrement mouse up handler
 * @private
 * @param {org.apache.royale.events.MouseEvent} event
 */
org.apache.royale.jewel.beads.controllers.SpinnerMouseController.prototype.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_decrementMouseUpHandlermouseUpHandler = function(event) {
  if (event.button !== 0)
    return;
  this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_mouseDown = false;
  this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_removeTimer();
};


/**
 * Decrement mouse click handler
 * @private
 * @param {org.apache.royale.events.Event} event
 */
org.apache.royale.jewel.beads.controllers.SpinnerMouseController.prototype.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_decrementClickHandler = function(event) {
  this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_increaseCadence(org.apache.royale.utils.Language.closure(this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_decrementClickHandler, this, 'org_apache_royale_jewel_beads_controllers_SpinnerMouseController_decrementClickHandler'));
  var /** @type {number} */ oldValue = this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_rangeModel.value;
  this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_rangeModel.value = Math.max(this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_rangeModel.minimum, this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_rangeModel.value - this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_rangeModel.stepSize);
  var /** @type {org.apache.royale.events.ValueChangeEvent} */ vce = org.apache.royale.events.ValueChangeEvent.createUpdateEvent(this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController__strand, "value", oldValue, this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_rangeModel.value);
  org.apache.royale.utils.sendStrandEvent(this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController__strand, vce);
};


/**
 * @nocollapse
 * @export
 * @type {org.apache.royale.core.IStrand}
 */
org.apache.royale.jewel.beads.controllers.SpinnerMouseController.prototype.strand;


org.apache.royale.jewel.beads.controllers.SpinnerMouseController.prototype.set__strand = function(value) {
  this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController__strand = value;
  this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_rangeModel = value.model;
  
  var /** @type {org.apache.royale.jewel.beads.controls.spinner.ISpinnerView} */ view = value.getBeadByType(org.apache.royale.jewel.beads.controls.spinner.ISpinnerView);
  var /** @type {org.apache.royale.jewel.Button} */ incrementButton = view.increment;
  var /** @type {org.apache.royale.jewel.Button} */ decrementButton = view.decrement;
  incrementButton.addEventListener(org.apache.royale.events.MouseEvent.CLICK, org.apache.royale.utils.Language.closure(this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_incrementClickHandler, this, 'org_apache_royale_jewel_beads_controllers_SpinnerMouseController_incrementClickHandler'));
  incrementButton.addEventListener(org.apache.royale.events.MouseEvent.MOUSE_DOWN, org.apache.royale.utils.Language.closure(this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_incrementMouseDownHandler, this, 'org_apache_royale_jewel_beads_controllers_SpinnerMouseController_incrementMouseDownHandler'));
  incrementButton.addEventListener(org.apache.royale.events.MouseEvent.MOUSE_UP, org.apache.royale.utils.Language.closure(this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_incrementMouseUpHandlermouseUpHandler, this, 'org_apache_royale_jewel_beads_controllers_SpinnerMouseController_incrementMouseUpHandlermouseUpHandler'));
  incrementButton.addEventListener(org.apache.royale.events.MouseEvent.MOUSE_OUT, org.apache.royale.utils.Language.closure(this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_cancelTimerMouseOutHandler, this, 'org_apache_royale_jewel_beads_controllers_SpinnerMouseController_cancelTimerMouseOutHandler'));
  decrementButton.addEventListener(org.apache.royale.events.MouseEvent.CLICK, org.apache.royale.utils.Language.closure(this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_decrementClickHandler, this, 'org_apache_royale_jewel_beads_controllers_SpinnerMouseController_decrementClickHandler'));
  decrementButton.addEventListener(org.apache.royale.events.MouseEvent.MOUSE_DOWN, org.apache.royale.utils.Language.closure(this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_decrementMouseDownHandler, this, 'org_apache_royale_jewel_beads_controllers_SpinnerMouseController_decrementMouseDownHandler'));
  decrementButton.addEventListener(org.apache.royale.events.MouseEvent.MOUSE_UP, org.apache.royale.utils.Language.closure(this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_decrementMouseUpHandlermouseUpHandler, this, 'org_apache_royale_jewel_beads_controllers_SpinnerMouseController_decrementMouseUpHandlermouseUpHandler'));
  decrementButton.addEventListener(org.apache.royale.events.MouseEvent.MOUSE_OUT, org.apache.royale.utils.Language.closure(this.org_apache_royale_jewel_beads_controllers_SpinnerMouseController_cancelTimerMouseOutHandler, this, 'org_apache_royale_jewel_beads_controllers_SpinnerMouseController_cancelTimerMouseOutHandler'));
};


Object.defineProperties(org.apache.royale.jewel.beads.controllers.SpinnerMouseController.prototype, /** @lends {org.apache.royale.jewel.beads.controllers.SpinnerMouseController.prototype} */ {
/**
 * @type {org.apache.royale.core.IStrand}
 */
strand: {
set: org.apache.royale.jewel.beads.controllers.SpinnerMouseController.prototype.set__strand}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.jewel.beads.controllers.SpinnerMouseController.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'SpinnerMouseController', qName: 'org.apache.royale.jewel.beads.controllers.SpinnerMouseController', kind: 'class' }], interfaces: [org.apache.royale.core.IBeadController] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.jewel.beads.controllers.SpinnerMouseController.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'strand': { type: 'org.apache.royale.core.IStrand', access: 'writeonly', declaredBy: 'org.apache.royale.jewel.beads.controllers.SpinnerMouseController'}
      };
    },
    methods: function () {
      return {
        'SpinnerMouseController': { type: '', declaredBy: 'org.apache.royale.jewel.beads.controllers.SpinnerMouseController'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.jewel.beads.controllers.SpinnerMouseController.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./SpinnerMouseController.js.map
