/**
 * Generated by Apache Royale Compiler from org/apache/royale/jewel/Spinner.as
 * org.apache.royale.jewel.Spinner
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.jewel.Spinner');
/* Royale Dependency List: org.apache.royale.core.IRangeModel,org.apache.royale.core.WrappedHTMLElement,org.apache.royale.html.util.addElementToWrapper*/

goog.require('org.apache.royale.core.StyledUIBase');



/**
 *  constructor.
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.9.4
 * @constructor
 * @extends {org.apache.royale.core.StyledUIBase}
 */
org.apache.royale.jewel.Spinner = function() {
  org.apache.royale.jewel.Spinner.base(this, 'constructor');
  this.typeNames = "jewel spinner";
};
goog.inherits(org.apache.royale.jewel.Spinner, org.apache.royale.core.StyledUIBase);


/**
 * @royaleignorecoercion org.apache.royale.core.WrappedHTMLElement
 * @protected
 * @override
 */
org.apache.royale.jewel.Spinner.prototype.createElement = function() {
  org.apache.royale.html.util.addElementToWrapper(this, 'div');
  return this.element;
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
org.apache.royale.jewel.Spinner.prototype.value;


org.apache.royale.jewel.Spinner.prototype.get__value = function() {
  return this.model.value;
};


org.apache.royale.jewel.Spinner.prototype.set__value = function(newValue) {
  this.model.value = newValue;
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
org.apache.royale.jewel.Spinner.prototype.minimum;


org.apache.royale.jewel.Spinner.prototype.get__minimum = function() {
  return this.model.minimum;
};


org.apache.royale.jewel.Spinner.prototype.set__minimum = function(value) {
  this.model.minimum = value;
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
org.apache.royale.jewel.Spinner.prototype.maximum;


org.apache.royale.jewel.Spinner.prototype.get__maximum = function() {
  return this.model.maximum;
};


org.apache.royale.jewel.Spinner.prototype.set__maximum = function(value) {
  this.model.maximum = value;
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
org.apache.royale.jewel.Spinner.prototype.snapInterval;


org.apache.royale.jewel.Spinner.prototype.get__snapInterval = function() {
  return this.model.snapInterval;
};


org.apache.royale.jewel.Spinner.prototype.set__snapInterval = function(value) {
  this.model.snapInterval = value;
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
org.apache.royale.jewel.Spinner.prototype.stepSize;


org.apache.royale.jewel.Spinner.prototype.get__stepSize = function() {
  return this.model.stepSize;
};


org.apache.royale.jewel.Spinner.prototype.set__stepSize = function(value) {
  this.model.stepSize = value;
};


Object.defineProperties(org.apache.royale.jewel.Spinner.prototype, /** @lends {org.apache.royale.jewel.Spinner.prototype} */ {
/**
 * @type {number}
 */
value: {
get: org.apache.royale.jewel.Spinner.prototype.get__value,
set: org.apache.royale.jewel.Spinner.prototype.set__value},
/**
 * @type {number}
 */
minimum: {
get: org.apache.royale.jewel.Spinner.prototype.get__minimum,
set: org.apache.royale.jewel.Spinner.prototype.set__minimum},
/**
 * @type {number}
 */
maximum: {
get: org.apache.royale.jewel.Spinner.prototype.get__maximum,
set: org.apache.royale.jewel.Spinner.prototype.set__maximum},
/**
 * @type {number}
 */
snapInterval: {
get: org.apache.royale.jewel.Spinner.prototype.get__snapInterval,
set: org.apache.royale.jewel.Spinner.prototype.set__snapInterval},
/**
 * @type {number}
 */
stepSize: {
get: org.apache.royale.jewel.Spinner.prototype.get__stepSize,
set: org.apache.royale.jewel.Spinner.prototype.set__stepSize}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.jewel.Spinner.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'Spinner', qName: 'org.apache.royale.jewel.Spinner', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.jewel.Spinner.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'value': { type: 'Number', access: 'readwrite', declaredBy: 'org.apache.royale.jewel.Spinner'},
        'minimum': { type: 'Number', access: 'readwrite', declaredBy: 'org.apache.royale.jewel.Spinner'},
        'maximum': { type: 'Number', access: 'readwrite', declaredBy: 'org.apache.royale.jewel.Spinner'},
        'snapInterval': { type: 'Number', access: 'readwrite', declaredBy: 'org.apache.royale.jewel.Spinner'},
        'stepSize': { type: 'Number', access: 'readwrite', declaredBy: 'org.apache.royale.jewel.Spinner'}
      };
    },
    methods: function () {
      return {
        'Spinner': { type: '', declaredBy: 'org.apache.royale.jewel.Spinner'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.jewel.Spinner.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./Spinner.js.map
