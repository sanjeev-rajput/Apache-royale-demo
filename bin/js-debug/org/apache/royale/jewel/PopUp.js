/**
 * Generated by Apache Royale Compiler from org/apache/royale/jewel/PopUp.as
 * org.apache.royale.jewel.PopUp
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.jewel.PopUp');
/* Royale Dependency List: org.apache.royale.core.UIBase,org.apache.royale.core.WrappedHTMLElement,org.apache.royale.events.Event,org.apache.royale.html.util.addElementToWrapper*/

goog.require('org.apache.royale.core.StyledUIBase');



/**
 *  constructor.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.9.6
 * @constructor
 * @extends {org.apache.royale.core.StyledUIBase}
 */
org.apache.royale.jewel.PopUp = function() {
  org.apache.royale.jewel.PopUp.base(this, 'constructor');
  this.typeNames = "jewel popup";
};
goog.inherits(org.apache.royale.jewel.PopUp, org.apache.royale.core.StyledUIBase);


/**
 * @private
 * @type {boolean}
 */
org.apache.royale.jewel.PopUp.prototype.org_apache_royale_jewel_PopUp__modal;


/**
 * @private
 * @type {boolean}
 */
org.apache.royale.jewel.PopUp.prototype.org_apache_royale_jewel_PopUp__open = false;


/**
 * @private
 * @type {org.apache.royale.core.UIBase}
 */
org.apache.royale.jewel.PopUp.prototype.org_apache_royale_jewel_PopUp__content;


/**
 * @royaleignorecoercion org.apache.royale.core.WrappedHTMLElement
 * @royaleignorecoercion org.apache.royale.html.util.addElementToWrapper
 * @protected
 * @override
 */
org.apache.royale.jewel.PopUp.prototype.createElement = function() {
  org.apache.royale.html.util.addElementToWrapper(this, 'div');
  return this.element;
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
org.apache.royale.jewel.PopUp.prototype.modal;


org.apache.royale.jewel.PopUp.prototype.get__modal = function() {
  return this.org_apache_royale_jewel_PopUp__modal;
};


org.apache.royale.jewel.PopUp.prototype.set__modal = function(value) {
  this.org_apache_royale_jewel_PopUp__modal = value;
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
org.apache.royale.jewel.PopUp.prototype.open;


org.apache.royale.jewel.PopUp.prototype.get__open = function() {
  return this.org_apache_royale_jewel_PopUp__open;
};


org.apache.royale.jewel.PopUp.prototype.set__open = function(value) {
  if (this.org_apache_royale_jewel_PopUp__open != value) {
    this.org_apache_royale_jewel_PopUp__open = value;
    this.org_apache_royale_jewel_PopUp__open ? this.dispatchEvent(new org.apache.royale.events.Event("openPopUp")) : this.dispatchEvent(new org.apache.royale.events.Event("closePopUp"));
  }
};


/**
 * @nocollapse
 * @export
 * @type {org.apache.royale.core.UIBase}
 */
org.apache.royale.jewel.PopUp.prototype.content;


org.apache.royale.jewel.PopUp.prototype.get__content = function() {
  return this.org_apache_royale_jewel_PopUp__content;
};


org.apache.royale.jewel.PopUp.prototype.set__content = function(value) {
  if (this.org_apache_royale_jewel_PopUp__content != value) {
    this.org_apache_royale_jewel_PopUp__content = value;
    this.org_apache_royale_jewel_PopUp__content.className = "jewel popupcontent";
  }
};


Object.defineProperties(org.apache.royale.jewel.PopUp.prototype, /** @lends {org.apache.royale.jewel.PopUp.prototype} */ {
/**
 * @type {boolean}
 */
modal: {
get: org.apache.royale.jewel.PopUp.prototype.get__modal,
set: org.apache.royale.jewel.PopUp.prototype.set__modal},
/**
 * @type {boolean}
 */
open: {
get: org.apache.royale.jewel.PopUp.prototype.get__open,
set: org.apache.royale.jewel.PopUp.prototype.set__open},
/**
 * @type {org.apache.royale.core.UIBase}
 */
content: {
get: org.apache.royale.jewel.PopUp.prototype.get__content,
set: org.apache.royale.jewel.PopUp.prototype.set__content}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.jewel.PopUp.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'PopUp', qName: 'org.apache.royale.jewel.PopUp', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.jewel.PopUp.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'modal': { type: 'Boolean', access: 'readwrite', declaredBy: 'org.apache.royale.jewel.PopUp'},
        'open': { type: 'Boolean', access: 'readwrite', declaredBy: 'org.apache.royale.jewel.PopUp', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'openPopUp' } ] }, { name: 'Bindable', args: [ { key: '', value: 'closePopUp' } ] } ]; }},
        'content': { type: 'org.apache.royale.core.UIBase', access: 'readwrite', declaredBy: 'org.apache.royale.jewel.PopUp'}
      };
    },
    methods: function () {
      return {
        'PopUp': { type: '', declaredBy: 'org.apache.royale.jewel.PopUp'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.jewel.PopUp.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./PopUp.js.map
