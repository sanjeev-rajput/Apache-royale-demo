/**
 * Generated by Apache Royale Compiler from org/apache/royale/svg/elements/Circle.as
 * org.apache.royale.svg.elements.Circle
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.svg.elements.Circle');
/* Royale Dependency List: org.apache.royale.core.WrappedHTMLElement,org.apache.royale.html.util.addSvgElementToWrapper*/

goog.require('org.apache.royale.svg.elements.SVGBase');



/**
 * @constructor
 * @extends {org.apache.royale.svg.elements.SVGBase}
 */
org.apache.royale.svg.elements.Circle = function() {
  org.apache.royale.svg.elements.Circle.base(this, 'constructor');
};
goog.inherits(org.apache.royale.svg.elements.Circle, org.apache.royale.svg.elements.SVGBase);


/**
 * @protected
 * @override
 */
org.apache.royale.svg.elements.Circle.prototype.createElement = function() {
  return org.apache.royale.html.util.addSvgElementToWrapper(this, 'circle');
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
org.apache.royale.svg.elements.Circle.prototype.cx;


org.apache.royale.svg.elements.Circle.prototype.get__cx = function() {
  return this.element.getAttribute("cx");
};


org.apache.royale.svg.elements.Circle.prototype.set__cx = function(value) {
  this.element.setAttribute("cx", value);
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
org.apache.royale.svg.elements.Circle.prototype.cy;


org.apache.royale.svg.elements.Circle.prototype.get__cy = function() {
  return this.element.getAttribute("cy");
};


org.apache.royale.svg.elements.Circle.prototype.set__cy = function(value) {
  this.element.setAttribute("cy", value);
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
org.apache.royale.svg.elements.Circle.prototype.r;


org.apache.royale.svg.elements.Circle.prototype.get__r = function() {
  return this.element.getAttribute("r");
};


org.apache.royale.svg.elements.Circle.prototype.set__r = function(value) {
  this.element.setAttribute("r", value);
};


Object.defineProperties(org.apache.royale.svg.elements.Circle.prototype, /** @lends {org.apache.royale.svg.elements.Circle.prototype} */ {
/**
 * @type {string}
 */
cx: {
get: org.apache.royale.svg.elements.Circle.prototype.get__cx,
set: org.apache.royale.svg.elements.Circle.prototype.set__cx},
/**
 * @type {string}
 */
cy: {
get: org.apache.royale.svg.elements.Circle.prototype.get__cy,
set: org.apache.royale.svg.elements.Circle.prototype.set__cy},
/**
 * @type {string}
 */
r: {
get: org.apache.royale.svg.elements.Circle.prototype.get__r,
set: org.apache.royale.svg.elements.Circle.prototype.set__r}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.svg.elements.Circle.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'Circle', qName: 'org.apache.royale.svg.elements.Circle', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.svg.elements.Circle.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'cx': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.royale.svg.elements.Circle'},
        'cy': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.royale.svg.elements.Circle'},
        'r': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.royale.svg.elements.Circle'}
      };
    },
    methods: function () {
      return {
        'Circle': { type: '', declaredBy: 'org.apache.royale.svg.elements.Circle'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.svg.elements.Circle.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./Circle.js.map
