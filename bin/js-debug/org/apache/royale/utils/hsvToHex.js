/**
 * Generated by Apache Royale Compiler from org/apache/royale/utils/hsvToHex.as
 * org.apache.royale.utils.hsvToHex
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.utils.hsvToHex');
/* Royale Dependency List: */



/**
 *  Converts HSV values to RGB values.
 *  @asparam h: A uint from 0 to 360 representing the hue value.
 *  @asparam s: A uint from 0 to 100 representing the saturation value.
 *  @asparam v: A uint from 0 to 100 representing the lightness value.
 *  @asreturn Returns a hex value
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.9.6
 *  @royalesuppressexport
 * @param {number} h
 * @param {number} s
 * @param {number} v
 * @return {number}
 */
org.apache.royale.utils.hsvToHex = function(h, s, v) {
  var /** @type {number} */ r = 0;
  var /** @type {number} */ g = 0;
  var /** @type {number} */ b = 0;
  var /** @type {number} */ tempS = s / 100;
  var /** @type {number} */ tempV = v / 100;
  var /** @type {number} */ hi = (Math.floor(h / 60) % 6) >> 0;
  var /** @type {number} */ f = h / 60 - Math.floor(h / 60);
  var /** @type {number} */ p = (tempV * (1 - tempS));
  var /** @type {number} */ q = (tempV * (1 - f * tempS));
  var /** @type {number} */ t = (tempV * (1 - (1 - f) * tempS));
  switch (hi) {
    case 0:
      r = tempV;
      g = t;
      b = p;
      break;
    case 1:
      r = q;
      g = tempV;
      b = p;
      break;
    case 2:
      r = p;
      g = tempV;
      b = t;
      break;
    case 3:
      r = p;
      g = q;
      b = tempV;
      break;
    case 4:
      r = t;
      g = p;
      b = tempV;
      break;
    case 5:
      r = tempV;
      g = p;
      b = q;
      break;
  }
  return (Math.round(r * 255) << 16 | Math.round(g * 255) << 8 | Math.round(b * 255)) >>> 0;
}
