/**
 * Generated by Apache Royale Compiler from org/apache/royale/utils/ObjectMap.as
 * org.apache.royale.utils.ObjectMap
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.utils.ObjectMap');
/* Royale Dependency List: org.apache.royale.utils.UIDUtil,org.apache.royale.utils.Language*/




/**
 * @constructor
 * @param {boolean=} weak
 * @param {boolean=} forceEnumerable
 */
org.apache.royale.utils.ObjectMap = function(weak, forceEnumerable) {
  weak = typeof weak !== 'undefined' ? weak : false;
  forceEnumerable = typeof forceEnumerable !== 'undefined' ? forceEnumerable : false;
  
  this.get = org.apache.royale.utils.Language.closure(this.org_apache_royale_utils_ObjectMap_objectGet, this, 'org_apache_royale_utils_ObjectMap_objectGet');
  this.set = org.apache.royale.utils.Language.closure(this.org_apache_royale_utils_ObjectMap_objectSet, this, 'org_apache_royale_utils_ObjectMap_objectSet');
  this.has = org.apache.royale.utils.Language.closure(this.org_apache_royale_utils_ObjectMap_objectHas, this, 'org_apache_royale_utils_ObjectMap_objectHas');
  this.delete = org.apache.royale.utils.Language.closure(this.org_apache_royale_utils_ObjectMap_objectDelete, this, 'org_apache_royale_utils_ObjectMap_objectDelete');
  this.forEach = org.apache.royale.utils.Language.closure(this.org_apache_royale_utils_ObjectMap_objectForEach, this, 'org_apache_royale_utils_ObjectMap_objectForEach');
  this.org_apache_royale_utils_ObjectMap__weak = weak;
  this.org_apache_royale_utils_ObjectMap__forceEnumerable = forceEnumerable;
  
  this.org_apache_royale_utils_ObjectMap_makeMap();
};


/**
 * @private
 */
org.apache.royale.utils.ObjectMap.prototype.org_apache_royale_utils_ObjectMap_makeMap = function() {
  if (this.org_apache_royale_utils_ObjectMap__weak && !this.org_apache_royale_utils_ObjectMap__forceEnumerable && typeof(WeakMap) == "function") {
    this.org_apache_royale_utils_ObjectMap__map = new WeakMap();
    this.org_apache_royale_utils_ObjectMap_assignFunctions();
    return;
  }
  this.org_apache_royale_utils_ObjectMap__weak = false;
  if (typeof(Map) == "function") {
    this.org_apache_royale_utils_ObjectMap__map = new Map();
    this.org_apache_royale_utils_ObjectMap_assignFunctions();
  } else {
    this.org_apache_royale_utils_ObjectMap__map = {};
    this.org_apache_royale_utils_ObjectMap__usesObjects = true;
  }
};


/**
 * @private
 * @type {boolean}
 */
org.apache.royale.utils.ObjectMap.prototype.org_apache_royale_utils_ObjectMap__weak;


/**
 * @private
 * @type {boolean}
 */
org.apache.royale.utils.ObjectMap.prototype.org_apache_royale_utils_ObjectMap__forceEnumerable;


/**
 * @private
 * @type {Object}
 */
org.apache.royale.utils.ObjectMap.prototype.org_apache_royale_utils_ObjectMap__map;


/**
 * @private
 * @type {boolean}
 */
org.apache.royale.utils.ObjectMap.prototype.org_apache_royale_utils_ObjectMap__usesObjects = false;


/**
 * @type {Function}
 */
org.apache.royale.utils.ObjectMap.prototype.get;


/**
 * @type {Function}
 */
org.apache.royale.utils.ObjectMap.prototype.set;


/**
 * @type {Function}
 */
org.apache.royale.utils.ObjectMap.prototype.has;


/**
 * @type {Function}
 */
org.apache.royale.utils.ObjectMap.prototype.delete;


/**
 * @type {Function}
 */
org.apache.royale.utils.ObjectMap.prototype.forEach;


/**
 * @private
 */
org.apache.royale.utils.ObjectMap.prototype.org_apache_royale_utils_ObjectMap_assignFunctions = function() {
  this.get = this.org_apache_royale_utils_ObjectMap__map.get.bind(this.org_apache_royale_utils_ObjectMap__map);
  this.has = this.org_apache_royale_utils_ObjectMap__map.has.bind(this.org_apache_royale_utils_ObjectMap__map);
  this.set = this.org_apache_royale_utils_ObjectMap__map.set.bind(this.org_apache_royale_utils_ObjectMap__map);
  this.delete = this.org_apache_royale_utils_ObjectMap__map.delete.bind(this.org_apache_royale_utils_ObjectMap__map);
  this.forEach = (this.org_apache_royale_utils_ObjectMap__weak ? null : this.org_apache_royale_utils_ObjectMap__map.forEach.bind(this.org_apache_royale_utils_ObjectMap__map));
};


/**
 * @private
 * @param {Object} key
 */
org.apache.royale.utils.ObjectMap.prototype.org_apache_royale_utils_ObjectMap_objectDelete = function(key) {
  delete this.org_apache_royale_utils_ObjectMap__map[key];
};


/**
 * @private
 * @param {Object} key
 * @return {*}
 */
org.apache.royale.utils.ObjectMap.prototype.org_apache_royale_utils_ObjectMap_objectGet = function(key) {
  switch (key.constructor) {
    case Number:
    
    case String:
      return this.org_apache_royale_utils_ObjectMap__map[key];
    case Object:
      if (key.object_map_uid)
        return this.org_apache_royale_utils_ObjectMap__map[key["object_map_uid"]];
      else
        return undefined;
    default:
      return undefined;
  }
};


/**
 * @private
 * @param {Object} key
 * @return {boolean}
 */
org.apache.royale.utils.ObjectMap.prototype.org_apache_royale_utils_ObjectMap_objectHas = function(key) {
  return this.org_apache_royale_utils_ObjectMap__map[key] === undefined;
};


/**
 * @private
 * @param {Object} key
 * @param {*} value
 */
org.apache.royale.utils.ObjectMap.prototype.org_apache_royale_utils_ObjectMap_objectSet = function(key, value) {
  switch (key.constructor) {
    case Number:
    
    case String:
      this.org_apache_royale_utils_ObjectMap__map[key] = value;
    case Object:
      if (!key.object_map_uid)
        key.object_map_uid = org.apache.royale.utils.UIDUtil.createUID();
      this.org_apache_royale_utils_ObjectMap__map[key["object_map_uid"]] = value;
    default:
      return;
  }
};


/**
 * @private
 * @param {Function} callback
 * @param {Object=} thisArg
 */
org.apache.royale.utils.ObjectMap.prototype.org_apache_royale_utils_ObjectMap_objectForEach = function(callback, thisArg) {
  thisArg = typeof thisArg !== 'undefined' ? thisArg : null;
  org.apache.royale.utils.Language.trace("ObjectMap::objectForEach() not implemented in this browser");
};


/**
 */
org.apache.royale.utils.ObjectMap.prototype.clear = function() {
  if (this.org_apache_royale_utils_ObjectMap__usesObjects)
    this.org_apache_royale_utils_ObjectMap__map = {}; else if (this.org_apache_royale_utils_ObjectMap__weak) {
    this.org_apache_royale_utils_ObjectMap__map = new WeakMap();
    this.org_apache_royale_utils_ObjectMap_assignFunctions();
  } else {
    this.org_apache_royale_utils_ObjectMap__map = new Map();
    this.org_apache_royale_utils_ObjectMap_assignFunctions();
  }
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.utils.ObjectMap.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'ObjectMap', qName: 'org.apache.royale.utils.ObjectMap', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.utils.ObjectMap.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'get': { type: 'Function', get_set: function (/** org.apache.royale.utils.ObjectMap */ inst, /** * */ v) {return v !== undefined ? inst.get = v : inst.get;}},
        'set': { type: 'Function', get_set: function (/** org.apache.royale.utils.ObjectMap */ inst, /** * */ v) {return v !== undefined ? inst.set = v : inst.set;}},
        'has': { type: 'Function', get_set: function (/** org.apache.royale.utils.ObjectMap */ inst, /** * */ v) {return v !== undefined ? inst.has = v : inst.has;}},
        'delete': { type: 'Function', get_set: function (/** org.apache.royale.utils.ObjectMap */ inst, /** * */ v) {return v !== undefined ? inst.delete = v : inst.delete;}},
        'forEach': { type: 'Function', get_set: function (/** org.apache.royale.utils.ObjectMap */ inst, /** * */ v) {return v !== undefined ? inst.forEach = v : inst.forEach;}}
      };
    },
    methods: function () {
      return {
        'ObjectMap': { type: '', declaredBy: 'org.apache.royale.utils.ObjectMap', parameters: function () { return [ 'Boolean', true ,'Boolean', true ]; }},
        'clear': { type: 'void', declaredBy: 'org.apache.royale.utils.ObjectMap'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.utils.ObjectMap.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./ObjectMap.js.map
