/**
 * Generated by Apache Royale Compiler from org/apache/royale/utils/IBinaryDataOutput.as
 * org.apache.royale.utils.IBinaryDataOutput
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.utils.IBinaryDataOutput');
/* Royale Dependency List: org.apache.royale.utils.BinaryData*/




/**
 * @interface
 */
org.apache.royale.utils.IBinaryDataOutput = function() {
};
/**
 * @param {org.apache.royale.utils.BinaryData} bytes
 * @param {number=} offset
 * @param {number=} length
 */
org.apache.royale.utils.IBinaryDataOutput.prototype.writeBinaryData = function(bytes, offset, length) {
};
/**
 * @param {boolean} value
 */
org.apache.royale.utils.IBinaryDataOutput.prototype.writeBoolean = function(value) {
};
/**
 * @param {number} value
 */
org.apache.royale.utils.IBinaryDataOutput.prototype.writeByte = function(value) {
};
/**
 * @param {number} value
 */
org.apache.royale.utils.IBinaryDataOutput.prototype.writeShort = function(value) {
};
/**
 * @param {number} value
 */
org.apache.royale.utils.IBinaryDataOutput.prototype.writeInt = function(value) {
};
/**
 * @param {number} value
 */
org.apache.royale.utils.IBinaryDataOutput.prototype.writeUnsignedInt = function(value) {
};
/**
 * @param {number} value
 */
org.apache.royale.utils.IBinaryDataOutput.prototype.writeFloat = function(value) {
};
/**
 * @param {number} value
 */
org.apache.royale.utils.IBinaryDataOutput.prototype.writeDouble = function(value) {
};
/**
 * @param {string} value
 */
org.apache.royale.utils.IBinaryDataOutput.prototype.writeUTF = function(value) {
};
/**
 * @param {string} value
 */
org.apache.royale.utils.IBinaryDataOutput.prototype.writeUTFBytes = function(value) {
};
/**  * @type {string}
 */org.apache.royale.utils.IBinaryDataOutput.prototype.endian;


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.utils.IBinaryDataOutput.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'IBinaryDataOutput', qName: 'org.apache.royale.utils.IBinaryDataOutput', kind: 'interface' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.utils.IBinaryDataOutput.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'endian': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.royale.utils.IBinaryDataOutput'}
      };
    },
    methods: function () {
      return {
        'writeBinaryData': { type: 'void', declaredBy: 'org.apache.royale.utils.IBinaryDataOutput', parameters: function () { return [ 'org.apache.royale.utils.BinaryData', false ,'uint', true ,'uint', true ]; }},
        'writeBoolean': { type: 'void', declaredBy: 'org.apache.royale.utils.IBinaryDataOutput', parameters: function () { return [ 'Boolean', false ]; }},
        'writeByte': { type: 'void', declaredBy: 'org.apache.royale.utils.IBinaryDataOutput', parameters: function () { return [ 'int', false ]; }},
        'writeShort': { type: 'void', declaredBy: 'org.apache.royale.utils.IBinaryDataOutput', parameters: function () { return [ 'int', false ]; }},
        'writeInt': { type: 'void', declaredBy: 'org.apache.royale.utils.IBinaryDataOutput', parameters: function () { return [ 'int', false ]; }},
        'writeUnsignedInt': { type: 'void', declaredBy: 'org.apache.royale.utils.IBinaryDataOutput', parameters: function () { return [ 'uint', false ]; }},
        'writeFloat': { type: 'void', declaredBy: 'org.apache.royale.utils.IBinaryDataOutput', parameters: function () { return [ 'Number', false ]; }},
        'writeDouble': { type: 'void', declaredBy: 'org.apache.royale.utils.IBinaryDataOutput', parameters: function () { return [ 'Number', false ]; }},
        'writeUTF': { type: 'void', declaredBy: 'org.apache.royale.utils.IBinaryDataOutput', parameters: function () { return [ 'String', false ]; }},
        'writeUTFBytes': { type: 'void', declaredBy: 'org.apache.royale.utils.IBinaryDataOutput', parameters: function () { return [ 'String', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.utils.IBinaryDataOutput.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./IBinaryDataOutput.js.map
