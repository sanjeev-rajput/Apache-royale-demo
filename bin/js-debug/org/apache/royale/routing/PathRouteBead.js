/**
 * Generated by Apache Royale Compiler from org/apache/royale/routing/PathRouteBead.as
 * org.apache.royale.routing.PathRouteBead
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.routing.PathRouteBead');
/* Royale Dependency List: org.apache.royale.core.IStrand,org.apache.royale.events.ValueEvent,org.apache.royale.routing.IRouter,org.apache.royale.utils.Language,XML*/

goog.require('org.apache.royale.core.Bead');
goog.require('org.apache.royale.routing.IPathRouteBead');



/**
 * @constructor
 * @extends {org.apache.royale.core.Bead}
 * @implements {org.apache.royale.routing.IPathRouteBead}
 */
org.apache.royale.routing.PathRouteBead = function() {
  org.apache.royale.routing.PathRouteBead.base(this, 'constructor');
};
goog.inherits(org.apache.royale.routing.PathRouteBead, org.apache.royale.core.Bead);


/**
 * @protected
 * @param {org.apache.royale.events.ValueEvent} ev
 */
org.apache.royale.routing.PathRouteBead.prototype.urlReceived = function(ev) {
  var /** @type {string} */ hash = org.apache.royale.utils.Language.string(ev.value);
  var /** @type {string} */ delim = "";
  var /** @type {number} */ index = (hash.indexOf("?")) >> 0;
  if (index == -1)
    index = (hash.indexOf("#")) >> 0;
  if (index != -1)
    hash = hash.slice(0, index);
  this.host.routeState.path = hash;
};


/**
 * @protected
 * @param {org.apache.royale.events.ValueEvent} ev
 */
org.apache.royale.routing.PathRouteBead.prototype.urlNeeded = function(ev) {
  var /** @type {string} */ hash = org.apache.royale.utils.Language.string(ev.value);
  var /** @type {string} */ trailing = "";
  var /** @type {string} */ delim = "";
  if (hash.indexOf("?") != -1)
    delim = "?";
  else if (hash.indexOf("#") != -1)
    delim = "#";
  if (delim) {
    trailing = hash.slice(hash.indexOf(delim));
    hash = hash.slice(0, hash.indexOf(delim));
  }
  if (!hash) {
    hash = this.host.routeState.path;
  }
  ev.value = hash + trailing;
};


/**
 * @nocollapse
 * @type {org.apache.royale.routing.IRouter}
 */
org.apache.royale.routing.PathRouteBead.prototype.host;


org.apache.royale.routing.PathRouteBead.prototype.get__host = function() {
  return this._strand;
};


org.apache.royale.routing.PathRouteBead.prototype.set__strand = function(value) {
  this._strand = value;
  this.listenOnStrand("urlNeeded", org.apache.royale.utils.Language.closure(this.urlNeeded, this, 'urlNeeded'));
  this.listenOnStrand("urlReceived", org.apache.royale.utils.Language.closure(this.urlReceived, this, 'urlReceived'));
};


Object.defineProperties(org.apache.royale.routing.PathRouteBead.prototype, /** @lends {org.apache.royale.routing.PathRouteBead.prototype} */ {
/**
 * @type {org.apache.royale.routing.IRouter}
 */
host: {
get: org.apache.royale.routing.PathRouteBead.prototype.get__host},
/**
 * @type {org.apache.royale.core.IStrand}
 */
strand: {
set: org.apache.royale.routing.PathRouteBead.prototype.set__strand}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.routing.PathRouteBead.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'PathRouteBead', qName: 'org.apache.royale.routing.PathRouteBead', kind: 'class' }], interfaces: [org.apache.royale.routing.IPathRouteBead] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.routing.PathRouteBead.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'strand': { type: 'org.apache.royale.core.IStrand', access: 'writeonly', declaredBy: 'org.apache.royale.routing.PathRouteBead'}
      };
    },
    methods: function () {
      return {
        'PathRouteBead': { type: '', declaredBy: 'org.apache.royale.routing.PathRouteBead'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.routing.PathRouteBead.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./PathRouteBead.js.map
