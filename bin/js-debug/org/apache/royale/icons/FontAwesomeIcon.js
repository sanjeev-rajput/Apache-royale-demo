/**
 * Generated by Apache Royale Compiler from org/apache/royale/icons/FontAwesomeIcon.as
 * org.apache.royale.icons.FontAwesomeIcon
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.icons.FontAwesomeIcon');
/* Royale Dependency List: */

goog.require('org.apache.royale.icons.FontIconBase');



/**
 *  constructor.
 * 
 *  <inject_script>
 *   var link = document.createElement("link");
 *   link.setAttribute("rel", "stylesheet");
 *   link.setAttribute("type", "text/css");
 *   link.setAttribute("href", "https://pro.fontawesome.com/releases/v5.15.4/css/all.css");
 *   document.head.appendChild(link);
 *  </inject_script>
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.9.7
 * @constructor
 * @extends {org.apache.royale.icons.FontIconBase}
 */
org.apache.royale.icons.FontAwesomeIcon = function() {
  
  this._faStyle = org.apache.royale.icons.FontAwesomeIcon.REGULAR;
  org.apache.royale.icons.FontAwesomeIcon.base(this, 'constructor');
  this.typeNames = "fonticon";
};
goog.inherits(org.apache.royale.icons.FontAwesomeIcon, org.apache.royale.icons.FontIconBase);


/**
 * @type {number}
 */
org.apache.royale.icons.FontAwesomeIcon.prototype.v = 5;


/**
 * @nocollapse
 * @const
 * @type {string}
 */
org.apache.royale.icons.FontAwesomeIcon.BRANDS = "b";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
org.apache.royale.icons.FontAwesomeIcon.SOLID = "s";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
org.apache.royale.icons.FontAwesomeIcon.REGULAR = "r";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
org.apache.royale.icons.FontAwesomeIcon.LIGHT = "l";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
org.apache.royale.icons.FontAwesomeIcon.DUOTONE = "d";


/**
 *  The method called when added to a parent.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.9.6
 * @override
 */
org.apache.royale.icons.FontAwesomeIcon.prototype.addedToParent = function() {
  org.apache.royale.icons.FontAwesomeIcon.superClass_.addedToParent.apply(this);
  this.setUpClassName();
};


/**
 * update font awesome style.
 */
org.apache.royale.icons.FontAwesomeIcon.prototype.setUpClassName = function() {
  this.removeClass('fa' + this._oldFaStyle);
  if (this.v != 4)
    this.addClass('fa' + this._faStyle);
  else
    this.addClass('fa');
};


/**
 * @protected
 * @type {string}
 */
org.apache.royale.icons.FontAwesomeIcon.prototype._faStyle;


/**
 * @protected
 * @type {string}
 */
org.apache.royale.icons.FontAwesomeIcon.prototype._oldFaStyle;


/**
 * @protected
 * @type {boolean}
 */
org.apache.royale.icons.FontAwesomeIcon.prototype._pullRight;


/**
 * @protected
 * @type {boolean}
 */
org.apache.royale.icons.FontAwesomeIcon.prototype._pullLeft;


/**
 * @protected
 * @type {boolean}
 */
org.apache.royale.icons.FontAwesomeIcon.prototype._border;


/**
 * @nocollapse
 * @const
 * @type {string}
 */
org.apache.royale.icons.FontAwesomeIcon.SIZE_LG = 'lg';


/**
 * @nocollapse
 * @const
 * @type {string}
 */
org.apache.royale.icons.FontAwesomeIcon.SIZE_X2 = '2x';


/**
 * @nocollapse
 * @const
 * @type {string}
 */
org.apache.royale.icons.FontAwesomeIcon.SIZE_X3 = '3x';


/**
 * @nocollapse
 * @const
 * @type {string}
 */
org.apache.royale.icons.FontAwesomeIcon.SIZE_X4 = '4x';


/**
 * @nocollapse
 * @const
 * @type {string}
 */
org.apache.royale.icons.FontAwesomeIcon.SIZE_X5 = '5x';


/**
 * @protected
 * @type {string}
 */
org.apache.royale.icons.FontAwesomeIcon.prototype._relativeSize;


/**
 * @protected
 * @type {boolean}
 */
org.apache.royale.icons.FontAwesomeIcon.prototype._fixedWidth;


/**
 * @protected
 * @type {boolean}
 */
org.apache.royale.icons.FontAwesomeIcon.prototype._flipHorizontal;


/**
 * @protected
 * @type {boolean}
 */
org.apache.royale.icons.FontAwesomeIcon.prototype._flipVertical;


/**
 * @nocollapse
 * @const
 * @type {string}
 */
org.apache.royale.icons.FontAwesomeIcon.ROTATE_90 = "90";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
org.apache.royale.icons.FontAwesomeIcon.ROTATE_180 = "180";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
org.apache.royale.icons.FontAwesomeIcon.ROTATE_270 = "270";


/**
 * @protected
 * @type {string}
 */
org.apache.royale.icons.FontAwesomeIcon.prototype._rotation;


/**
 * @protected
 * @type {boolean}
 */
org.apache.royale.icons.FontAwesomeIcon.prototype._spin;


/**
 * @protected
 * @type {boolean}
 */
org.apache.royale.icons.FontAwesomeIcon.prototype._pulse;


/**
 * @protected
 * @type {number}
 */
org.apache.royale.icons.FontAwesomeIcon.prototype._stackLevel = 0;


/**
 * @protected
 * @type {boolean}
 */
org.apache.royale.icons.FontAwesomeIcon.prototype._inverse;


/**
 * @protected
 * @type {boolean}
 */
org.apache.royale.icons.FontAwesomeIcon.prototype._swapOpacity;


/**
 * @protected
 * @type {boolean}
 */
org.apache.royale.icons.FontAwesomeIcon.prototype._kit;


/**
 * @protected
 * @type {boolean}
 */
org.apache.royale.icons.FontAwesomeIcon.prototype._kitDuotone;


/**
 * @nocollapse
 * @export
 * @type {string}
 */
org.apache.royale.icons.FontAwesomeIcon.prototype.faStyle;


org.apache.royale.icons.FontAwesomeIcon.prototype.get__faStyle = function() {
  return this._faStyle;
};


org.apache.royale.icons.FontAwesomeIcon.prototype.set__faStyle = function(value) {
  this._oldFaStyle = this._faStyle;
  this._faStyle = value;
  this.setUpClassName();
};


org.apache.royale.icons.FontAwesomeIcon.prototype.set__text = function(value) {
  this.removeClass('fa-' + this._text);
  this._text = value;
  if (this._text)
    this.addClass('fa-' + this._text);
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
org.apache.royale.icons.FontAwesomeIcon.prototype.pullRight;


org.apache.royale.icons.FontAwesomeIcon.prototype.get__pullRight = function() {
  return this._pullRight;
};


org.apache.royale.icons.FontAwesomeIcon.prototype.set__pullRight = function(value) {
  this._pullRight = value;
  this.toggleClass('fa-pull-right', this._pullRight);
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
org.apache.royale.icons.FontAwesomeIcon.prototype.pullLeft;


org.apache.royale.icons.FontAwesomeIcon.prototype.get__pullLeft = function() {
  return this._pullLeft;
};


org.apache.royale.icons.FontAwesomeIcon.prototype.set__pullLeft = function(value) {
  this._pullLeft = value;
  this.toggleClass('fa-pull-left', this._pullLeft);
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
org.apache.royale.icons.FontAwesomeIcon.prototype.border;


org.apache.royale.icons.FontAwesomeIcon.prototype.get__border = function() {
  return this._border;
};


org.apache.royale.icons.FontAwesomeIcon.prototype.set__border = function(value) {
  this._border = value;
  this.toggleClass('fa-border', this._border);
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
org.apache.royale.icons.FontAwesomeIcon.prototype.relativeSize;


org.apache.royale.icons.FontAwesomeIcon.prototype.get__relativeSize = function() {
  return this._relativeSize;
};


org.apache.royale.icons.FontAwesomeIcon.prototype.set__relativeSize = function(value) {
  if (this._relativeSize)
    this.removeClass('fa-' + this._relativeSize);
  this.removeClass('fa-' + value);
  this._relativeSize = value;
  this.addClass('fa-' + value);
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
org.apache.royale.icons.FontAwesomeIcon.prototype.fixedWidth;


org.apache.royale.icons.FontAwesomeIcon.prototype.get__fixedWidth = function() {
  return this._fixedWidth;
};


org.apache.royale.icons.FontAwesomeIcon.prototype.set__fixedWidth = function(value) {
  this._fixedWidth = value;
  this.toggleClass('fa-fw', this._fixedWidth);
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
org.apache.royale.icons.FontAwesomeIcon.prototype.flipHorizontal;


org.apache.royale.icons.FontAwesomeIcon.prototype.get__flipHorizontal = function() {
  return this._flipHorizontal;
};


org.apache.royale.icons.FontAwesomeIcon.prototype.set__flipHorizontal = function(value) {
  this._flipHorizontal = value;
  this.toggleClass('fa-flip-horizontal', this._flipHorizontal);
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
org.apache.royale.icons.FontAwesomeIcon.prototype.flipVertical;


org.apache.royale.icons.FontAwesomeIcon.prototype.get__flipVertical = function() {
  return this._flipVertical;
};


org.apache.royale.icons.FontAwesomeIcon.prototype.set__flipVertical = function(value) {
  this._flipVertical = value;
  this.toggleClass('fa-flip-vertical', this._flipVertical);
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
org.apache.royale.icons.FontAwesomeIcon.prototype.rotation;


org.apache.royale.icons.FontAwesomeIcon.prototype.get__rotation = function() {
  return this._rotation;
};


org.apache.royale.icons.FontAwesomeIcon.prototype.set__rotation = function(value) {
  if (this._rotation)
    this.removeClass('fa-rotate-' + this._rotation);
  this.removeClass('fa-rotate-' + value);
  this._rotation = value;
  this.addClass('fa-rotate-' + value);
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
org.apache.royale.icons.FontAwesomeIcon.prototype.spin;


org.apache.royale.icons.FontAwesomeIcon.prototype.get__spin = function() {
  return this._spin;
};


org.apache.royale.icons.FontAwesomeIcon.prototype.set__spin = function(value) {
  this._spin = value;
  this.toggleClass('fa-spin', this._spin);
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
org.apache.royale.icons.FontAwesomeIcon.prototype.pulse;


org.apache.royale.icons.FontAwesomeIcon.prototype.get__pulse = function() {
  return this._pulse;
};


org.apache.royale.icons.FontAwesomeIcon.prototype.set__pulse = function(value) {
  this._pulse = value;
  this.toggleClass('fa-pulse', this._pulse);
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
org.apache.royale.icons.FontAwesomeIcon.prototype.stackLevel;


org.apache.royale.icons.FontAwesomeIcon.prototype.get__stackLevel = function() {
  return this._stackLevel;
};


org.apache.royale.icons.FontAwesomeIcon.prototype.set__stackLevel = function(value) {
  if (value == 1 || value == 2) {
    if (this._stackLevel != 0) {
      this.removeClass('fa-stack-' + String(this._stackLevel) + 'x');
      if (this._stackLevel == 1)
        this.removeClass('fa-inverse');
    }
    this._stackLevel = value;
    this.addClass('fa-stack-' + String(value) + 'x');
    this._inverse ? this.inverse = true : this.inverse = false;
  }
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
org.apache.royale.icons.FontAwesomeIcon.prototype.inverse;


org.apache.royale.icons.FontAwesomeIcon.prototype.get__inverse = function() {
  return this._inverse;
};


org.apache.royale.icons.FontAwesomeIcon.prototype.set__inverse = function(value) {
  this._inverse = value;
  this.removeClass('fa-inverse');
  if (value && this._stackLevel == 1)
    this.addClass('fa-inverse');
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
org.apache.royale.icons.FontAwesomeIcon.prototype.swapOpacity;


org.apache.royale.icons.FontAwesomeIcon.prototype.get__swapOpacity = function() {
  return this._swapOpacity;
};


org.apache.royale.icons.FontAwesomeIcon.prototype.set__swapOpacity = function(value) {
  this._swapOpacity = value;
  this.toggleClass('fa-swap-opacity', this._swapOpacity);
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
org.apache.royale.icons.FontAwesomeIcon.prototype.kit;


org.apache.royale.icons.FontAwesomeIcon.prototype.get__kit = function() {
  return this._kit;
};


org.apache.royale.icons.FontAwesomeIcon.prototype.set__kit = function(value) {
  if (value) {
    if (this.v < 6)
      this.v = 6;
    if (this._kitDuotone)
      this.kitDuotone = false;
  }
  this._kit = value;
  this.toggleClass('fa-kit', this._kit);
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
org.apache.royale.icons.FontAwesomeIcon.prototype.kitDuotone;


org.apache.royale.icons.FontAwesomeIcon.prototype.get__kitDuotone = function() {
  return this._kitDuotone;
};


org.apache.royale.icons.FontAwesomeIcon.prototype.set__kitDuotone = function(value) {
  if (value) {
    if (this.v < 6)
      this.v = 6;
    if (this._kit)
      this.kit = false;
  }
  this._kitDuotone = value;
  this.toggleClass('fa-kit-duotone', this._kitDuotone);
};


Object.defineProperties(org.apache.royale.icons.FontAwesomeIcon.prototype, /** @lends {org.apache.royale.icons.FontAwesomeIcon.prototype} */ {
/**
 * @type {string}
 */
faStyle: {
get: org.apache.royale.icons.FontAwesomeIcon.prototype.get__faStyle,
set: org.apache.royale.icons.FontAwesomeIcon.prototype.set__faStyle},
/**
 * @type {string}
 */
text: {
get: org.apache.royale.icons.FontIconBase.prototype.get__text,
set: org.apache.royale.icons.FontAwesomeIcon.prototype.set__text},
/**
 * @type {boolean}
 */
pullRight: {
get: org.apache.royale.icons.FontAwesomeIcon.prototype.get__pullRight,
set: org.apache.royale.icons.FontAwesomeIcon.prototype.set__pullRight},
/**
 * @type {boolean}
 */
pullLeft: {
get: org.apache.royale.icons.FontAwesomeIcon.prototype.get__pullLeft,
set: org.apache.royale.icons.FontAwesomeIcon.prototype.set__pullLeft},
/**
 * @type {boolean}
 */
border: {
get: org.apache.royale.icons.FontAwesomeIcon.prototype.get__border,
set: org.apache.royale.icons.FontAwesomeIcon.prototype.set__border},
/**
 * @type {string}
 */
relativeSize: {
get: org.apache.royale.icons.FontAwesomeIcon.prototype.get__relativeSize,
set: org.apache.royale.icons.FontAwesomeIcon.prototype.set__relativeSize},
/**
 * @type {boolean}
 */
fixedWidth: {
get: org.apache.royale.icons.FontAwesomeIcon.prototype.get__fixedWidth,
set: org.apache.royale.icons.FontAwesomeIcon.prototype.set__fixedWidth},
/**
 * @type {boolean}
 */
flipHorizontal: {
get: org.apache.royale.icons.FontAwesomeIcon.prototype.get__flipHorizontal,
set: org.apache.royale.icons.FontAwesomeIcon.prototype.set__flipHorizontal},
/**
 * @type {boolean}
 */
flipVertical: {
get: org.apache.royale.icons.FontAwesomeIcon.prototype.get__flipVertical,
set: org.apache.royale.icons.FontAwesomeIcon.prototype.set__flipVertical},
/**
 * @type {string}
 */
rotation: {
get: org.apache.royale.icons.FontAwesomeIcon.prototype.get__rotation,
set: org.apache.royale.icons.FontAwesomeIcon.prototype.set__rotation},
/**
 * @type {boolean}
 */
spin: {
get: org.apache.royale.icons.FontAwesomeIcon.prototype.get__spin,
set: org.apache.royale.icons.FontAwesomeIcon.prototype.set__spin},
/**
 * @type {boolean}
 */
pulse: {
get: org.apache.royale.icons.FontAwesomeIcon.prototype.get__pulse,
set: org.apache.royale.icons.FontAwesomeIcon.prototype.set__pulse},
/**
 * @type {number}
 */
stackLevel: {
get: org.apache.royale.icons.FontAwesomeIcon.prototype.get__stackLevel,
set: org.apache.royale.icons.FontAwesomeIcon.prototype.set__stackLevel},
/**
 * @type {boolean}
 */
inverse: {
get: org.apache.royale.icons.FontAwesomeIcon.prototype.get__inverse,
set: org.apache.royale.icons.FontAwesomeIcon.prototype.set__inverse},
/**
 * @type {boolean}
 */
swapOpacity: {
get: org.apache.royale.icons.FontAwesomeIcon.prototype.get__swapOpacity,
set: org.apache.royale.icons.FontAwesomeIcon.prototype.set__swapOpacity},
/**
 * @type {boolean}
 */
kit: {
get: org.apache.royale.icons.FontAwesomeIcon.prototype.get__kit,
set: org.apache.royale.icons.FontAwesomeIcon.prototype.set__kit},
/**
 * @type {boolean}
 */
kitDuotone: {
get: org.apache.royale.icons.FontAwesomeIcon.prototype.get__kitDuotone,
set: org.apache.royale.icons.FontAwesomeIcon.prototype.set__kitDuotone}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.icons.FontAwesomeIcon.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'FontAwesomeIcon', qName: 'org.apache.royale.icons.FontAwesomeIcon', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.icons.FontAwesomeIcon.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'v': { type: 'Number', get_set: function (/** org.apache.royale.icons.FontAwesomeIcon */ inst, /** * */ v) {return v !== undefined ? inst.v = v : inst.v;}}
      };
    },
    accessors: function () {
      return {
        'faStyle': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.royale.icons.FontAwesomeIcon'},
        'text': { type: 'String', access: 'writeonly', declaredBy: 'org.apache.royale.icons.FontAwesomeIcon'},
        'pullRight': { type: 'Boolean', access: 'readwrite', declaredBy: 'org.apache.royale.icons.FontAwesomeIcon'},
        'pullLeft': { type: 'Boolean', access: 'readwrite', declaredBy: 'org.apache.royale.icons.FontAwesomeIcon'},
        'border': { type: 'Boolean', access: 'readwrite', declaredBy: 'org.apache.royale.icons.FontAwesomeIcon'},
        'relativeSize': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.royale.icons.FontAwesomeIcon'},
        'fixedWidth': { type: 'Boolean', access: 'readwrite', declaredBy: 'org.apache.royale.icons.FontAwesomeIcon'},
        'flipHorizontal': { type: 'Boolean', access: 'readwrite', declaredBy: 'org.apache.royale.icons.FontAwesomeIcon'},
        'flipVertical': { type: 'Boolean', access: 'readwrite', declaredBy: 'org.apache.royale.icons.FontAwesomeIcon'},
        'rotation': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.royale.icons.FontAwesomeIcon'},
        'spin': { type: 'Boolean', access: 'readwrite', declaredBy: 'org.apache.royale.icons.FontAwesomeIcon'},
        'pulse': { type: 'Boolean', access: 'readwrite', declaredBy: 'org.apache.royale.icons.FontAwesomeIcon'},
        'stackLevel': { type: 'int', access: 'readwrite', declaredBy: 'org.apache.royale.icons.FontAwesomeIcon'},
        'inverse': { type: 'Boolean', access: 'readwrite', declaredBy: 'org.apache.royale.icons.FontAwesomeIcon'},
        'swapOpacity': { type: 'Boolean', access: 'readwrite', declaredBy: 'org.apache.royale.icons.FontAwesomeIcon'},
        'kit': { type: 'Boolean', access: 'readwrite', declaredBy: 'org.apache.royale.icons.FontAwesomeIcon'},
        'kitDuotone': { type: 'Boolean', access: 'readwrite', declaredBy: 'org.apache.royale.icons.FontAwesomeIcon'}
      };
    },
    methods: function () {
      return {
        'FontAwesomeIcon': { type: '', declaredBy: 'org.apache.royale.icons.FontAwesomeIcon'},
        'addedToParent': { type: 'void', declaredBy: 'org.apache.royale.icons.FontAwesomeIcon'},
        'setUpClassName': { type: 'void', declaredBy: 'org.apache.royale.icons.FontAwesomeIcon'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.icons.FontAwesomeIcon.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./FontAwesomeIcon.js.map
