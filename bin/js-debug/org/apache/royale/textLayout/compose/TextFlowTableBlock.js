/**
 * Generated by Apache Royale Compiler from org/apache/royale/textLayout/compose/TextFlowTableBlock.as
 * org.apache.royale.textLayout.compose.TextFlowTableBlock
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.textLayout.compose.TextFlowTableBlock');
/* Royale Dependency List: org.apache.royale.core.IParentIUIBase,org.apache.royale.graphics.ICompoundGraphic,org.apache.royale.text.engine.ITextLine,org.apache.royale.textLayout.compose.ITextFlowLine,org.apache.royale.textLayout.container.IContainerController,org.apache.royale.textLayout.edit.SelectionFormat,org.apache.royale.textLayout.elements.CellContainer,org.apache.royale.textLayout.elements.CellCoordinates,org.apache.royale.textLayout.elements.IParagraphElement,org.apache.royale.textLayout.elements.ITableCellElement,org.apache.royale.textLayout.elements.ITableElement,org.apache.royale.textLayout.elements.TableBlockContainer,XML*/

goog.require('org.apache.royale.textLayout.compose.TextFlowLine');
goog.require('org.apache.royale.textLayout.compose.ITextFlowTableBlock');



/** Constructor - creates a new TextFlowTableBlock instance. 
 *  <p><strong>Note</strong>: No client should call this. It's exposed for writing your own composer.</p>
 *
 * @asparam index The index in the Table text flow.
 * @constructor
 * @extends {org.apache.royale.textLayout.compose.TextFlowLine}
 * @implements {org.apache.royale.textLayout.compose.ITextFlowTableBlock}
 * @param {number} index
 */
org.apache.royale.textLayout.compose.TextFlowTableBlock = function(index) {
  this.blockIndex = index;
  this.org_apache_royale_textLayout_compose_TextFlowTableBlock__container = new org.apache.royale.textLayout.elements.TableBlockContainer();
  org.apache.royale.textLayout.compose.TextFlowTableBlock.base(this, 'constructor', null, null);
};
goog.inherits(org.apache.royale.textLayout.compose.TextFlowTableBlock, org.apache.royale.textLayout.compose.TextFlowLine);


/**
 * @private
 * @type {number}
 */
org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.org_apache_royale_textLayout_compose_TextFlowTableBlock__textHeight;


/**
 * @inheritDoc
 * @override
 */
org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.initialize = function(paragraph, outerTargetWidth, lineOffset, absoluteStart, numChars, textLine) {
  outerTargetWidth = typeof outerTargetWidth !== 'undefined' ? outerTargetWidth : 0;
  lineOffset = typeof lineOffset !== 'undefined' ? lineOffset : 0;
  absoluteStart = typeof absoluteStart !== 'undefined' ? absoluteStart : 0;
  numChars = typeof numChars !== 'undefined' ? numChars : 0;
  textLine = typeof textLine !== 'undefined' ? textLine : null;
  this.org_apache_royale_textLayout_compose_TextFlowTableBlock__container.userData = this;
  this._lineOffset = lineOffset;
  org.apache.royale.textLayout.compose.TextFlowTableBlock.superClass_.initialize.apply(this, [paragraph, outerTargetWidth, lineOffset, absoluteStart, numChars, textLine]);
};


/**
 * @override
 */
org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.setController = function(cont, colNumber) {
  org.apache.royale.textLayout.compose.TextFlowTableBlock.superClass_.setController.apply(this, [cont, colNumber]);
  if (cont)
    this.controller.addComposedTableBlock(this.container);
};


/**
 * @private
 * @type {org.apache.royale.textLayout.elements.ITableElement}
 */
org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.org_apache_royale_textLayout_compose_TextFlowTableBlock__parentTable;


/**
 * @type {number}
 */
org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.blockIndex = 0;


/**
 * @private
 * @type {org.apache.royale.textLayout.elements.TableBlockContainer}
 */
org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.org_apache_royale_textLayout_compose_TextFlowTableBlock__container;


/**
 * @private
 * @type {Array}
 */
org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.org_apache_royale_textLayout_compose_TextFlowTableBlock__cells;


/**
 * Returns an array of table cells. 
 * @asprivate
 * @private
 * @return {Array}
 */
org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.org_apache_royale_textLayout_compose_TextFlowTableBlock_getCells = function() {
  if (this.org_apache_royale_textLayout_compose_TextFlowTableBlock__cells == null) {
    this.org_apache_royale_textLayout_compose_TextFlowTableBlock__cells = [];
  }
  return this.org_apache_royale_textLayout_compose_TextFlowTableBlock__cells;
};


/**
 * Returns a vector of table cell elements in the given cell range. 
 * @param {org.apache.royale.textLayout.elements.CellCoordinates} anchorCoords
 * @param {org.apache.royale.textLayout.elements.CellCoordinates} activeCoords
 * @return {Array}
 */
org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.getCellsInRange = function(anchorCoords, activeCoords) {
  if (!this.parentTable)
    return null;
  return this.parentTable.getCellsInRange(anchorCoords, activeCoords, this);
};


/**
 * Clears the cells in the table block. Wraps clearCells(). 
 */
org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.clear = function() {
  this.clearCells();
};


/**
 * Clears the cells in the table block
 */
org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.clearCells = function() {
  while (this.org_apache_royale_textLayout_compose_TextFlowTableBlock__container.numElements) {
    this.org_apache_royale_textLayout_compose_TextFlowTableBlock__container.removeElement(this.org_apache_royale_textLayout_compose_TextFlowTableBlock__container.getElementAt(0));
  }
  this.org_apache_royale_textLayout_compose_TextFlowTableBlock_getCells().length = 0;
};


/**
 * Adds a cell container to table container. This adds it to the display list. 
 * If the cell is already added it does not add it twice. 
 * @param {org.apache.royale.textLayout.elements.CellContainer} cell
 */
org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.addCell = function(cell) {
  var /** @type {Array} */ cells = this.org_apache_royale_textLayout_compose_TextFlowTableBlock_getCells();
  if (cells.indexOf(cell) < 0) {
    cells.push(cell);
    this.org_apache_royale_textLayout_compose_TextFlowTableBlock__container.addElement(cell);
  }
};


/**
 * @param {*} backgroundInfo
 */
org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.drawBackground = function(backgroundInfo) {
};


/**
 * Triggers drawing of composed cell contents
 */
org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.updateCompositionShapes = function() {
  var /** @type {Array} */ cells = this.org_apache_royale_textLayout_compose_TextFlowTableBlock_getCells();
  var foreachiter0_target = cells;
  for (var foreachiter0 in foreachiter0_target) 
  {
  var cell = foreachiter0_target[foreachiter0];
  {
    cell.cellElement.updateCompositionShapes();
  }}
  
};


/**
 * Returns a vector of table cell elements.
 * @return {Array}
 */
org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.getTableCells = function() {
  var /** @type {Array} */ tCells = [];
  var /** @type {Array} */ cells = this.org_apache_royale_textLayout_compose_TextFlowTableBlock_getCells();
  var foreachiter1_target = cells;
  for (var foreachiter1 in foreachiter1_target) 
  {
  var cellContainer = foreachiter1_target[foreachiter1];
  {
    tCells.push(cellContainer.cellElement);
  }}
  
  return tCells;
};


/**
 * @override
 */
org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.hiliteBlockSelection = function(selObj, selFormat, container, begIdx, endIdx, prevLine, nextLine) {
};


org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.get__composable = function() {
  return false;
};


/**
 * @nocollapse
 * @export
 * @type {org.apache.royale.textLayout.elements.TableBlockContainer}
 */
org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.container;


org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.get__container = function() {
  return this.org_apache_royale_textLayout_compose_TextFlowTableBlock__container;
};


org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.get__height = function() {
  return this.org_apache_royale_textLayout_compose_TextFlowTableBlock__textHeight;
};


org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.set__height = function(value) {
  this.org_apache_royale_textLayout_compose_TextFlowTableBlock__textHeight = value;
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.width;


org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.get__width = function() {
  return this.org_apache_royale_textLayout_compose_TextFlowTableBlock__container.width;
};


org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.set__width = function(value) {
  this.org_apache_royale_textLayout_compose_TextFlowTableBlock__container.width = value;
};


org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.get__x = function() {
  return this.org_apache_royale_textLayout_compose_TextFlowTableBlock__container.x;
};


org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.set__x = function(value) {
  org.apache.royale.textLayout.compose.TextFlowTableBlock.superClass_.set__x.apply(this, [this.org_apache_royale_textLayout_compose_TextFlowTableBlock__container.x = value]);
};


org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.get__y = function() {
  return this.org_apache_royale_textLayout_compose_TextFlowTableBlock__container.y;
};


org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.set__y = function(value) {
  org.apache.royale.textLayout.compose.TextFlowTableBlock.superClass_.set__y.apply(this, [this.org_apache_royale_textLayout_compose_TextFlowTableBlock__container.y = value]);
};


org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.get__textHeight = function() {
  return this.org_apache_royale_textLayout_compose_TextFlowTableBlock__textHeight;
};


/**
 * @nocollapse
 * @export
 * @type {org.apache.royale.textLayout.elements.ITableElement}
 */
org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.parentTable;


org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.get__parentTable = function() {
  return this.org_apache_royale_textLayout_compose_TextFlowTableBlock__parentTable;
};


org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.set__parentTable = function(parentTable) {
  this.org_apache_royale_textLayout_compose_TextFlowTableBlock__parentTable = parentTable;
};


Object.defineProperties(org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype, /** @lends {org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype} */ {
/**
 * @type {boolean}
 */
composable: {
get: org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.get__composable},
/**
 * @type {org.apache.royale.textLayout.elements.TableBlockContainer}
 */
container: {
get: org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.get__container},
/**
 * @type {number}
 */
height: {
get: org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.get__height,
set: org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.set__height},
/**
 * @type {number}
 */
width: {
get: org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.get__width,
set: org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.set__width},
/**
 * @type {number}
 */
x: {
get: org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.get__x,
set: org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.set__x},
/**
 * @type {number}
 */
y: {
get: org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.get__y,
set: org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.set__y},
/**
 * @type {number}
 */
textHeight: {
get: org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.get__textHeight},
/**
 * @type {org.apache.royale.textLayout.elements.ITableElement}
 */
parentTable: {
get: org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.get__parentTable,
set: org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.set__parentTable}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'TextFlowTableBlock', qName: 'org.apache.royale.textLayout.compose.TextFlowTableBlock', kind: 'class' }], interfaces: [org.apache.royale.textLayout.compose.ITextFlowTableBlock] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'blockIndex': { type: 'uint', get_set: function (/** org.apache.royale.textLayout.compose.TextFlowTableBlock */ inst, /** * */ v) {return v !== undefined ? inst.blockIndex = v : inst.blockIndex;}}
      };
    },
    accessors: function () {
      return {
        'composable': { type: 'Boolean', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.compose.TextFlowTableBlock'},
        'container': { type: 'org.apache.royale.textLayout.elements.TableBlockContainer', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.compose.TextFlowTableBlock'},
        'height': { type: 'Number', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.compose.TextFlowTableBlock'},
        'width': { type: 'Number', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.compose.TextFlowTableBlock'},
        'x': { type: 'Number', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.compose.TextFlowTableBlock'},
        'y': { type: 'Number', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.compose.TextFlowTableBlock'},
        'textHeight': { type: 'Number', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.compose.TextFlowTableBlock'},
        'parentTable': { type: 'org.apache.royale.textLayout.elements.ITableElement', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.compose.TextFlowTableBlock'}
      };
    },
    methods: function () {
      return {
        'TextFlowTableBlock': { type: '', declaredBy: 'org.apache.royale.textLayout.compose.TextFlowTableBlock', parameters: function () { return [ 'uint', false ]; }},
        'initialize': { type: 'void', declaredBy: 'org.apache.royale.textLayout.compose.TextFlowTableBlock', parameters: function () { return [ 'org.apache.royale.textLayout.elements.IParagraphElement', false ,'Number', true ,'Number', true ,'int', true ,'int', true ,'org.apache.royale.text.engine.ITextLine', true ]; }},
        'setController': { type: 'void', declaredBy: 'org.apache.royale.textLayout.compose.TextFlowTableBlock', parameters: function () { return [ 'org.apache.royale.textLayout.container.IContainerController', false ,'int', false ]; }},
        'getCellsInRange': { type: 'Vector.<org.apache.royale.textLayout.elements.ITableCellElement>', declaredBy: 'org.apache.royale.textLayout.compose.TextFlowTableBlock', parameters: function () { return [ 'org.apache.royale.textLayout.elements.CellCoordinates', false ,'org.apache.royale.textLayout.elements.CellCoordinates', false ]; }},
        'clear': { type: 'void', declaredBy: 'org.apache.royale.textLayout.compose.TextFlowTableBlock'},
        'clearCells': { type: 'void', declaredBy: 'org.apache.royale.textLayout.compose.TextFlowTableBlock'},
        'addCell': { type: 'void', declaredBy: 'org.apache.royale.textLayout.compose.TextFlowTableBlock', parameters: function () { return [ 'org.apache.royale.textLayout.elements.CellContainer', false ]; }},
        'drawBackground': { type: 'void', declaredBy: 'org.apache.royale.textLayout.compose.TextFlowTableBlock', parameters: function () { return [ '*', false ]; }},
        'updateCompositionShapes': { type: 'void', declaredBy: 'org.apache.royale.textLayout.compose.TextFlowTableBlock'},
        'getTableCells': { type: 'Vector.<org.apache.royale.textLayout.elements.ITableCellElement>', declaredBy: 'org.apache.royale.textLayout.compose.TextFlowTableBlock'},
        'hiliteBlockSelection': { type: 'void', declaredBy: 'org.apache.royale.textLayout.compose.TextFlowTableBlock', parameters: function () { return [ 'org.apache.royale.graphics.ICompoundGraphic', false ,'org.apache.royale.textLayout.edit.SelectionFormat', false ,'org.apache.royale.core.IParentIUIBase', false ,'int', false ,'int', false ,'org.apache.royale.textLayout.compose.ITextFlowLine', false ,'org.apache.royale.textLayout.compose.ITextFlowLine', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.textLayout.compose.TextFlowTableBlock.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./TextFlowTableBlock.js.map
