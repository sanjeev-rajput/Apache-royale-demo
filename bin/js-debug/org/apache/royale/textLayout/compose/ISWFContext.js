/**
 * Generated by Apache Royale Compiler from org/apache/royale/textLayout/compose/ISWFContext.as
 * org.apache.royale.textLayout.compose.ISWFContext
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.textLayout.compose.ISWFContext');
/* Royale Dependency List: XML*/



/**
 * @interface
 */
org.apache.royale.textLayout.compose.ISWFContext = function() {
};
/**
 *  A way to call a method in a client controlled context.
 *
 *  @asparam fn The function or method to call
 *  @asparam thisArg The this pointer for the function
 *  @asparam argArray The arguments for the function
 *  @asparam returns If true, the function returns a value
 *
 *  @asreturn Whatever the function returns, if anything.
 *
 *  @see Function#apply()
 
 *  @langversion 3.0
 *  @playerversion Flash 10
 *  @playerversion AIR 1.5
 * @param {Function} fn
 * @param {Object} thisArg
 * @param {Array} argArray
 * @param {boolean=} returns
 * @return {*}
 */
org.apache.royale.textLayout.compose.ISWFContext.prototype.callInContext = function(fn, thisArg, argArray, returns) {
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.textLayout.compose.ISWFContext.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'ISWFContext', qName: 'org.apache.royale.textLayout.compose.ISWFContext', kind: 'interface' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.textLayout.compose.ISWFContext.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    methods: function () {
      return {
        'callInContext': { type: '*', declaredBy: 'org.apache.royale.textLayout.compose.ISWFContext', parameters: function () { return [ 'Function', false ,'Object', false ,'Array', false ,'Boolean', true ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.textLayout.compose.ISWFContext.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./ISWFContext.js.map
