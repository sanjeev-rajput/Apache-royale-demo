/**
 * Generated by Apache Royale Compiler from org/apache/royale/textLayout/compose/VerticalJustifier.as
 * org.apache.royale.textLayout.compose.VerticalJustifier
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.textLayout.compose.VerticalJustifier');
/* Royale Dependency List: org.apache.royale.textLayout.compose.FloatCompositionData,org.apache.royale.textLayout.compose.ITextFlowLine,org.apache.royale.textLayout.compose.IVerticalJustificationLine,org.apache.royale.textLayout.container.IContainerController,org.apache.royale.textLayout.elements.IInlineGraphicElement,org.apache.royale.textLayout.formats.BlockProgression,org.apache.royale.textLayout.formats.Float,org.apache.royale.textLayout.formats.VerticalAlign,org.apache.royale.utils.Language,XML*/
goog.provide('org.apache.royale.textLayout.compose.VerticalJustifier.RL_VJHelper');
goog.provide('org.apache.royale.textLayout.compose.VerticalJustifier.TB_VJHelper');




/**
 * @constructor
 */
org.apache.royale.textLayout.compose.VerticalJustifier = function() {
};


/** Vertical justify the subset of lines from startIndext to startIndex to numLines according to the rule specified by verticalAlignAttr.  
 * The assumption is that they are all the lines in a single column of cont. 
 * @see text.formats.VerticalAlign
 * @asreturn adjustment applied to the first line in the column.
 * @nocollapse
 * @param {org.apache.royale.textLayout.container.IContainerController} controller
 * @param {string} verticalAlignAttr
 * @param {Array} lines
 * @param {number} startIndex
 * @param {number} numLines
 * @param {number} beginFloatIndex
 * @param {number} endFloatIndex
 * @return {number}
 */
org.apache.royale.textLayout.compose.VerticalJustifier.applyVerticalAlignmentToColumn = function(controller, verticalAlignAttr, lines, startIndex, numLines, beginFloatIndex, endFloatIndex) {
  var /** @type {number} */ i = 0;
  var /** @type {Object} */ helper;
  if (controller.rootElement.computedFormat.blockProgression == org.apache.royale.textLayout.formats.BlockProgression.RL)
    helper = new org.apache.royale.textLayout.compose.VerticalJustifier.RL_VJHelper(controller);
  else
    helper = new org.apache.royale.textLayout.compose.VerticalJustifier.TB_VJHelper(controller);
  
  //var /** @type {number} */ i = 0;
  var /** @type {number} */ rslt;
  switch (verticalAlignAttr) {
    case org.apache.royale.textLayout.formats.VerticalAlign.MIDDLE:
    
    case org.apache.royale.textLayout.formats.VerticalAlign.BOTTOM:
      var /** @type {org.apache.royale.textLayout.compose.IVerticalJustificationLine} */ lastLine = lines[(startIndex + numLines) - 1];
      var /** @type {number} */ bottom = Number(helper.getBottom(lastLine, controller, beginFloatIndex, endFloatIndex));
      rslt = Number((verticalAlignAttr == org.apache.royale.textLayout.formats.VerticalAlign.MIDDLE) ? helper.computeMiddleAdjustment(bottom) : helper.computeBottomAdjustment(bottom));
      for (i = startIndex; i < startIndex + numLines; i++)
        helper.applyAdjustment(lines[i]);
      for (var /** @type {number} */ floatIndex = beginFloatIndex; floatIndex < endFloatIndex; floatIndex++) {
        var /** @type {org.apache.royale.textLayout.compose.FloatCompositionData} */ floatInfo = controller.getFloatAt(floatIndex);
        if (floatInfo.floatType != org.apache.royale.textLayout.formats.Float.NONE)
          helper.applyAdjustmentToFloat(floatInfo);
      }
      break;
    case org.apache.royale.textLayout.formats.VerticalAlign.JUSTIFY:
      rslt = Number(helper.computeJustifyAdjustment(lines, startIndex, numLines));
      helper.applyJustifyAdjustment(lines, startIndex, numLines);
      break;
  }
  return rslt;
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.textLayout.compose.VerticalJustifier.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'VerticalJustifier', qName: 'org.apache.royale.textLayout.compose.VerticalJustifier', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.textLayout.compose.VerticalJustifier.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    methods: function () {
      return {
        '|applyVerticalAlignmentToColumn': { type: 'Number', declaredBy: 'org.apache.royale.textLayout.compose.VerticalJustifier', parameters: function () { return [ 'org.apache.royale.textLayout.container.IContainerController', false ,'String', false ,'Array', false ,'int', false ,'int', false ,'int', false ,'int', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.textLayout.compose.VerticalJustifier.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./VerticalJustifier.js.map


/**
 * @constructor
 * @param {org.apache.royale.textLayout.container.IContainerController} tf
 */
org.apache.royale.textLayout.compose.VerticalJustifier.TB_VJHelper = function(tf) {
  this.TB_VJHelper__textFrame = tf;
};


/**
 * @private
 * @type {org.apache.royale.textLayout.container.IContainerController}
 */
org.apache.royale.textLayout.compose.VerticalJustifier.TB_VJHelper.prototype.TB_VJHelper__textFrame;


/**
 * @private
 * @type {number}
 */
org.apache.royale.textLayout.compose.VerticalJustifier.TB_VJHelper.prototype.TB_VJHelper_adj;


/**
 * @param {org.apache.royale.textLayout.compose.IVerticalJustificationLine} line
 * @param {org.apache.royale.textLayout.container.IContainerController} controller
 * @param {number} beginFloat
 * @param {number} endFloat
 * @return {number}
 */
org.apache.royale.textLayout.compose.VerticalJustifier.TB_VJHelper.prototype.getBottom = function(line, controller, beginFloat, endFloat) {
  var /** @type {number} */ maxBottom = this.TB_VJHelper_getBaseline(line) + line.descent;
  for (var /** @type {number} */ i = beginFloat; i < endFloat; ++i) {
    var /** @type {org.apache.royale.textLayout.compose.FloatCompositionData} */ floatInfo = controller.getFloatAt(i);
    if (floatInfo.floatType != org.apache.royale.textLayout.formats.Float.NONE) {
      var /** @type {org.apache.royale.textLayout.elements.IInlineGraphicElement} */ ilg = controller.rootElement.findLeaf(floatInfo.absolutePosition);
      maxBottom = Math.max(maxBottom, floatInfo.y + ilg.elementHeightWithMarginsAndPadding());
    }
  }
  return maxBottom;
};


/**
 * @param {org.apache.royale.textLayout.compose.IVerticalJustificationLine} line
 * @return {number}
 */
org.apache.royale.textLayout.compose.VerticalJustifier.TB_VJHelper.prototype.getBottomOfLine = function(line) {
  return this.TB_VJHelper_getBaseline(line) + line.descent;
};


/**
 * @private
 * @param {org.apache.royale.textLayout.compose.IVerticalJustificationLine} line
 * @return {number}
 */
org.apache.royale.textLayout.compose.VerticalJustifier.TB_VJHelper.prototype.TB_VJHelper_getBaseline = function(line) {
  if (org.apache.royale.utils.Language.is(line, org.apache.royale.textLayout.compose.ITextFlowLine))
    return line.y + line.ascent;
  else
    return line.y;
};


/**
 * @private
 * @param {org.apache.royale.textLayout.compose.IVerticalJustificationLine} line
 * @param {number} pos
 */
org.apache.royale.textLayout.compose.VerticalJustifier.TB_VJHelper.prototype.TB_VJHelper_setBaseline = function(line, pos) {
  if (org.apache.royale.utils.Language.is(line, org.apache.royale.textLayout.compose.ITextFlowLine))
    line.y = pos - line.ascent;
  else
    line.y = pos;
};


/**
 * @param {number} contentBottom
 * @return {number}
 */
org.apache.royale.textLayout.compose.VerticalJustifier.TB_VJHelper.prototype.computeMiddleAdjustment = function(contentBottom) {
  var /** @type {number} */ frameBottom = this.TB_VJHelper__textFrame.compositionHeight - Number(this.TB_VJHelper__textFrame.getTotalPaddingBottom());
  this.TB_VJHelper_adj = (frameBottom - contentBottom) / 2;
  if (this.TB_VJHelper_adj < 0)
    this.TB_VJHelper_adj = 0;
  return this.TB_VJHelper_adj;
};


/**
 * @param {number} contentBottom
 * @return {number}
 */
org.apache.royale.textLayout.compose.VerticalJustifier.TB_VJHelper.prototype.computeBottomAdjustment = function(contentBottom) {
  var /** @type {number} */ frameBottom = this.TB_VJHelper__textFrame.compositionHeight - Number(this.TB_VJHelper__textFrame.getTotalPaddingBottom());
  this.TB_VJHelper_adj = frameBottom - contentBottom;
  if (this.TB_VJHelper_adj < 0)
    this.TB_VJHelper_adj = 0;
  return this.TB_VJHelper_adj;
};


/**
 * @param {org.apache.royale.textLayout.compose.IVerticalJustificationLine} line
 */
org.apache.royale.textLayout.compose.VerticalJustifier.TB_VJHelper.prototype.applyAdjustment = function(line) {
  line.y = line.y + this.TB_VJHelper_adj;
};


/**
 * @param {org.apache.royale.textLayout.compose.FloatCompositionData} floatInfo
 */
org.apache.royale.textLayout.compose.VerticalJustifier.TB_VJHelper.prototype.applyAdjustmentToFloat = function(floatInfo) {
  floatInfo.y += this.TB_VJHelper_adj;
};


/**
 * @param {Array} lineArray
 * @param {number} firstLineIndex
 * @param {number} numLines
 * @return {number}
 */
org.apache.royale.textLayout.compose.VerticalJustifier.TB_VJHelper.prototype.computeJustifyAdjustment = function(lineArray, firstLineIndex, numLines) {
  this.TB_VJHelper_adj = 0;
  if (numLines == 1) {
    return 0;
  }
  var /** @type {org.apache.royale.textLayout.compose.IVerticalJustificationLine} */ firstLine = lineArray[firstLineIndex];
  var /** @type {number} */ firstBaseLine = this.TB_VJHelper_getBaseline(firstLine);
  var /** @type {org.apache.royale.textLayout.compose.IVerticalJustificationLine} */ lastLine = lineArray[firstLineIndex + numLines - 1];
  var /** @type {number} */ frameBottom = this.TB_VJHelper__textFrame.compositionHeight - Number(this.TB_VJHelper__textFrame.getTotalPaddingBottom());
  var /** @type {number} */ allowance = frameBottom - this.getBottomOfLine(lastLine);
  if (allowance < 0) {
    return 0;
  }
  var /** @type {number} */ lastBaseLine = this.TB_VJHelper_getBaseline(lastLine);
  this.TB_VJHelper_adj = allowance / (lastBaseLine - firstBaseLine);
  return this.TB_VJHelper_adj;
};


/**
 * @param {Array} lineArray
 * @param {number} firstLineIndex
 * @param {number} numLines
 */
org.apache.royale.textLayout.compose.VerticalJustifier.TB_VJHelper.prototype.applyJustifyAdjustment = function(lineArray, firstLineIndex, numLines) {
  if (numLines == 1 || this.TB_VJHelper_adj == 0)
    return;
  var /** @type {org.apache.royale.textLayout.compose.IVerticalJustificationLine} */ firstLine = lineArray[firstLineIndex];
  var /** @type {number} */ prevBaseLine = this.TB_VJHelper_getBaseline(firstLine);
  var /** @type {number} */ prevBaseLineUnjustified = prevBaseLine;
  var /** @type {org.apache.royale.textLayout.compose.IVerticalJustificationLine} */ line;
  var /** @type {number} */ currBaseLine;
  var /** @type {number} */ currBaseLineUnjustified;
  for (var /** @type {number} */ i = 1; i < numLines; i++) {
    line = lineArray[i + firstLineIndex];
    currBaseLineUnjustified = this.TB_VJHelper_getBaseline(line);
    currBaseLine = prevBaseLine + (currBaseLineUnjustified - prevBaseLineUnjustified) * (1 + this.TB_VJHelper_adj);
    this.TB_VJHelper_setBaseline(line, currBaseLine);
    prevBaseLineUnjustified = currBaseLineUnjustified;
    prevBaseLine = currBaseLine;
  }
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.textLayout.compose.VerticalJustifier.TB_VJHelper.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'TB_VJHelper', qName: 'org.apache.royale.textLayout.compose.VerticalJustifier.TB_VJHelper', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.textLayout.compose.VerticalJustifier.TB_VJHelper.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    methods: function () {
      return {
        'TB_VJHelper': { type: 'void', declaredBy: 'org.apache.royale.textLayout.compose.VerticalJustifier.TB_VJHelper', parameters: function () { return [ 'org.apache.royale.textLayout.container.IContainerController', false ]; }},
        'getBottom': { type: 'Number', declaredBy: 'org.apache.royale.textLayout.compose.VerticalJustifier.TB_VJHelper', parameters: function () { return [ 'org.apache.royale.textLayout.compose.IVerticalJustificationLine', false ,'org.apache.royale.textLayout.container.IContainerController', false ,'int', false ,'int', false ]; }},
        'getBottomOfLine': { type: 'Number', declaredBy: 'org.apache.royale.textLayout.compose.VerticalJustifier.TB_VJHelper', parameters: function () { return [ 'org.apache.royale.textLayout.compose.IVerticalJustificationLine', false ]; }},
        'computeMiddleAdjustment': { type: 'Number', declaredBy: 'org.apache.royale.textLayout.compose.VerticalJustifier.TB_VJHelper', parameters: function () { return [ 'Number', false ]; }},
        'computeBottomAdjustment': { type: 'Number', declaredBy: 'org.apache.royale.textLayout.compose.VerticalJustifier.TB_VJHelper', parameters: function () { return [ 'Number', false ]; }},
        'applyAdjustment': { type: 'void', declaredBy: 'org.apache.royale.textLayout.compose.VerticalJustifier.TB_VJHelper', parameters: function () { return [ 'org.apache.royale.textLayout.compose.IVerticalJustificationLine', false ]; }},
        'applyAdjustmentToFloat': { type: 'void', declaredBy: 'org.apache.royale.textLayout.compose.VerticalJustifier.TB_VJHelper', parameters: function () { return [ 'org.apache.royale.textLayout.compose.FloatCompositionData', false ]; }},
        'computeJustifyAdjustment': { type: 'Number', declaredBy: 'org.apache.royale.textLayout.compose.VerticalJustifier.TB_VJHelper', parameters: function () { return [ 'Array', false ,'int', false ,'int', false ]; }},
        'applyJustifyAdjustment': { type: 'void', declaredBy: 'org.apache.royale.textLayout.compose.VerticalJustifier.TB_VJHelper', parameters: function () { return [ 'Array', false ,'int', false ,'int', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.textLayout.compose.VerticalJustifier.TB_VJHelper.prototype.ROYALE_COMPILE_FLAGS = 10;



/**
 * @constructor
 * @param {org.apache.royale.textLayout.container.IContainerController} tf
 */
org.apache.royale.textLayout.compose.VerticalJustifier.RL_VJHelper = function(tf) {
  this.RL_VJHelper__textFrame = tf;
};


/**
 * @private
 * @type {org.apache.royale.textLayout.container.IContainerController}
 */
org.apache.royale.textLayout.compose.VerticalJustifier.RL_VJHelper.prototype.RL_VJHelper__textFrame;


/**
 * @private
 * @type {number}
 */
org.apache.royale.textLayout.compose.VerticalJustifier.RL_VJHelper.prototype.RL_VJHelper_adj = 0;


/**
 * @param {org.apache.royale.textLayout.compose.IVerticalJustificationLine} lastLine
 * @param {org.apache.royale.textLayout.container.IContainerController} controller
 * @param {number} beginFloat
 * @param {number} endFloat
 * @return {number}
 */
org.apache.royale.textLayout.compose.VerticalJustifier.RL_VJHelper.prototype.getBottom = function(lastLine, controller, beginFloat, endFloat) {
  var /** @type {number} */ frameWidth = this.RL_VJHelper__textFrame.compositionWidth - Number(this.RL_VJHelper__textFrame.getTotalPaddingLeft());
  var /** @type {number} */ maxLeft = (frameWidth + lastLine.x - lastLine.descent);
  for (var /** @type {number} */ i = beginFloat; i < endFloat; ++i) {
    var /** @type {org.apache.royale.textLayout.compose.FloatCompositionData} */ floatInfo = controller.getFloatAt(i);
    if (floatInfo.floatType != org.apache.royale.textLayout.formats.Float.NONE)
      maxLeft = Math.min(maxLeft, floatInfo.x + frameWidth);
  }
  return maxLeft;
};


/**
 * @param {number} contentLeft
 * @return {number}
 */
org.apache.royale.textLayout.compose.VerticalJustifier.RL_VJHelper.prototype.computeMiddleAdjustment = function(contentLeft) {
  this.RL_VJHelper_adj = contentLeft / 2;
  if (this.RL_VJHelper_adj < 0)
    this.RL_VJHelper_adj = 0;
  return -this.RL_VJHelper_adj;
};


/**
 * @param {number} contentLeft
 * @return {number}
 */
org.apache.royale.textLayout.compose.VerticalJustifier.RL_VJHelper.prototype.computeBottomAdjustment = function(contentLeft) {
  this.RL_VJHelper_adj = contentLeft;
  if (this.RL_VJHelper_adj < 0)
    this.RL_VJHelper_adj = 0;
  return -this.RL_VJHelper_adj;
};


/**
 * @param {org.apache.royale.textLayout.compose.IVerticalJustificationLine} line
 */
org.apache.royale.textLayout.compose.VerticalJustifier.RL_VJHelper.prototype.applyAdjustment = function(line) {
  line.x = (line.x - this.RL_VJHelper_adj);
};


/**
 * @param {org.apache.royale.textLayout.compose.FloatCompositionData} floatInfo
 */
org.apache.royale.textLayout.compose.VerticalJustifier.RL_VJHelper.prototype.applyAdjustmentToFloat = function(floatInfo) {
  floatInfo.x -= this.RL_VJHelper_adj;
};


/**
 * @param {Array} lineArray
 * @param {number} firstLineIndex
 * @param {number} numLines
 * @return {number}
 */
org.apache.royale.textLayout.compose.VerticalJustifier.RL_VJHelper.prototype.computeJustifyAdjustment = function(lineArray, firstLineIndex, numLines) {
  this.RL_VJHelper_adj = 0;
  if (numLines == 1)
    return 0;
  var /** @type {org.apache.royale.textLayout.compose.IVerticalJustificationLine} */ firstLine = lineArray[firstLineIndex];
  var /** @type {number} */ firstBaseLine = firstLine.x;
  var /** @type {org.apache.royale.textLayout.compose.IVerticalJustificationLine} */ lastLine = lineArray[firstLineIndex + numLines - 1];
  var /** @type {number} */ frameLeft = Number(this.RL_VJHelper__textFrame.getTotalPaddingLeft()) - this.RL_VJHelper__textFrame.compositionWidth;
  var /** @type {number} */ allowance = (lastLine.x - lastLine.descent) - frameLeft;
  if (allowance < 0) {
    return 0;
  }
  var /** @type {number} */ lastBaseLine = lastLine.x;
  this.RL_VJHelper_adj = allowance / (firstBaseLine - lastBaseLine);
  return -this.RL_VJHelper_adj;
};


/**
 * @param {Array} lineArray
 * @param {number} firstLineIndex
 * @param {number} numLines
 */
org.apache.royale.textLayout.compose.VerticalJustifier.RL_VJHelper.prototype.applyJustifyAdjustment = function(lineArray, firstLineIndex, numLines) {
  if (numLines == 1 || this.RL_VJHelper_adj == 0)
    return;
  var /** @type {org.apache.royale.textLayout.compose.IVerticalJustificationLine} */ firstLine = lineArray[firstLineIndex];
  var /** @type {number} */ prevBaseLine = firstLine.x;
  var /** @type {number} */ prevBaseLineUnjustified = prevBaseLine;
  var /** @type {org.apache.royale.textLayout.compose.IVerticalJustificationLine} */ line;
  var /** @type {number} */ currBaseLine;
  var /** @type {number} */ currBaseLineUnjustified;
  for (var /** @type {number} */ i = 1; i < numLines; i++) {
    line = lineArray[i + firstLineIndex];
    currBaseLineUnjustified = line.x;
    currBaseLine = prevBaseLine - (prevBaseLineUnjustified - currBaseLineUnjustified) * (1 + this.RL_VJHelper_adj);
    line.x = currBaseLine;
    prevBaseLineUnjustified = currBaseLineUnjustified;
    prevBaseLine = currBaseLine;
  }
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.textLayout.compose.VerticalJustifier.RL_VJHelper.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'RL_VJHelper', qName: 'org.apache.royale.textLayout.compose.VerticalJustifier.RL_VJHelper', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.textLayout.compose.VerticalJustifier.RL_VJHelper.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    methods: function () {
      return {
        'RL_VJHelper': { type: 'void', declaredBy: 'org.apache.royale.textLayout.compose.VerticalJustifier.RL_VJHelper', parameters: function () { return [ 'org.apache.royale.textLayout.container.IContainerController', false ]; }},
        'getBottom': { type: 'Number', declaredBy: 'org.apache.royale.textLayout.compose.VerticalJustifier.RL_VJHelper', parameters: function () { return [ 'org.apache.royale.textLayout.compose.IVerticalJustificationLine', false ,'org.apache.royale.textLayout.container.IContainerController', false ,'int', false ,'int', false ]; }},
        'computeMiddleAdjustment': { type: 'Number', declaredBy: 'org.apache.royale.textLayout.compose.VerticalJustifier.RL_VJHelper', parameters: function () { return [ 'Number', false ]; }},
        'computeBottomAdjustment': { type: 'Number', declaredBy: 'org.apache.royale.textLayout.compose.VerticalJustifier.RL_VJHelper', parameters: function () { return [ 'Number', false ]; }},
        'applyAdjustment': { type: 'void', declaredBy: 'org.apache.royale.textLayout.compose.VerticalJustifier.RL_VJHelper', parameters: function () { return [ 'org.apache.royale.textLayout.compose.IVerticalJustificationLine', false ]; }},
        'applyAdjustmentToFloat': { type: 'void', declaredBy: 'org.apache.royale.textLayout.compose.VerticalJustifier.RL_VJHelper', parameters: function () { return [ 'org.apache.royale.textLayout.compose.FloatCompositionData', false ]; }},
        'computeJustifyAdjustment': { type: 'Number', declaredBy: 'org.apache.royale.textLayout.compose.VerticalJustifier.RL_VJHelper', parameters: function () { return [ 'Array', false ,'int', false ,'int', false ]; }},
        'applyJustifyAdjustment': { type: 'void', declaredBy: 'org.apache.royale.textLayout.compose.VerticalJustifier.RL_VJHelper', parameters: function () { return [ 'Array', false ,'int', false ,'int', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.textLayout.compose.VerticalJustifier.RL_VJHelper.prototype.ROYALE_COMPILE_FLAGS = 10;
