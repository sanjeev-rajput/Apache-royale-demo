/**
 * Generated by Apache Royale Compiler from org/apache/royale/textLayout/compose/TextLineRecycler.as
 * org.apache.royale.textLayout.compose.TextLineRecycler
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.textLayout.compose.TextLineRecycler');
/* Royale Dependency List: org.apache.royale.text.engine.ITextLine,org.apache.royale.utils.ObjectMap,XML*/




/**
 * @constructor
 */
org.apache.royale.textLayout.compose.TextLineRecycler = function() {
};


/**
 * @private
 * @const
 * @type {boolean}
 */
org.apache.royale.textLayout.compose.TextLineRecycler._textLineRecyclerCanBeEnabled = true;


/**
 * @private
 * @type {boolean}
 */
org.apache.royale.textLayout.compose.TextLineRecycler._textLineRecyclerEnabled;


/**
 * @private
 * @type {org.apache.royale.utils.ObjectMap}
 */
org.apache.royale.textLayout.compose.TextLineRecycler._reusableLineCache;


/**
 * Add a ITextLine to the pool for reuse. TextLines for reuse should have null userData and null parent. 
 * @playerversion Flash 10
 * @playerversion AIR 1.5
 * @langversion 3.0
 * @nocollapse
 * @param {org.apache.royale.text.engine.ITextLine} textLine
 */
org.apache.royale.textLayout.compose.TextLineRecycler.addLineForReuse = function(textLine) {
  return;
};


/**
 * Return a ITextLine from the pool for reuse. 
 * @playerversion Flash 10
 * @playerversion AIR 1.5
 * @langversion 3.0
 * @nocollapse
 * @return {org.apache.royale.text.engine.ITextLine}
 */
org.apache.royale.textLayout.compose.TextLineRecycler.getLineForReuse = function() {
  return null;
};


/** @asprivate empty the reusableLineCache 
 * @nocollapse
 */
org.apache.royale.textLayout.compose.TextLineRecycler.emptyReusableLineCache = function() {
  org.apache.royale.textLayout.compose.TextLineRecycler.reusableLineCache = new org.apache.royale.utils.ObjectMap(true);
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
org.apache.royale.textLayout.compose.TextLineRecycler.textLineRecyclerEnabled;


org.apache.royale.textLayout.compose.TextLineRecycler.get__textLineRecyclerEnabled = function() {
  return org.apache.royale.textLayout.compose.TextLineRecycler._textLineRecyclerEnabled;
};


org.apache.royale.textLayout.compose.TextLineRecycler.set__textLineRecyclerEnabled = function(value) {
  org.apache.royale.textLayout.compose.TextLineRecycler._textLineRecyclerEnabled = value ? org.apache.royale.textLayout.compose.TextLineRecycler._textLineRecyclerCanBeEnabled : false;
};


/**
 * @nocollapse
 * @export
 * @type {org.apache.royale.utils.ObjectMap}
 */
org.apache.royale.textLayout.compose.TextLineRecycler.reusableLineCache;


org.apache.royale.textLayout.compose.TextLineRecycler.get__reusableLineCache = function() {
  if (org.apache.royale.textLayout.compose.TextLineRecycler._reusableLineCache == null)
    org.apache.royale.textLayout.compose.TextLineRecycler._reusableLineCache = new org.apache.royale.utils.ObjectMap(true);
  return org.apache.royale.textLayout.compose.TextLineRecycler._reusableLineCache;
};


org.apache.royale.textLayout.compose.TextLineRecycler.set__reusableLineCache = function(value) {
  org.apache.royale.textLayout.compose.TextLineRecycler._reusableLineCache = value;
};


Object.defineProperties(org.apache.royale.textLayout.compose.TextLineRecycler, /** @lends {org.apache.royale.textLayout.compose.TextLineRecycler} */ {
/**
 * @type {boolean}
 */
textLineRecyclerEnabled: {
get: org.apache.royale.textLayout.compose.TextLineRecycler.get__textLineRecyclerEnabled,
set: org.apache.royale.textLayout.compose.TextLineRecycler.set__textLineRecyclerEnabled},
/**
 * @type {org.apache.royale.utils.ObjectMap}
 */
reusableLineCache: {
get: org.apache.royale.textLayout.compose.TextLineRecycler.get__reusableLineCache,
set: org.apache.royale.textLayout.compose.TextLineRecycler.set__reusableLineCache}}
);

org.apache.royale.textLayout.compose.TextLineRecycler._textLineRecyclerEnabled = org.apache.royale.textLayout.compose.TextLineRecycler._textLineRecyclerCanBeEnabled;




/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.textLayout.compose.TextLineRecycler.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'TextLineRecycler', qName: 'org.apache.royale.textLayout.compose.TextLineRecycler', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.textLayout.compose.TextLineRecycler.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        '|textLineRecyclerEnabled': { type: 'Boolean', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.compose.TextLineRecycler'},
        '|reusableLineCache': { type: 'org.apache.royale.utils.ObjectMap', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.compose.TextLineRecycler'}
      };
    },
    methods: function () {
      return {
        '|addLineForReuse': { type: 'void', declaredBy: 'org.apache.royale.textLayout.compose.TextLineRecycler', parameters: function () { return [ 'org.apache.royale.text.engine.ITextLine', false ]; }},
        '|getLineForReuse': { type: 'org.apache.royale.text.engine.ITextLine', declaredBy: 'org.apache.royale.textLayout.compose.TextLineRecycler'},
        '|emptyReusableLineCache': { type: 'void', declaredBy: 'org.apache.royale.textLayout.compose.TextLineRecycler'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.textLayout.compose.TextLineRecycler.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./TextLineRecycler.js.map
