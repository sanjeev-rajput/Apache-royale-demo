/**
 * Generated by Apache Royale Compiler from org/apache/royale/textLayout/compose/SimpleCompose.as
 * org.apache.royale.textLayout.compose.SimpleCompose
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.textLayout.compose.SimpleCompose');
/* Royale Dependency List: org.apache.royale.text.engine.Constants,org.apache.royale.text.engine.ITextLine,org.apache.royale.textLayout.compose.IFlowComposer,org.apache.royale.textLayout.compose.ITextFlowLine,org.apache.royale.textLayout.compose.Parcel,org.apache.royale.textLayout.compose.ParcelList,org.apache.royale.textLayout.compose.TextFlowLine,org.apache.royale.textLayout.compose.utils.NumberlineUtil,org.apache.royale.textLayout.compose.utils.TextLineUtil,org.apache.royale.textLayout.container.IContainerController,org.apache.royale.textLayout.elements.IFlowGroupElement,org.apache.royale.textLayout.elements.IFlowLeafElement,org.apache.royale.textLayout.elements.IParagraphElement,org.apache.royale.textLayout.elements.ITextFlow,org.apache.royale.textLayout.formats.BlockProgression,org.apache.royale.textLayout.formats.Direction,org.apache.royale.textLayout.formats.ITextLayoutFormat,org.apache.royale.textLayout.formats.VerticalAlign,XML*/
goog.provide('org.apache.royale.textLayout.compose.SimpleCompose.VJHelper');

goog.require('org.apache.royale.textLayout.compose.BaseCompose');
goog.require('org.apache.royale.textLayout.compose.ISimpleCompose');
goog.require('org.apache.royale.textLayout.compose.IVerticalJustificationLine');



/** Constructor. 
 * @constructor
 * @extends {org.apache.royale.textLayout.compose.BaseCompose}
 * @implements {org.apache.royale.textLayout.compose.ISimpleCompose}
 */
org.apache.royale.textLayout.compose.SimpleCompose = function() {
  
  this.workingLine = new org.apache.royale.textLayout.compose.TextFlowLine(null, null);
  org.apache.royale.textLayout.compose.SimpleCompose.base(this, 'constructor');
  this.org_apache_royale_textLayout_compose_SimpleCompose__lines = new Array();
  this.org_apache_royale_textLayout_compose_SimpleCompose__vjLines = new Array();
};
goog.inherits(org.apache.royale.textLayout.compose.SimpleCompose, org.apache.royale.textLayout.compose.BaseCompose);


/**
 * @protected
 * @type {org.apache.royale.textLayout.compose.ITextFlowLine}
 */
org.apache.royale.textLayout.compose.SimpleCompose.prototype.workingLine;


/**
 * @private
 * @type {Array}
 */
org.apache.royale.textLayout.compose.SimpleCompose.prototype.org_apache_royale_textLayout_compose_SimpleCompose__lines;


/**
 * @private
 * @type {Array}
 */
org.apache.royale.textLayout.compose.SimpleCompose.prototype.org_apache_royale_textLayout_compose_SimpleCompose__vjLines;


/**
 * @private
 * @type {number}
 */
org.apache.royale.textLayout.compose.SimpleCompose.prototype.org_apache_royale_textLayout_compose_SimpleCompose_vjBeginLineIndex = 0;


/**
 * @private
 * @type {boolean}
 */
org.apache.royale.textLayout.compose.SimpleCompose.prototype.org_apache_royale_textLayout_compose_SimpleCompose_vjDisableThisParcel = false;


/**
 * @private
 * @type {string}
 */
org.apache.royale.textLayout.compose.SimpleCompose.prototype.org_apache_royale_textLayout_compose_SimpleCompose_vjType;


/**
 * @private
 * @type {number}
 */
org.apache.royale.textLayout.compose.SimpleCompose.prototype.org_apache_royale_textLayout_compose_SimpleCompose__totalLength;


/** @asprivate 
 * @protected
 * @override
 */
org.apache.royale.textLayout.compose.SimpleCompose.prototype.createParcelList = function() {
  return org.apache.royale.textLayout.compose.ParcelList.getParcelList();
};


/** @asprivate 
 * @protected
 * @override
 */
org.apache.royale.textLayout.compose.SimpleCompose.prototype.releaseParcelList = function(list) {
  org.apache.royale.textLayout.compose.ParcelList.releaseParcelList(list);
};


/**
 * @protected
 * @override
 */
org.apache.royale.textLayout.compose.SimpleCompose.prototype.initializeForComposer = function(composer, composeToPosition, controllerStartIndex, controllerEndIndex) {
  this._startController = composer.getControllerAt(0);
  this._startComposePosition = 0;
  org.apache.royale.textLayout.compose.SimpleCompose.superClass_.initializeForComposer.apply(this, [composer, composeToPosition, 0, controllerEndIndex]);
  this.org_apache_royale_textLayout_compose_SimpleCompose__vjLines.splice(0);
  this.org_apache_royale_textLayout_compose_SimpleCompose_vjBeginLineIndex = 0;
  this.org_apache_royale_textLayout_compose_SimpleCompose_vjDisableThisParcel = false;
  this.org_apache_royale_textLayout_compose_SimpleCompose_vjType = org.apache.royale.utils.Language.string(this._startController.computedFormat.verticalAlign);
};


/** @asprivate 
 * @override
 */
org.apache.royale.textLayout.compose.SimpleCompose.prototype.composeTextFlow = function(textFlow, composeToPosition, controllerEndIndex) {
  this._flowComposer = textFlow.flowComposer;
  this._curLine = this.workingLine;
  
  this.org_apache_royale_textLayout_compose_SimpleCompose__lines.splice(0);
  this.org_apache_royale_textLayout_compose_SimpleCompose__totalLength = 0;
  return org.apache.royale.textLayout.compose.SimpleCompose.superClass_.composeTextFlow.apply(this, [textFlow, composeToPosition, controllerEndIndex]);
};


/**
 * @protected
 * @override
 */
org.apache.royale.textLayout.compose.SimpleCompose.prototype.doVerticalAlignment = function(canVerticalAlign, nextParcel) {
  var /** @type {org.apache.royale.textLayout.compose.Parcel} */ vjParcel = this.parcelList.currentParcel;
  if (canVerticalAlign && this.org_apache_royale_textLayout_compose_SimpleCompose_vjType != org.apache.royale.textLayout.formats.VerticalAlign.TOP && this.org_apache_royale_textLayout_compose_SimpleCompose_vjBeginLineIndex != this.org_apache_royale_textLayout_compose_SimpleCompose__lines.length && !this.org_apache_royale_textLayout_compose_SimpleCompose_vjDisableThisParcel) {
    var /** @type {org.apache.royale.textLayout.container.IContainerController} */ controller = this._curParcel.controller;
    var /** @type {number} */ beginFloatIndex = 0;
    var /** @type {number} */ endFloatIndex = 0;
    if (controller.numFloats > 0) {
      beginFloatIndex = controller.findFloatIndexAtOrAfter(this._curParcelStart);
      endFloatIndex = controller.findFloatIndexAfter((this._curElementStart + this._curElementOffset) >> 0);
    }
    this.applyVerticalAlignmentToColumn(vjParcel.controller, this.org_apache_royale_textLayout_compose_SimpleCompose_vjType, this.org_apache_royale_textLayout_compose_SimpleCompose__vjLines, 0, (this.org_apache_royale_textLayout_compose_SimpleCompose__vjLines.length) >> 0, beginFloatIndex, endFloatIndex);
  }
  this.org_apache_royale_textLayout_compose_SimpleCompose__vjLines.splice(0);
  this.org_apache_royale_textLayout_compose_SimpleCompose_vjBeginLineIndex = (this.org_apache_royale_textLayout_compose_SimpleCompose__lines.length) >> 0;
  this.org_apache_royale_textLayout_compose_SimpleCompose_vjDisableThisParcel = false;
  if (nextParcel)
    this.org_apache_royale_textLayout_compose_SimpleCompose_vjType = org.apache.royale.utils.Language.string(nextParcel.controller.computedFormat.verticalAlign);
};


/**
 * @protected
 * @override
 */
org.apache.royale.textLayout.compose.SimpleCompose.prototype.isLineVisible = function(textLine) {
  return textLine != null;
};


/** Called when we are finished composing a line. Handler for derived classes to override default behavior.  
 * @protected
 * @override
 */
org.apache.royale.textLayout.compose.SimpleCompose.prototype.endLine = function(textLine) {
  org.apache.royale.textLayout.compose.SimpleCompose.superClass_.endLine.apply(this, [textLine]);
  this._curLine.createShape(this._blockProgression, textLine);
  if (this.textFlow.backgroundManager)
    this.textFlow.backgroundManager.finalizeLine(this._curLine);
  textLine.userData = this.org_apache_royale_textLayout_compose_SimpleCompose__totalLength;
  this.org_apache_royale_textLayout_compose_SimpleCompose__totalLength += textLine.rawTextLength;
  this.org_apache_royale_textLayout_compose_SimpleCompose__lines.push(textLine);
  if (this.org_apache_royale_textLayout_compose_SimpleCompose_vjType != org.apache.royale.textLayout.formats.VerticalAlign.TOP)
    this.org_apache_royale_textLayout_compose_SimpleCompose__vjLines.push(new org.apache.royale.textLayout.compose.SimpleCompose.VJHelper(textLine, this._curLine.height));
  this.commitLastLineState(this._curLine);
};


/**
 * @private
 * @type {Function}
 */
org.apache.royale.textLayout.compose.SimpleCompose.prototype.org_apache_royale_textLayout_compose_SimpleCompose__resetLineHandler;


/** @asprivate 
 * @protected
 * @override
 */
org.apache.royale.textLayout.compose.SimpleCompose.prototype.resetLine = function(textLine) {
  org.apache.royale.textLayout.compose.SimpleCompose.superClass_.resetLine.apply(this, [textLine]);
  if (this.org_apache_royale_textLayout_compose_SimpleCompose__resetLineHandler != null)
    this.org_apache_royale_textLayout_compose_SimpleCompose__resetLineHandler(textLine);
};


/** @asprivate 
 * @protected
 * @override
 */
org.apache.royale.textLayout.compose.SimpleCompose.prototype.composeNextLine = function() {
  
  var /** @type {org.apache.royale.text.engine.ITextLine} */ numberLine;
  if (this._listItemElement && this._listItemElement.getAbsoluteStart() == this._curElementStart + this._curElementOffset) {
    var /** @type {boolean} */ isRTL = this._curParaElement.computedFormat.direction == org.apache.royale.textLayout.formats.Direction.RTL;
    numberLine = org.apache.royale.textLayout.compose.utils.NumberlineUtil.createNumberLine(this._listItemElement, this._curParaElement, this._flowComposer.swfContext, isRTL ? this._parcelList.rightMargin : this._parcelList.leftMargin);
    this.pushInsideListItemMargins(numberLine);
  }
  if (!this._parcelList.getLineSlug(this._lineSlug, 0, 0, this._textIndent, this._curParaFormat.direction == org.apache.royale.textLayout.formats.Direction.LTR))
    return null;
  var /** @type {org.apache.royale.text.engine.ITextLine} */ textLine;
  for (;;) {
    for (;;) {
      
      
      textLine = this.createTextLine(this._lineSlug.width, !this._lineSlug.wrapsKnockOut);
      if (textLine)
        break;
      var /** @type {number} */ newDepth = this._curParcel.findNextTransition(this._lineSlug.depth);
      if (newDepth < Number.MAX_VALUE) {
        this._parcelList.addTotalDepth(newDepth - this._lineSlug.depth);
        this._parcelList.getLineSlug(this._lineSlug, 0, 1, this._textIndent, this._curParaFormat.direction == org.apache.royale.textLayout.formats.Direction.LTR);
      } else {
        this.advanceToNextParcel();
        if (!this._parcelList.atEnd())
          if (this._parcelList.getLineSlug(this._lineSlug, 0, 1, this._textIndent, this._curParaFormat.direction == org.apache.royale.textLayout.formats.Direction.LTR))
            continue;
        this.popInsideListItemMargins(numberLine);
        return null;
      }
    }
    if (this.fitLineToParcel(textLine, true, numberLine))
      break;
    if (this.resetLineHandler != null)
      this.resetLineHandler(textLine);
    if (this._parcelList.atEnd()) {
      this.popInsideListItemMargins(numberLine);
      return null;
    }
  }
  this.popInsideListItemMargins(numberLine);
  
  return textLine;
};


/** @asprivate 
 * @param {Array} lines
 * @return {Array}
 */
org.apache.royale.textLayout.compose.SimpleCompose.prototype.swapLines = function(lines) {
  var /** @type {Array} */ current = this.org_apache_royale_textLayout_compose_SimpleCompose__lines;
  this.org_apache_royale_textLayout_compose_SimpleCompose__lines = lines;
  return current;
};


/** Final adjustment on the content bounds. 
 * @protected
 * @override
 */
org.apache.royale.textLayout.compose.SimpleCompose.prototype.finalParcelAdjustment = function(controller) {
  
  var /** @type {number} */ minX = org.apache.royale.text.engine.Constants.MAX_LINE_WIDTH;
  var /** @type {number} */ minY = org.apache.royale.text.engine.Constants.MAX_LINE_WIDTH;
  var /** @type {number} */ maxX = -org.apache.royale.text.engine.Constants.MAX_LINE_WIDTH;
  var /** @type {boolean} */ verticalText = this._blockProgression == org.apache.royale.textLayout.formats.BlockProgression.RL;
  if (!isNaN(this._parcelLogicalTop)) {
    if (verticalText)
      maxX = this._parcelLogicalTop;
    else
      minY = this._parcelLogicalTop;
  }
  if (!this._measuring) {
    if (verticalText)
      minY = this._accumulatedMinimumStart;
    else
      minX = this._accumulatedMinimumStart;
  } else {
    var /** @type {org.apache.royale.text.engine.ITextLine} */ textLine;
    var /** @type {number} */ startPos = 0;
    var /** @type {number} */ firstLineAdjust;
    var /** @type {number} */ effectiveIndent;
    var /** @type {number} */ edgeAdjust;
    var /** @type {org.apache.royale.textLayout.elements.IParagraphElement} */ curPara;
    var /** @type {org.apache.royale.textLayout.formats.ITextLayoutFormat} */ curParaFormat;
    var /** @type {number} */ paddingVerticalAdjust = 0;
    var /** @type {number} */ paddingHorizontalAdjust = 0;
    var /** @type {org.apache.royale.textLayout.elements.IParagraphElement} */ previousParagraph = null;
    var foreachiter0_target = this.org_apache_royale_textLayout_compose_SimpleCompose__lines;
    for (var foreachiter0 in foreachiter0_target) 
    {
    textLine = foreachiter0_target[foreachiter0];
    {
      var /** @type {org.apache.royale.textLayout.elements.IFlowLeafElement} */ leaf = controller.textFlow.findLeaf(startPos);
      var /** @type {org.apache.royale.textLayout.elements.IParagraphElement} */ para = leaf.getParagraph();
      if (para != previousParagraph) {
        paddingVerticalAdjust = 0;
        paddingHorizontalAdjust = 0;
        var /** @type {org.apache.royale.textLayout.elements.IFlowGroupElement} */ fge = para;
        while (fge && fge.parent) {
          if (verticalText) {
            paddingVerticalAdjust += (fge.getEffectivePaddingRight() + fge.getEffectiveBorderRightWidth() + fge.getEffectiveMarginRight());
            paddingHorizontalAdjust += (fge.getEffectivePaddingTop() + fge.getEffectiveBorderTopWidth() + fge.getEffectiveMarginTop());
          } else {
            paddingVerticalAdjust += (fge.getEffectivePaddingTop() + fge.getEffectiveBorderTopWidth() + fge.getEffectiveMarginTop());
            paddingHorizontalAdjust += (fge.getEffectivePaddingLeft() + fge.getEffectiveBorderLeftWidth() + fge.getEffectiveMarginLeft());
          }
          fge = fge.parent;
        }
        previousParagraph = para;
      }
      var /** @type {number} */ inlineAscent = 0;
      if (textLine.numElements > 0) {
        var /** @type {number} */ leafStart = leaf.getAbsoluteStart();
        inlineAscent = org.apache.royale.textLayout.compose.utils.TextLineUtil.getTextLineTypographicAscent(textLine, leaf, leafStart, (startPos + textLine.rawTextLength) >> 0);
      }
      
      if (curPara != para) {
        curParaFormat = para.computedFormat;
        if (curParaFormat.direction == org.apache.royale.textLayout.formats.Direction.LTR) {
          firstLineAdjust = Math.max(curParaFormat.textIndent, 0);
          effectiveIndent = Number(curParaFormat.paragraphStartIndent);
        } else {
          firstLineAdjust = 0;
          effectiveIndent = Number(curParaFormat.paragraphEndIndent);
        }
      }
      effectiveIndent += paddingHorizontalAdjust;
      edgeAdjust = textLine.textBlockBeginIndex == 0 ? effectiveIndent + firstLineAdjust : effectiveIndent;
      edgeAdjust = verticalText ? textLine.y - edgeAdjust : textLine.x - edgeAdjust;
      var /** @type {org.apache.royale.text.engine.ITextLine} */ numberLine = org.apache.royale.textLayout.compose.utils.TextLineUtil.findNumberLine(textLine);
      if (numberLine) {
        var /** @type {number} */ numberLineStart = verticalText ? numberLine.y + textLine.y : numberLine.x + textLine.x;
        edgeAdjust = Math.min(edgeAdjust, numberLineStart);
      }
      if (verticalText) {
        minY = Math.min(edgeAdjust, minY);
        maxX = Math.max(textLine.x + Math.max(inlineAscent, textLine.ascent) + paddingVerticalAdjust, maxX);
      } else {
        minX = Math.min(edgeAdjust, minX);
        if (inlineAscent < textLine.ascent)
          inlineAscent = textLine.ascent;
        minY = Math.min(textLine.y - (inlineAscent + paddingVerticalAdjust), minY);
      }
      startPos += textLine.rawTextLength;
    }}
    
  }
  if (minX != org.apache.royale.text.engine.Constants.MAX_LINE_WIDTH && Math.abs(minX - this._parcelLeft) >= 1)
    this._parcelLeft = minX;
  if (maxX != -org.apache.royale.text.engine.Constants.MAX_LINE_WIDTH && Math.abs(maxX - this._parcelRight) >= 1)
    this._parcelRight = maxX;
  if (minY != org.apache.royale.text.engine.Constants.MAX_LINE_WIDTH && Math.abs(minY - this._parcelTop) >= 1)
    this._parcelTop = minY;
};


/**
 * @override
 */
org.apache.royale.textLayout.compose.SimpleCompose.prototype.releaseAnyReferences = function() {
  org.apache.royale.textLayout.compose.SimpleCompose.superClass_.releaseAnyReferences.apply(this);
  this.workingLine.initialize(null, 0, 0, 0, 0, null);
  this.resetLineHandler = null;
};


/**
 * @nocollapse
 * @export
 * @type {org.apache.royale.textLayout.elements.ITextFlow}
 */
org.apache.royale.textLayout.compose.SimpleCompose.prototype.textFlow;


org.apache.royale.textLayout.compose.SimpleCompose.prototype.get__textFlow = function() {
  return this._textFlow;
};


/**
 * @nocollapse
 * @export
 * @type {Function}
 */
org.apache.royale.textLayout.compose.SimpleCompose.prototype.resetLineHandler;


org.apache.royale.textLayout.compose.SimpleCompose.prototype.get__resetLineHandler = function() {
  return this.org_apache_royale_textLayout_compose_SimpleCompose__resetLineHandler;
};


org.apache.royale.textLayout.compose.SimpleCompose.prototype.set__resetLineHandler = function(val) {
  this.org_apache_royale_textLayout_compose_SimpleCompose__resetLineHandler = val;
};


/**
 * @nocollapse
 * @export
 * @type {Array}
 */
org.apache.royale.textLayout.compose.SimpleCompose.prototype.lines;


org.apache.royale.textLayout.compose.SimpleCompose.prototype.get__lines = function() {
  return this.org_apache_royale_textLayout_compose_SimpleCompose__lines;
};


Object.defineProperties(org.apache.royale.textLayout.compose.SimpleCompose.prototype, /** @lends {org.apache.royale.textLayout.compose.SimpleCompose.prototype} */ {
/**
 * @type {org.apache.royale.textLayout.elements.ITextFlow}
 */
textFlow: {
get: org.apache.royale.textLayout.compose.SimpleCompose.prototype.get__textFlow},
/**
 * @type {Function}
 */
resetLineHandler: {
get: org.apache.royale.textLayout.compose.SimpleCompose.prototype.get__resetLineHandler,
set: org.apache.royale.textLayout.compose.SimpleCompose.prototype.set__resetLineHandler},
/**
 * @type {Array}
 */
lines: {
get: org.apache.royale.textLayout.compose.SimpleCompose.prototype.get__lines}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.textLayout.compose.SimpleCompose.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'SimpleCompose', qName: 'org.apache.royale.textLayout.compose.SimpleCompose', kind: 'class' }], interfaces: [org.apache.royale.textLayout.compose.ISimpleCompose] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.textLayout.compose.SimpleCompose.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'textFlow': { type: 'org.apache.royale.textLayout.elements.ITextFlow', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.compose.SimpleCompose'},
        'resetLineHandler': { type: 'Function', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.compose.SimpleCompose'},
        'lines': { type: 'Array', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.compose.SimpleCompose'}
      };
    },
    methods: function () {
      return {
        'SimpleCompose': { type: '', declaredBy: 'org.apache.royale.textLayout.compose.SimpleCompose'},
        'composeTextFlow': { type: 'int', declaredBy: 'org.apache.royale.textLayout.compose.SimpleCompose', parameters: function () { return [ 'org.apache.royale.textLayout.elements.ITextFlow', false ,'int', false ,'int', false ]; }},
        'swapLines': { type: 'Array', declaredBy: 'org.apache.royale.textLayout.compose.SimpleCompose', parameters: function () { return [ 'Array', false ]; }},
        'releaseAnyReferences': { type: 'void', declaredBy: 'org.apache.royale.textLayout.compose.SimpleCompose'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.textLayout.compose.SimpleCompose.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./SimpleCompose.js.map


/**
 * @constructor
 * @implements {org.apache.royale.textLayout.compose.IVerticalJustificationLine}
 * @param {org.apache.royale.text.engine.ITextLine} line
 * @param {number} h
 */
org.apache.royale.textLayout.compose.SimpleCompose.VJHelper = function(line, h) {
  this.VJHelper__line = line;
  this.VJHelper__height = h;
};


/**
 * @private
 * @type {org.apache.royale.text.engine.ITextLine}
 */
org.apache.royale.textLayout.compose.SimpleCompose.VJHelper.prototype.VJHelper__line;


/**
 * @private
 * @type {number}
 */
org.apache.royale.textLayout.compose.SimpleCompose.VJHelper.prototype.VJHelper__height;


/**
 * @nocollapse
 * @export
 * @type {number}
 */
org.apache.royale.textLayout.compose.SimpleCompose.VJHelper.prototype.x;


org.apache.royale.textLayout.compose.SimpleCompose.VJHelper.prototype.get__x = function() {
  return this.VJHelper__line.x;
};


org.apache.royale.textLayout.compose.SimpleCompose.VJHelper.prototype.set__x = function(val) {
  this.VJHelper__line.x = val;
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
org.apache.royale.textLayout.compose.SimpleCompose.VJHelper.prototype.y;


org.apache.royale.textLayout.compose.SimpleCompose.VJHelper.prototype.get__y = function() {
  return this.VJHelper__line.y;
};


org.apache.royale.textLayout.compose.SimpleCompose.VJHelper.prototype.set__y = function(val) {
  this.VJHelper__line.y = val;
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
org.apache.royale.textLayout.compose.SimpleCompose.VJHelper.prototype.ascent;


org.apache.royale.textLayout.compose.SimpleCompose.VJHelper.prototype.get__ascent = function() {
  return this.VJHelper__line.ascent;
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
org.apache.royale.textLayout.compose.SimpleCompose.VJHelper.prototype.descent;


org.apache.royale.textLayout.compose.SimpleCompose.VJHelper.prototype.get__descent = function() {
  return this.VJHelper__line.descent;
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
org.apache.royale.textLayout.compose.SimpleCompose.VJHelper.prototype.height;


org.apache.royale.textLayout.compose.SimpleCompose.VJHelper.prototype.get__height = function() {
  return this.VJHelper__height;
};


org.apache.royale.textLayout.compose.SimpleCompose.VJHelper.prototype.set__height = function(value) {
};


Object.defineProperties(org.apache.royale.textLayout.compose.SimpleCompose.VJHelper.prototype, /** @lends {org.apache.royale.textLayout.compose.SimpleCompose.VJHelper.prototype} */ {
/**
 * @type {number}
 */
x: {
get: org.apache.royale.textLayout.compose.SimpleCompose.VJHelper.prototype.get__x,
set: org.apache.royale.textLayout.compose.SimpleCompose.VJHelper.prototype.set__x},
/**
 * @type {number}
 */
y: {
get: org.apache.royale.textLayout.compose.SimpleCompose.VJHelper.prototype.get__y,
set: org.apache.royale.textLayout.compose.SimpleCompose.VJHelper.prototype.set__y},
/**
 * @type {number}
 */
ascent: {
get: org.apache.royale.textLayout.compose.SimpleCompose.VJHelper.prototype.get__ascent},
/**
 * @type {number}
 */
descent: {
get: org.apache.royale.textLayout.compose.SimpleCompose.VJHelper.prototype.get__descent},
/**
 * @type {number}
 */
height: {
get: org.apache.royale.textLayout.compose.SimpleCompose.VJHelper.prototype.get__height,
set: org.apache.royale.textLayout.compose.SimpleCompose.VJHelper.prototype.set__height}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.textLayout.compose.SimpleCompose.VJHelper.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'VJHelper', qName: 'org.apache.royale.textLayout.compose.SimpleCompose.VJHelper', kind: 'class' }], interfaces: [org.apache.royale.textLayout.compose.IVerticalJustificationLine] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.textLayout.compose.SimpleCompose.VJHelper.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'x': { type: 'Number', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.compose.SimpleCompose.VJHelper'},
        'y': { type: 'Number', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.compose.SimpleCompose.VJHelper'},
        'ascent': { type: 'Number', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.compose.SimpleCompose.VJHelper'},
        'descent': { type: 'Number', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.compose.SimpleCompose.VJHelper'},
        'height': { type: 'Number', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.compose.SimpleCompose.VJHelper'}
      };
    },
    methods: function () {
      return {
        'VJHelper': { type: '', declaredBy: 'org.apache.royale.textLayout.compose.SimpleCompose.VJHelper', parameters: function () { return [ 'org.apache.royale.text.engine.ITextLine', false ,'Number', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.textLayout.compose.SimpleCompose.VJHelper.prototype.ROYALE_COMPILE_FLAGS = 10;
