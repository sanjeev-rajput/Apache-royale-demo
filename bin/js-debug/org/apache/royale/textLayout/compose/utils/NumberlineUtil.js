/**
 * Generated by Apache Royale Compiler from org/apache/royale/textLayout/compose/utils/NumberlineUtil.as
 * org.apache.royale.textLayout.compose.utils.NumberlineUtil
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.textLayout.compose.utils.NumberlineUtil');
/* Royale Dependency List: org.apache.royale.core.UIBase,org.apache.royale.geom.Rectangle,org.apache.royale.text.engine.ITextLine,org.apache.royale.textLayout.compose.ISWFContext,org.apache.royale.textLayout.compose.utils.TextLineUtil,org.apache.royale.textLayout.elements.IFlowLeafElement,org.apache.royale.textLayout.elements.ILinkElement,org.apache.royale.textLayout.elements.IListElement,org.apache.royale.textLayout.elements.IListItemElement,org.apache.royale.textLayout.elements.IParagraphElement,org.apache.royale.textLayout.elements.LinkState,org.apache.royale.textLayout.factory.INumberLineFactory,org.apache.royale.textLayout.formats.Direction,org.apache.royale.textLayout.formats.FormatValue,org.apache.royale.textLayout.formats.IListMarkerFormat,org.apache.royale.textLayout.formats.ListStylePosition,org.apache.royale.textLayout.formats.TextLayoutFormat,org.apache.royale.textLayout.utils.NumberFactoryUtil,XML*/




/**
 * @constructor
 */
org.apache.royale.textLayout.compose.utils.NumberlineUtil = function() {
};


/**
 * @private
 * @type {org.apache.royale.textLayout.factory.INumberLineFactory}
 */
org.apache.royale.textLayout.compose.utils.NumberlineUtil.numberLineFactory;


/**
 *
 * @asprivate Logic to generate and position the ITextLine containing the numbering for a listElement's first line 
 * @royaleignorecoercion org.apache.royale.textLayout.elements.ILinkElement
 * @royaleignorecoercion org.apache.royale.textLayout.elements.IListElement
 * @nocollapse
 * @param {org.apache.royale.textLayout.elements.IListItemElement} listItemElement
 * @param {org.apache.royale.textLayout.elements.IParagraphElement} curParaElement
 * @param {org.apache.royale.textLayout.compose.ISWFContext} swfContext
 * @param {number} totalStartIndent
 * @return {org.apache.royale.text.engine.ITextLine}
 */
org.apache.royale.textLayout.compose.utils.NumberlineUtil.createNumberLine = function(listItemElement, curParaElement, swfContext, totalStartIndent) {
  
  if (org.apache.royale.textLayout.compose.utils.NumberlineUtil.numberLineFactory == null) {
    org.apache.royale.textLayout.compose.utils.NumberlineUtil.numberLineFactory = org.apache.royale.textLayout.utils.NumberFactoryUtil.getNumberFactory();
    org.apache.royale.textLayout.compose.utils.NumberlineUtil.numberLineFactory.compositionBounds = new org.apache.royale.geom.Rectangle(0, 0, NaN, NaN);
  }
  org.apache.royale.textLayout.compose.utils.NumberlineUtil.numberLineFactory.swfContext = swfContext;
  var /** @type {org.apache.royale.textLayout.formats.IListMarkerFormat} */ listMarkerFormat = listItemElement.computedListMarkerFormat();
  org.apache.royale.textLayout.compose.utils.NumberlineUtil.numberLineFactory.listStylePosition = org.apache.royale.utils.Language.string(listItemElement.computedFormat.listStylePosition);
  var /** @type {Object} */ listElement = listItemElement.parent;
  var /** @type {org.apache.royale.textLayout.formats.TextLayoutFormat} */ paragraphFormat = new org.apache.royale.textLayout.formats.TextLayoutFormat(curParaElement.computedFormat);
  var /** @type {number} */ boxStartIndent = paragraphFormat.direction == org.apache.royale.textLayout.formats.Direction.LTR ? listElement.getEffectivePaddingLeft() + listElement.getEffectiveBorderLeftWidth() + listElement.getEffectiveMarginLeft() : listElement.getEffectivePaddingRight() + listElement.getEffectiveBorderRightWidth() + listElement.getEffectiveMarginRight();
  paragraphFormat.apply(listMarkerFormat);
  paragraphFormat.textIndent += totalStartIndent;
  if (org.apache.royale.textLayout.compose.utils.NumberlineUtil.numberLineFactory.listStylePosition == org.apache.royale.textLayout.formats.ListStylePosition.OUTSIDE)
    paragraphFormat.textIndent -= boxStartIndent;
  org.apache.royale.textLayout.compose.utils.NumberlineUtil.numberLineFactory.paragraphFormat = paragraphFormat;
  org.apache.royale.textLayout.compose.utils.NumberlineUtil.numberLineFactory.textFlowFormat = curParaElement.getTextFlow().computedFormat;
  var /** @type {org.apache.royale.textLayout.elements.IFlowLeafElement} */ firstLeaf = curParaElement.getFirstLeaf();
  var /** @type {Object} */ parentLink = firstLeaf.getParentByType("LinkElement");
  var /** @type {Object} */ highestParentLinkLinkElement;
  var /** @type {Array} */ linkStateArray = [];
  while (parentLink) {
    highestParentLinkLinkElement = parentLink;
    linkStateArray.push(parentLink.linkState);
    parentLink.chgLinkState(org.apache.royale.textLayout.elements.LinkState.SUPPRESSED);
    parentLink = parentLink.getParentByType("LinkElement");
  }
  var /** @type {org.apache.royale.textLayout.formats.TextLayoutFormat} */ spanFormat = new org.apache.royale.textLayout.formats.TextLayoutFormat(firstLeaf.computedFormat);
  parentLink = firstLeaf.getParentByType("LinkElement");
  while (parentLink) {
    linkStateArray.push(parentLink.linkState);
    parentLink.chgLinkState(org.apache.royale.utils.Language.string(linkStateArray.shift()));
    parentLink = parentLink.getParentByType("LinkElement");
  }
  if (highestParentLinkLinkElement) {
    var /** @type {org.apache.royale.textLayout.elements.IFlowLeafElement} */ leaf = highestParentLinkLinkElement.getFirstLeaf();
    while (leaf) {
      leaf.calculateComputedFormat();
      leaf = leaf.getNextLeaf(highestParentLinkLinkElement);
    }
  }
  var /** @type {org.apache.royale.textLayout.formats.TextLayoutFormat} */ markerFormat = new org.apache.royale.textLayout.formats.TextLayoutFormat(spanFormat);
  org.apache.royale.textLayout.formats.TextLayoutFormat.resetModifiedNoninheritedStyles(markerFormat);
  var /** @type {Object} */ holderStyles = listMarkerFormat.getStyles();
  for (var /** @type {string} */ key in holderStyles) {
    if (org.apache.royale.textLayout.formats.TextLayoutFormat.description[key] !== undefined) {
      var /** @type {*} */ val = holderStyles[key];
      markerFormat[key] = (val !== org.apache.royale.textLayout.formats.FormatValue.INHERIT) ? val : spanFormat[key];
    }
  }
  org.apache.royale.textLayout.compose.utils.NumberlineUtil.numberLineFactory.markerFormat = markerFormat;
  org.apache.royale.textLayout.compose.utils.NumberlineUtil.numberLineFactory.text = listElement.computeListItemText(listItemElement, listMarkerFormat);
  var /** @type {Array} */ rslt = [];
  org.apache.royale.textLayout.compose.utils.NumberlineUtil.numberLineFactory.createTextLines(function(o) {
    rslt.push(o);
  });
  var /** @type {org.apache.royale.text.engine.ITextLine} */ numberLine = rslt[0];
  if (numberLine) {
    
    org.apache.royale.textLayout.compose.utils.TextLineUtil.setNumberLineBackground(numberLine, org.apache.royale.textLayout.compose.utils.NumberlineUtil.numberLineFactory.backgroundManager);
  }
  org.apache.royale.textLayout.compose.utils.NumberlineUtil.numberLineFactory.clearBackgroundManager();
  return numberLine;
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.textLayout.compose.utils.NumberlineUtil.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'NumberlineUtil', qName: 'org.apache.royale.textLayout.compose.utils.NumberlineUtil', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.textLayout.compose.utils.NumberlineUtil.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    methods: function () {
      return {
        '|createNumberLine': { type: 'org.apache.royale.text.engine.ITextLine', declaredBy: 'org.apache.royale.textLayout.compose.utils.NumberlineUtil', parameters: function () { return [ 'org.apache.royale.textLayout.elements.IListItemElement', false ,'org.apache.royale.textLayout.elements.IParagraphElement', false ,'org.apache.royale.textLayout.compose.ISWFContext', false ,'Number', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.textLayout.compose.utils.NumberlineUtil.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./NumberlineUtil.js.map
