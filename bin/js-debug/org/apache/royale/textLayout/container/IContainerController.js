/**
 * Generated by Apache Royale Compiler from org/apache/royale/textLayout/container/IContainerController.as
 * org.apache.royale.textLayout.container.IContainerController
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.textLayout.container.IContainerController');
/* Royale Dependency List: org.apache.royale.core.IParentIUIBase,org.apache.royale.core.IUIBase,org.apache.royale.geom.Matrix,org.apache.royale.geom.Point,org.apache.royale.geom.Rectangle,org.apache.royale.text.engine.ITextLine,org.apache.royale.textLayout.compose.FloatCompositionData,org.apache.royale.textLayout.compose.IFlowComposer,org.apache.royale.textLayout.compose.ITextFlowLine,org.apache.royale.textLayout.compose.ITextFlowTableBlock,org.apache.royale.textLayout.container.ColumnState,org.apache.royale.textLayout.edit.ISelectionManager,org.apache.royale.textLayout.edit.SelectionFormat,org.apache.royale.textLayout.elements.CellCoordinates,org.apache.royale.textLayout.elements.IContainerFormattedElement,org.apache.royale.textLayout.elements.ITextFlow,org.apache.royale.textLayout.elements.TableBlockContainer,org.apache.royale.textLayout.formats.ITextLayoutFormat,org.apache.royale.utils.ObjectMap,XML*/




/**
 * @interface
 */
org.apache.royale.textLayout.container.IContainerController = function() {
};
/**  * @type {org.apache.royale.textLayout.container.ColumnState}
 */org.apache.royale.textLayout.container.IContainerController.prototype.columnState;
/**  * @type {*}
 */org.apache.royale.textLayout.container.IContainerController.prototype.columnCount;
/**
 * @param {number} absolutePosition
 */
org.apache.royale.textLayout.container.IContainerController.prototype.clearFloatsAt = function(absolutePosition) {
};
/**
 * @param {number} absolutePosition
 * @return {org.apache.royale.textLayout.compose.FloatCompositionData}
 */
org.apache.royale.textLayout.container.IContainerController.prototype.getFloatAtPosition = function(absolutePosition) {
};
/**  * @type {number}
 */org.apache.royale.textLayout.container.IContainerController.prototype.numFloats;
org.apache.royale.textLayout.container.IContainerController.prototype.clearSelectionShapes = function() {
};
/**  * @type {number}
 */org.apache.royale.textLayout.container.IContainerController.prototype.horizontalScrollPosition;
/**  * @type {number}
 */org.apache.royale.textLayout.container.IContainerController.prototype.verticalScrollPosition;
/**  * @type {number}
 */org.apache.royale.textLayout.container.IContainerController.prototype.compositionWidth;
/**  * @type {number}
 */org.apache.royale.textLayout.container.IContainerController.prototype.compositionHeight;
/**  * @type {org.apache.royale.core.IParentIUIBase}
 */org.apache.royale.textLayout.container.IContainerController.prototype.container;
/**  * @type {number}
 */org.apache.royale.textLayout.container.IContainerController.prototype.absoluteStart;
/**  * @type {boolean}
 */org.apache.royale.textLayout.container.IContainerController.prototype.measureWidth;
/**  * @type {boolean}
 */org.apache.royale.textLayout.container.IContainerController.prototype.measureHeight;
/**
 * @param {number} color
 * @param {org.apache.royale.textLayout.compose.ITextFlowTableBlock} tableBlock
 * @param {org.apache.royale.textLayout.elements.CellCoordinates} startCoords
 * @param {org.apache.royale.textLayout.elements.CellCoordinates} endCoords
 */
org.apache.royale.textLayout.container.IContainerController.prototype.addCellSelectionShapes = function(color, tableBlock, startCoords, endCoords) {
};
/**  * @type {number}
 */org.apache.royale.textLayout.container.IContainerController.prototype.textLength;
/**
 * @param {org.apache.royale.textLayout.elements.TableBlockContainer} block
 */
org.apache.royale.textLayout.container.IContainerController.prototype.addComposedTableBlock = function(block) {
};
org.apache.royale.textLayout.container.IContainerController.prototype.clearCompositionResults = function() {
};
/**  * @type {org.apache.royale.utils.ObjectMap}
 */org.apache.royale.textLayout.container.IContainerController.prototype.interactiveObjects;
/**
 * @param {number} mouseX
 * @param {number} mouseY
 */
org.apache.royale.textLayout.container.IContainerController.prototype.autoScrollIfNecessary = function(mouseX, mouseY) {
};
/**
 * @param {number} activePosition
 * @param {number} anchorPosition
 */
org.apache.royale.textLayout.container.IContainerController.prototype.scrollToRange = function(activePosition, anchorPosition) {
};
/**  * @type {org.apache.royale.textLayout.formats.ITextLayoutFormat}
 */org.apache.royale.textLayout.container.IContainerController.prototype.computedFormat;
/**  * @type {org.apache.royale.textLayout.compose.IFlowComposer}
 */org.apache.royale.textLayout.container.IContainerController.prototype.flowComposer;
/**
 * @param {number} i
 */
org.apache.royale.textLayout.container.IContainerController.prototype.setTextLength = function(i) {
};
/**  * @type {number}
 */org.apache.royale.textLayout.container.IContainerController.prototype.contentWidth;
/**  * @type {number}
 */org.apache.royale.textLayout.container.IContainerController.prototype.contentHeight;
/**  * @type {org.apache.royale.textLayout.elements.IContainerFormattedElement}
 */org.apache.royale.textLayout.container.IContainerController.prototype.rootElement;
/**  * @type {string}
 */org.apache.royale.textLayout.container.IContainerController.prototype.verticalScrollPolicy;
/**  * @type {string}
 */org.apache.royale.textLayout.container.IContainerController.prototype.horizontalScrollPolicy;
/**  * @type {org.apache.royale.textLayout.formats.ITextLayoutFormat}
 */org.apache.royale.textLayout.container.IContainerController.prototype.format;
/**
 * @param {org.apache.royale.textLayout.edit.SelectionFormat} selFormat
 * @param {number} selectionAbsoluteStart
 * @param {number} selectionAbsoluteEnd
 */
org.apache.royale.textLayout.container.IContainerController.prototype.addSelectionShapes = function(selFormat, selectionAbsoluteStart, selectionAbsoluteEnd) {
};
/**
 * @return {org.apache.royale.geom.Rectangle}
 */
org.apache.royale.textLayout.container.IContainerController.prototype.getContentBounds = function() {
};
/**
 * @return {number}
 */
org.apache.royale.textLayout.container.IContainerController.prototype.getTotalPaddingLeft = function() {
};
/**
 * @return {number}
 */
org.apache.royale.textLayout.container.IContainerController.prototype.getTotalPaddingTop = function() {
};
/**
 * @return {number}
 */
org.apache.royale.textLayout.container.IContainerController.prototype.getTotalPaddingRight = function() {
};
/**
 * @return {number}
 */
org.apache.royale.textLayout.container.IContainerController.prototype.getTotalPaddingBottom = function() {
};
/**
 * @param {org.apache.royale.geom.Point} localPoint
 * @return {org.apache.royale.textLayout.elements.CellCoordinates}
 */
org.apache.royale.textLayout.container.IContainerController.prototype.findCellAtPosition = function(localPoint) {
};
/**
 * @param {number} contentLeft
 * @param {number} contentTop
 * @param {number} contentWidth
 * @param {number} contentHeight
 */
org.apache.royale.textLayout.container.IContainerController.prototype.setContentBounds = function(contentLeft, contentTop, contentWidth, contentHeight) {
};
/**
 * @param {number} absoluteStart
 */
org.apache.royale.textLayout.container.IContainerController.prototype.clearComposedLines = function(absoluteStart) {
};
/**  * @type {number}
 */org.apache.royale.textLayout.container.IContainerController.prototype.finalParcelStart;
/**  * @type {Array}
 */org.apache.royale.textLayout.container.IContainerController.prototype.oldInteractiveObjects;
/**
 * @param {number} floatIndex
 * @return {org.apache.royale.textLayout.compose.FloatCompositionData}
 */
org.apache.royale.textLayout.container.IContainerController.prototype.getFloatAt = function(floatIndex) {
};
/**
 * @param {number} absoluteStart
 * @return {number}
 */
org.apache.royale.textLayout.container.IContainerController.prototype.findFloatIndexAtOrAfter = function(absoluteStart) {
};
/**
 * @param {number} i
 * @return {number}
 */
org.apache.royale.textLayout.container.IContainerController.prototype.findFloatIndexAfter = function(i) {
};
/**  * @type {org.apache.royale.textLayout.elements.ITextFlow}
 */org.apache.royale.textLayout.container.IContainerController.prototype.textFlow;
/**  * @type {Array}
 */org.apache.royale.textLayout.container.IContainerController.prototype.composedLines;
org.apache.royale.textLayout.container.IContainerController.prototype.setFocus = function() {
};
/**
 * @param {boolean=} notifyModelChanged
 */
org.apache.royale.textLayout.container.IContainerController.prototype.formatChanged = function(notifyModelChanged) {
};
/**
 * @param {org.apache.royale.textLayout.elements.IContainerFormattedElement} value
 */
org.apache.royale.textLayout.container.IContainerController.prototype.setRootElement = function(value) {
};
org.apache.royale.textLayout.container.IContainerController.prototype.dispose = function() {
};
/**
 * @param {org.apache.royale.textLayout.edit.ISelectionManager} newInteractionManager
 */
org.apache.royale.textLayout.container.IContainerController.prototype.interactionManagerChanged = function(newInteractionManager) {
};
org.apache.royale.textLayout.container.IContainerController.prototype.updateCompositionShapes = function() {
};
/**
 * @return {org.apache.royale.textLayout.compose.ITextFlowLine}
 */
org.apache.royale.textLayout.container.IContainerController.prototype.getLastVisibleLine = function() {
};
/**  * @type {boolean}
 */org.apache.royale.textLayout.container.IContainerController.prototype.shapesInvalid;
/**
 * @param {org.apache.royale.text.engine.ITextLine} textLine
 */
org.apache.royale.textLayout.container.IContainerController.prototype.addComposedLine = function(textLine) {
};
/**
 * @param {number} absolutePosition
 * @param {org.apache.royale.core.IUIBase} float
 * @param {string} floatType
 * @param {number} x
 * @param {number} y
 * @param {number} alpha
 * @param {org.apache.royale.geom.Matrix} matrix
 * @param {number} depth
 * @param {number} knockOutWidth
 * @param {number} columnIndex
 * @param {org.apache.royale.core.IParentIUIBase} parent
 */
org.apache.royale.textLayout.container.IContainerController.prototype.addFloatAt = function(absolutePosition, float, floatType, x, y, alpha, matrix, depth, knockOutWidth, columnIndex, parent) {
};
/**
 * @param {string} blockProgression
 * @param {number} controllerVisibleBoundsXTW
 * @param {number} controllerVisibleBoundsYTW
 * @param {number} controllerVisibleBoundsWidthTW
 * @param {number} controllerVisibleBoundsHeightTW
 * @param {org.apache.royale.textLayout.compose.ITextFlowLine} curLine
 * @param {org.apache.royale.text.engine.ITextLine} textLine
 * @return {*}
 */
org.apache.royale.textLayout.container.IContainerController.prototype.testLineVisible = function(blockProgression, controllerVisibleBoundsXTW, controllerVisibleBoundsYTW, controllerVisibleBoundsWidthTW, controllerVisibleBoundsHeightTW, curLine, textLine) {
};
/**  * @type {number}
 */org.apache.royale.textLayout.container.IContainerController.prototype.contentTop;
/**  * @type {number}
 */org.apache.royale.textLayout.container.IContainerController.prototype.contentLeft;
/**
 * @param {number} i
 */
org.apache.royale.textLayout.container.IContainerController.prototype.setTextLengthOnly = function(i) {
};
/**  * @type {*}
 */org.apache.royale.textLayout.container.IContainerController.prototype.paddingTop;
/**  * @type {*}
 */org.apache.royale.textLayout.container.IContainerController.prototype.paddingBottom;
/**  * @type {*}
 */org.apache.royale.textLayout.container.IContainerController.prototype.paddingLeft;
/**  * @type {*}
 */org.apache.royale.textLayout.container.IContainerController.prototype.paddingRight;
/**
 * @param {number} width
 * @param {number} compositionHeight
 */
org.apache.royale.textLayout.container.IContainerController.prototype.setCompositionSize = function(width, compositionHeight) {
};
/**
 * @return {org.apache.royale.core.IUIBase}
 */
org.apache.royale.textLayout.container.IContainerController.prototype.getBackgroundShape = function() {
};
/**
 * @param {org.apache.royale.textLayout.edit.SelectionFormat} selFormat
 * @param {number} x
 * @param {number} y
 * @param {number} width
 * @param {number} height
 */
org.apache.royale.textLayout.container.IContainerController.prototype.drawPointSelection = function(selFormat, x, y, width, height) {
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.textLayout.container.IContainerController.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'IContainerController', qName: 'org.apache.royale.textLayout.container.IContainerController', kind: 'interface' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.textLayout.container.IContainerController.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'columnState': { type: 'org.apache.royale.textLayout.container.ColumnState', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.container.IContainerController'},
        'columnCount': { type: '*', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.container.IContainerController'},
        'numFloats': { type: 'int', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.container.IContainerController'},
        'horizontalScrollPosition': { type: 'Number', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.container.IContainerController'},
        'verticalScrollPosition': { type: 'Number', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.container.IContainerController'},
        'compositionWidth': { type: 'Number', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.container.IContainerController'},
        'compositionHeight': { type: 'Number', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.container.IContainerController'},
        'container': { type: 'org.apache.royale.core.IParentIUIBase', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.container.IContainerController'},
        'absoluteStart': { type: 'int', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.container.IContainerController'},
        'measureWidth': { type: 'Boolean', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.container.IContainerController'},
        'measureHeight': { type: 'Boolean', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.container.IContainerController'},
        'textLength': { type: 'int', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.container.IContainerController'},
        'interactiveObjects': { type: 'org.apache.royale.utils.ObjectMap', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.container.IContainerController'},
        'computedFormat': { type: 'org.apache.royale.textLayout.formats.ITextLayoutFormat', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.container.IContainerController'},
        'flowComposer': { type: 'org.apache.royale.textLayout.compose.IFlowComposer', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.container.IContainerController'},
        'contentWidth': { type: 'Number', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.container.IContainerController'},
        'contentHeight': { type: 'Number', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.container.IContainerController'},
        'rootElement': { type: 'org.apache.royale.textLayout.elements.IContainerFormattedElement', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.container.IContainerController'},
        'verticalScrollPolicy': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.container.IContainerController'},
        'horizontalScrollPolicy': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.container.IContainerController'},
        'format': { type: 'org.apache.royale.textLayout.formats.ITextLayoutFormat', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.container.IContainerController'},
        'finalParcelStart': { type: 'int', access: 'writeonly', declaredBy: 'org.apache.royale.textLayout.container.IContainerController'},
        'oldInteractiveObjects': { type: 'Array', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.container.IContainerController'},
        'textFlow': { type: 'org.apache.royale.textLayout.elements.ITextFlow', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.container.IContainerController'},
        'composedLines': { type: 'Array', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.container.IContainerController'},
        'shapesInvalid': { type: 'Boolean', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.container.IContainerController'},
        'contentTop': { type: 'Number', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.container.IContainerController'},
        'contentLeft': { type: 'Number', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.container.IContainerController'},
        'paddingTop': { type: '*', access: 'writeonly', declaredBy: 'org.apache.royale.textLayout.container.IContainerController'},
        'paddingBottom': { type: '*', access: 'writeonly', declaredBy: 'org.apache.royale.textLayout.container.IContainerController'},
        'paddingLeft': { type: '*', access: 'writeonly', declaredBy: 'org.apache.royale.textLayout.container.IContainerController'},
        'paddingRight': { type: '*', access: 'writeonly', declaredBy: 'org.apache.royale.textLayout.container.IContainerController'}
      };
    },
    methods: function () {
      return {
        'clearFloatsAt': { type: 'void', declaredBy: 'org.apache.royale.textLayout.container.IContainerController', parameters: function () { return [ 'int', false ]; }},
        'getFloatAtPosition': { type: 'org.apache.royale.textLayout.compose.FloatCompositionData', declaredBy: 'org.apache.royale.textLayout.container.IContainerController', parameters: function () { return [ 'int', false ]; }},
        'clearSelectionShapes': { type: 'void', declaredBy: 'org.apache.royale.textLayout.container.IContainerController'},
        'addCellSelectionShapes': { type: 'void', declaredBy: 'org.apache.royale.textLayout.container.IContainerController', parameters: function () { return [ 'uint', false ,'org.apache.royale.textLayout.compose.ITextFlowTableBlock', false ,'org.apache.royale.textLayout.elements.CellCoordinates', false ,'org.apache.royale.textLayout.elements.CellCoordinates', false ]; }},
        'addComposedTableBlock': { type: 'void', declaredBy: 'org.apache.royale.textLayout.container.IContainerController', parameters: function () { return [ 'org.apache.royale.textLayout.elements.TableBlockContainer', false ]; }},
        'clearCompositionResults': { type: 'void', declaredBy: 'org.apache.royale.textLayout.container.IContainerController'},
        'autoScrollIfNecessary': { type: 'void', declaredBy: 'org.apache.royale.textLayout.container.IContainerController', parameters: function () { return [ 'int', false ,'int', false ]; }},
        'scrollToRange': { type: 'void', declaredBy: 'org.apache.royale.textLayout.container.IContainerController', parameters: function () { return [ 'int', false ,'int', false ]; }},
        'setTextLength': { type: 'void', declaredBy: 'org.apache.royale.textLayout.container.IContainerController', parameters: function () { return [ 'int', false ]; }},
        'addSelectionShapes': { type: 'void', declaredBy: 'org.apache.royale.textLayout.container.IContainerController', parameters: function () { return [ 'org.apache.royale.textLayout.edit.SelectionFormat', false ,'int', false ,'int', false ]; }},
        'getContentBounds': { type: 'org.apache.royale.geom.Rectangle', declaredBy: 'org.apache.royale.textLayout.container.IContainerController'},
        'getTotalPaddingLeft': { type: 'Number', declaredBy: 'org.apache.royale.textLayout.container.IContainerController'},
        'getTotalPaddingTop': { type: 'Number', declaredBy: 'org.apache.royale.textLayout.container.IContainerController'},
        'getTotalPaddingRight': { type: 'Number', declaredBy: 'org.apache.royale.textLayout.container.IContainerController'},
        'getTotalPaddingBottom': { type: 'Number', declaredBy: 'org.apache.royale.textLayout.container.IContainerController'},
        'findCellAtPosition': { type: 'org.apache.royale.textLayout.elements.CellCoordinates', declaredBy: 'org.apache.royale.textLayout.container.IContainerController', parameters: function () { return [ 'org.apache.royale.geom.Point', false ]; }},
        'setContentBounds': { type: 'void', declaredBy: 'org.apache.royale.textLayout.container.IContainerController', parameters: function () { return [ 'Number', false ,'Number', false ,'Number', false ,'Number', false ]; }},
        'clearComposedLines': { type: 'void', declaredBy: 'org.apache.royale.textLayout.container.IContainerController', parameters: function () { return [ 'int', false ]; }},
        'getFloatAt': { type: 'org.apache.royale.textLayout.compose.FloatCompositionData', declaredBy: 'org.apache.royale.textLayout.container.IContainerController', parameters: function () { return [ 'int', false ]; }},
        'findFloatIndexAtOrAfter': { type: 'int', declaredBy: 'org.apache.royale.textLayout.container.IContainerController', parameters: function () { return [ 'int', false ]; }},
        'findFloatIndexAfter': { type: 'int', declaredBy: 'org.apache.royale.textLayout.container.IContainerController', parameters: function () { return [ 'int', false ]; }},
        'setFocus': { type: 'void', declaredBy: 'org.apache.royale.textLayout.container.IContainerController'},
        'formatChanged': { type: 'void', declaredBy: 'org.apache.royale.textLayout.container.IContainerController', parameters: function () { return [ 'Boolean', true ]; }},
        'setRootElement': { type: 'void', declaredBy: 'org.apache.royale.textLayout.container.IContainerController', parameters: function () { return [ 'org.apache.royale.textLayout.elements.IContainerFormattedElement', false ]; }},
        'dispose': { type: 'void', declaredBy: 'org.apache.royale.textLayout.container.IContainerController'},
        'interactionManagerChanged': { type: 'void', declaredBy: 'org.apache.royale.textLayout.container.IContainerController', parameters: function () { return [ 'org.apache.royale.textLayout.edit.ISelectionManager', false ]; }},
        'updateCompositionShapes': { type: 'void', declaredBy: 'org.apache.royale.textLayout.container.IContainerController'},
        'getLastVisibleLine': { type: 'org.apache.royale.textLayout.compose.ITextFlowLine', declaredBy: 'org.apache.royale.textLayout.container.IContainerController'},
        'addComposedLine': { type: 'void', declaredBy: 'org.apache.royale.textLayout.container.IContainerController', parameters: function () { return [ 'org.apache.royale.text.engine.ITextLine', false ]; }},
        'addFloatAt': { type: 'void', declaredBy: 'org.apache.royale.textLayout.container.IContainerController', parameters: function () { return [ 'int', false ,'org.apache.royale.core.IUIBase', false ,'String', false ,'Number', false ,'Number', false ,'Number', false ,'org.apache.royale.geom.Matrix', false ,'Number', false ,'Number', false ,'int', false ,'org.apache.royale.core.IParentIUIBase', false ]; }},
        'testLineVisible': { type: '*', declaredBy: 'org.apache.royale.textLayout.container.IContainerController', parameters: function () { return [ 'String', false ,'int', false ,'int', false ,'int', false ,'int', false ,'org.apache.royale.textLayout.compose.ITextFlowLine', false ,'org.apache.royale.text.engine.ITextLine', false ]; }},
        'setTextLengthOnly': { type: 'void', declaredBy: 'org.apache.royale.textLayout.container.IContainerController', parameters: function () { return [ 'int', false ]; }},
        'setCompositionSize': { type: 'void', declaredBy: 'org.apache.royale.textLayout.container.IContainerController', parameters: function () { return [ 'Number', false ,'Number', false ]; }},
        'getBackgroundShape': { type: 'org.apache.royale.core.IUIBase', declaredBy: 'org.apache.royale.textLayout.container.IContainerController'},
        'drawPointSelection': { type: 'void', declaredBy: 'org.apache.royale.textLayout.container.IContainerController', parameters: function () { return [ 'org.apache.royale.textLayout.edit.SelectionFormat', false ,'Number', false ,'Number', false ,'Number', false ,'Number', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.textLayout.container.IContainerController.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./IContainerController.js.map
