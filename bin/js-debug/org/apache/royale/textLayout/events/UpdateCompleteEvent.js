/**
 * Generated by Apache Royale Compiler from org/apache/royale/textLayout/events/UpdateCompleteEvent.as
 * org.apache.royale.textLayout.events.UpdateCompleteEvent
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.textLayout.events.UpdateCompleteEvent');
/* Royale Dependency List: org.apache.royale.events.IRoyaleEvent,org.apache.royale.textLayout.container.IContainerController,org.apache.royale.textLayout.elements.ITextFlow,XML*/

goog.require('org.apache.royale.events.Event');



/** Constructor
 * @asparam type event type - use the static property UPDATE_COMPLETE.
 * @asparam bubbles Indicates whether an event is a bubbling event. This event does not bubble.
 * @asparam cancelable Indicates whether the behavior associated with the event can be prevented.
 * This event cannot be cancelled.
 * @asparam controller The ContainerController whose container was updated
 * @asparam textFlow The TextFlow which was updated
 * @playerversion Flash 10
 * @playerversion AIR 1.5
 * @langversion 3.0 
 * @constructor
 * @extends {org.apache.royale.events.Event}
 * @param {string} type
 * @param {boolean=} bubbles
 * @param {boolean=} cancelable
 * @param {org.apache.royale.textLayout.elements.ITextFlow=} textFlow
 * @param {org.apache.royale.textLayout.container.IContainerController=} controller
 */
org.apache.royale.textLayout.events.UpdateCompleteEvent = function(type, bubbles, cancelable, textFlow, controller) {
  bubbles = typeof bubbles !== 'undefined' ? bubbles : false;
  cancelable = typeof cancelable !== 'undefined' ? cancelable : false;
  textFlow = typeof textFlow !== 'undefined' ? textFlow : null;
  controller = typeof controller !== 'undefined' ? controller : null;
  org.apache.royale.textLayout.events.UpdateCompleteEvent.base(this, 'constructor', type, bubbles, cancelable);
  this.controller = controller;
  this.org_apache_royale_textLayout_events_UpdateCompleteEvent__textFlow = textFlow;
};
goog.inherits(org.apache.royale.textLayout.events.UpdateCompleteEvent, org.apache.royale.events.Event);


/**
 * @nocollapse
 * @const
 * @type {string}
 */
org.apache.royale.textLayout.events.UpdateCompleteEvent.UPDATE_COMPLETE = "updateComplete";


/**
 * @private
 * @type {org.apache.royale.textLayout.container.IContainerController}
 */
org.apache.royale.textLayout.events.UpdateCompleteEvent.prototype.org_apache_royale_textLayout_events_UpdateCompleteEvent__controller;


/**
 * @private
 * @type {org.apache.royale.textLayout.elements.ITextFlow}
 */
org.apache.royale.textLayout.events.UpdateCompleteEvent.prototype.org_apache_royale_textLayout_events_UpdateCompleteEvent__textFlow;


/** @asprivate 
 * @override
 */
org.apache.royale.textLayout.events.UpdateCompleteEvent.prototype.cloneEvent = function() {
  return new org.apache.royale.textLayout.events.UpdateCompleteEvent(this.type, this.bubbles, this.cancelable, this.org_apache_royale_textLayout_events_UpdateCompleteEvent__textFlow, this.org_apache_royale_textLayout_events_UpdateCompleteEvent__controller);
};


/**
 * @nocollapse
 * @export
 * @type {org.apache.royale.textLayout.container.IContainerController}
 */
org.apache.royale.textLayout.events.UpdateCompleteEvent.prototype.controller;


org.apache.royale.textLayout.events.UpdateCompleteEvent.prototype.get__controller = function() {
  return this.org_apache_royale_textLayout_events_UpdateCompleteEvent__controller;
};


org.apache.royale.textLayout.events.UpdateCompleteEvent.prototype.set__controller = function(c) {
  this.org_apache_royale_textLayout_events_UpdateCompleteEvent__controller = c;
};


/**
 * @nocollapse
 * @export
 * @type {org.apache.royale.textLayout.elements.ITextFlow}
 */
org.apache.royale.textLayout.events.UpdateCompleteEvent.prototype.textFlow;


org.apache.royale.textLayout.events.UpdateCompleteEvent.prototype.get__textFlow = function() {
  return this.org_apache_royale_textLayout_events_UpdateCompleteEvent__textFlow;
};


org.apache.royale.textLayout.events.UpdateCompleteEvent.prototype.set__textFlow = function(value) {
  this.org_apache_royale_textLayout_events_UpdateCompleteEvent__textFlow = value;
};


Object.defineProperties(org.apache.royale.textLayout.events.UpdateCompleteEvent.prototype, /** @lends {org.apache.royale.textLayout.events.UpdateCompleteEvent.prototype} */ {
/**
 * @type {org.apache.royale.textLayout.container.IContainerController}
 */
controller: {
get: org.apache.royale.textLayout.events.UpdateCompleteEvent.prototype.get__controller,
set: org.apache.royale.textLayout.events.UpdateCompleteEvent.prototype.set__controller},
/**
 * @type {org.apache.royale.textLayout.elements.ITextFlow}
 */
textFlow: {
get: org.apache.royale.textLayout.events.UpdateCompleteEvent.prototype.get__textFlow,
set: org.apache.royale.textLayout.events.UpdateCompleteEvent.prototype.set__textFlow}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.textLayout.events.UpdateCompleteEvent.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'UpdateCompleteEvent', qName: 'org.apache.royale.textLayout.events.UpdateCompleteEvent', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.textLayout.events.UpdateCompleteEvent.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'controller': { type: 'org.apache.royale.textLayout.container.IContainerController', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.events.UpdateCompleteEvent'},
        'textFlow': { type: 'org.apache.royale.textLayout.elements.ITextFlow', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.events.UpdateCompleteEvent'}
      };
    },
    methods: function () {
      return {
        'UpdateCompleteEvent': { type: '', declaredBy: 'org.apache.royale.textLayout.events.UpdateCompleteEvent', parameters: function () { return [ 'String', false ,'Boolean', true ,'Boolean', true ,'org.apache.royale.textLayout.elements.ITextFlow', true ,'org.apache.royale.textLayout.container.IContainerController', true ]; }},
        'cloneEvent': { type: 'org.apache.royale.events.IRoyaleEvent', declaredBy: 'org.apache.royale.textLayout.events.UpdateCompleteEvent'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.textLayout.events.UpdateCompleteEvent.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./UpdateCompleteEvent.js.map
