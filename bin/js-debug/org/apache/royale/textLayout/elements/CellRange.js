/**
 * Generated by Apache Royale Compiler from org/apache/royale/textLayout/elements/CellRange.as
 * org.apache.royale.textLayout.elements.CellRange
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.textLayout.elements.CellRange');
/* Royale Dependency List: org.apache.royale.textLayout.elements.CellCoordinates,org.apache.royale.textLayout.elements.ITableElement,XML*/




/**
 * @constructor
 * @param {org.apache.royale.textLayout.elements.ITableElement} table
 * @param {org.apache.royale.textLayout.elements.CellCoordinates} anchorCoords
 * @param {org.apache.royale.textLayout.elements.CellCoordinates} activeCoords
 */
org.apache.royale.textLayout.elements.CellRange = function(table, anchorCoords, activeCoords) {
  this.org_apache_royale_textLayout_elements_CellRange__table = table;
  this.org_apache_royale_textLayout_elements_CellRange__anchorCoords = this.org_apache_royale_textLayout_elements_CellRange_clampToRange(anchorCoords);
  this.org_apache_royale_textLayout_elements_CellRange__activeCoords = this.org_apache_royale_textLayout_elements_CellRange_clampToRange(activeCoords);
};


/**
 * @private
 * @type {org.apache.royale.textLayout.elements.ITableElement}
 */
org.apache.royale.textLayout.elements.CellRange.prototype.org_apache_royale_textLayout_elements_CellRange__table;


/**
 * @private
 * @type {org.apache.royale.textLayout.elements.CellCoordinates}
 */
org.apache.royale.textLayout.elements.CellRange.prototype.org_apache_royale_textLayout_elements_CellRange__anchorCoords;


/**
 * @private
 * @type {org.apache.royale.textLayout.elements.CellCoordinates}
 */
org.apache.royale.textLayout.elements.CellRange.prototype.org_apache_royale_textLayout_elements_CellRange__activeCoords;


/**
 * Limits the row and column values to 0 or the number of rows or column. 
 * @private
 * @param {org.apache.royale.textLayout.elements.CellCoordinates} coords
 * @return {org.apache.royale.textLayout.elements.CellCoordinates}
 */
org.apache.royale.textLayout.elements.CellRange.prototype.org_apache_royale_textLayout_elements_CellRange_clampToRange = function(coords) {
  if (coords == null)
    return null;
  if (coords.row < 0)
    coords.row = 0;
  if (coords.column < 0)
    coords.column = 0;
  if (this.org_apache_royale_textLayout_elements_CellRange__table == null)
    return coords;
  if (coords.row >= this.org_apache_royale_textLayout_elements_CellRange__table.numRows)
    coords.row = (this.org_apache_royale_textLayout_elements_CellRange__table.numRows - 1) >> 0;
  if (coords.column >= this.org_apache_royale_textLayout_elements_CellRange__table.numColumns)
    coords.column = (this.org_apache_royale_textLayout_elements_CellRange__table.numColumns - 1) >> 0;
  return coords;
};


/** 
 * Update the range with new anchor or active position values.
 *
 * @playerversion Flash 10
 * @playerversion AIR 1.5
 * @langversion 3.0
 *  @asparam newAnchorPosition	the anchor index of the selection.
 *  @asparam newActivePosition	the active index of the selection.
 *  @asreturn true if selection is changed.
 * @param {org.apache.royale.textLayout.elements.CellCoordinates} newAnchorCoordinates
 * @param {org.apache.royale.textLayout.elements.CellCoordinates} newActiveCoordinates
 * @return {boolean}
 */
org.apache.royale.textLayout.elements.CellRange.prototype.updateRange = function(newAnchorCoordinates, newActiveCoordinates) {
  this.org_apache_royale_textLayout_elements_CellRange_clampToRange(newAnchorCoordinates);
  this.org_apache_royale_textLayout_elements_CellRange_clampToRange(newActiveCoordinates);
  if (!org.apache.royale.textLayout.elements.CellCoordinates.areEqual(this.org_apache_royale_textLayout_elements_CellRange__anchorCoords, newAnchorCoordinates) || !org.apache.royale.textLayout.elements.CellCoordinates.areEqual(this.org_apache_royale_textLayout_elements_CellRange__activeCoords, newActiveCoordinates)) {
    this.org_apache_royale_textLayout_elements_CellRange__anchorCoords = newAnchorCoordinates;
    this.org_apache_royale_textLayout_elements_CellRange__activeCoords = newActiveCoordinates;
    return true;
  }
  return false;
};


/**
 * @nocollapse
 * @export
 * @type {org.apache.royale.textLayout.elements.ITableElement}
 */
org.apache.royale.textLayout.elements.CellRange.prototype.table;


org.apache.royale.textLayout.elements.CellRange.prototype.get__table = function() {
  return this.org_apache_royale_textLayout_elements_CellRange__table;
};


org.apache.royale.textLayout.elements.CellRange.prototype.set__table = function(value) {
  this.org_apache_royale_textLayout_elements_CellRange__table = value;
};


/**
 * @nocollapse
 * @export
 * @type {org.apache.royale.textLayout.elements.CellCoordinates}
 */
org.apache.royale.textLayout.elements.CellRange.prototype.anchorCoordinates;


org.apache.royale.textLayout.elements.CellRange.prototype.get__anchorCoordinates = function() {
  return this.org_apache_royale_textLayout_elements_CellRange__anchorCoords;
};


org.apache.royale.textLayout.elements.CellRange.prototype.set__anchorCoordinates = function(value) {
  this.org_apache_royale_textLayout_elements_CellRange__anchorCoords = value;
};


/**
 * @nocollapse
 * @export
 * @type {org.apache.royale.textLayout.elements.CellCoordinates}
 */
org.apache.royale.textLayout.elements.CellRange.prototype.activeCoordinates;


org.apache.royale.textLayout.elements.CellRange.prototype.get__activeCoordinates = function() {
  return this.org_apache_royale_textLayout_elements_CellRange__activeCoords;
};


org.apache.royale.textLayout.elements.CellRange.prototype.set__activeCoordinates = function(value) {
  this.org_apache_royale_textLayout_elements_CellRange__activeCoords = value;
};


Object.defineProperties(org.apache.royale.textLayout.elements.CellRange.prototype, /** @lends {org.apache.royale.textLayout.elements.CellRange.prototype} */ {
/**
 * @type {org.apache.royale.textLayout.elements.ITableElement}
 */
table: {
get: org.apache.royale.textLayout.elements.CellRange.prototype.get__table,
set: org.apache.royale.textLayout.elements.CellRange.prototype.set__table},
/**
 * @type {org.apache.royale.textLayout.elements.CellCoordinates}
 */
anchorCoordinates: {
get: org.apache.royale.textLayout.elements.CellRange.prototype.get__anchorCoordinates,
set: org.apache.royale.textLayout.elements.CellRange.prototype.set__anchorCoordinates},
/**
 * @type {org.apache.royale.textLayout.elements.CellCoordinates}
 */
activeCoordinates: {
get: org.apache.royale.textLayout.elements.CellRange.prototype.get__activeCoordinates,
set: org.apache.royale.textLayout.elements.CellRange.prototype.set__activeCoordinates}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.textLayout.elements.CellRange.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'CellRange', qName: 'org.apache.royale.textLayout.elements.CellRange', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.textLayout.elements.CellRange.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'table': { type: 'org.apache.royale.textLayout.elements.ITableElement', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.elements.CellRange'},
        'anchorCoordinates': { type: 'org.apache.royale.textLayout.elements.CellCoordinates', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.elements.CellRange'},
        'activeCoordinates': { type: 'org.apache.royale.textLayout.elements.CellCoordinates', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.elements.CellRange'}
      };
    },
    methods: function () {
      return {
        'CellRange': { type: '', declaredBy: 'org.apache.royale.textLayout.elements.CellRange', parameters: function () { return [ 'org.apache.royale.textLayout.elements.ITableElement', false ,'org.apache.royale.textLayout.elements.CellCoordinates', false ,'org.apache.royale.textLayout.elements.CellCoordinates', false ]; }},
        'updateRange': { type: 'Boolean', declaredBy: 'org.apache.royale.textLayout.elements.CellRange', parameters: function () { return [ 'org.apache.royale.textLayout.elements.CellCoordinates', false ,'org.apache.royale.textLayout.elements.CellCoordinates', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.textLayout.elements.CellRange.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./CellRange.js.map
