/**
 * Generated by Apache Royale Compiler from org/apache/royale/textLayout/elements/FlowGroupHelper.as
 * org.apache.royale.textLayout.elements.FlowGroupHelper
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.textLayout.elements.FlowGroupHelper');
/* Royale Dependency List: org.apache.royale.reflection.getQualifiedClassName,org.apache.royale.textLayout.elements.ElementHelper,org.apache.royale.textLayout.elements.GlobalSettings,org.apache.royale.textLayout.elements.IContainerFormattedElement,org.apache.royale.textLayout.elements.IFlowElement,org.apache.royale.textLayout.elements.IFlowGroupElement,org.apache.royale.textLayout.elements.IParagraphFormattedElement,org.apache.royale.textLayout.elements.ISpanElement,org.apache.royale.textLayout.elements.ISubParagraphGroupElementBase,org.apache.royale.utils.Language,XML*/




/**
 * @constructor
 */
org.apache.royale.textLayout.elements.FlowGroupHelper = function() {
};


/**
 * @nocollapse
 * @param {org.apache.royale.textLayout.elements.IFlowGroupElement} group
 * @param {Array} array
 */
org.apache.royale.textLayout.elements.FlowGroupHelper.setMxmlChildren = function(group, array) {
  group.replaceChildren(0, group.numChildren);
  var /** @type {org.apache.royale.textLayout.elements.IFlowGroupElement} */ effectiveParent = group;
  var foreachiter0_target = array;
  for (var foreachiter0 in foreachiter0_target) 
  {
  var child = foreachiter0_target[foreachiter0];
  {
    if (org.apache.royale.utils.Language.is(child, org.apache.royale.textLayout.elements.IFlowElement)) {
      if (org.apache.royale.utils.Language.is(child, org.apache.royale.textLayout.elements.IParagraphFormattedElement)) {
        effectiveParent = group;
      } else if (org.apache.royale.utils.Language.is(effectiveParent, org.apache.royale.textLayout.elements.IContainerFormattedElement)) {
        effectiveParent = org.apache.royale.textLayout.elements.ElementHelper.getParagraph();
        effectiveParent.impliedElement = true;
        group.replaceChildren(group.numChildren, group.numChildren, effectiveParent);
      }
      if (org.apache.royale.utils.Language.is(child, org.apache.royale.textLayout.elements.ISpanElement) || org.apache.royale.utils.Language.is(child, org.apache.royale.textLayout.elements.ISubParagraphGroupElementBase))
        child.bindableElement = true;
      effectiveParent.replaceChildren(effectiveParent.numChildren, effectiveParent.numChildren, org.apache.royale.utils.Language.as(child, org.apache.royale.textLayout.elements.IFlowElement, true));
    } else if (org.apache.royale.utils.Language.is(child, String)) {
      var /** @type {org.apache.royale.textLayout.elements.ISpanElement} */ s = org.apache.royale.textLayout.elements.ElementHelper.getSpan();
      s.text = String(child);
      s.bindableElement = true;
      s.impliedElement = true;
      if (org.apache.royale.utils.Language.is(effectiveParent, org.apache.royale.textLayout.elements.IContainerFormattedElement)) {
        effectiveParent = org.apache.royale.textLayout.elements.ElementHelper.getParagraph();
        group.replaceChildren(group.numChildren, group.numChildren, effectiveParent);
        effectiveParent.impliedElement = true;
      }
      effectiveParent.replaceChildren(effectiveParent.numChildren, effectiveParent.numChildren, s);
    }
    else if (child != null)
      throw new TypeError(org.apache.royale.textLayout.elements.GlobalSettings.resourceStringFunction("badMXMLChildrenArgument", [org.apache.royale.reflection.getQualifiedClassName(child)]));
  }}
  
};


/**
 * @nocollapse
 * @param {org.apache.royale.textLayout.elements.IFlowGroupElement} group
 * @param {string} text
 * @param {number=} relativeStart
 * @param {number=} relativeEnd
 * @param {string=} paragraphSeparator
 * @return {string}
 */
org.apache.royale.textLayout.elements.FlowGroupHelper.getText = function(group, text, relativeStart, relativeEnd, paragraphSeparator) {
  relativeStart = typeof relativeStart !== 'undefined' ? relativeStart : 0;
  relativeEnd = typeof relativeEnd !== 'undefined' ? relativeEnd : -1;
  paragraphSeparator = typeof paragraphSeparator !== 'undefined' ? paragraphSeparator : "\n";
  if (relativeEnd == -1 || relativeEnd > group.textLength)
    relativeEnd = group.textLength;
  if (relativeStart < 0)
    relativeStart = 0;
  var /** @type {number} */ pos = relativeStart;
  for (var /** @type {number} */ idx = group.findChildIndexAtPosition(relativeStart); idx >= 0 && idx < group.numChildren && pos < relativeEnd; idx++) {
    var /** @type {org.apache.royale.textLayout.elements.IFlowElement} */ child = group.getChildAt(idx);
    var /** @type {number} */ copyStart = (pos - child.parentRelativeStart) >> 0;
    var /** @type {number} */ copyEnd = (Math.min(relativeEnd - child.parentRelativeStart, child.textLength)) >> 0;
    text += child.getText(copyStart, copyEnd, paragraphSeparator);
    pos += (copyEnd - copyStart) >> 0;
    if (paragraphSeparator && org.apache.royale.utils.Language.is(child, org.apache.royale.textLayout.elements.IParagraphFormattedElement) && pos < relativeEnd)
      text += paragraphSeparator;
  }
  return text;
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.textLayout.elements.FlowGroupHelper.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'FlowGroupHelper', qName: 'org.apache.royale.textLayout.elements.FlowGroupHelper', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.textLayout.elements.FlowGroupHelper.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    methods: function () {
      return {
        '|setMxmlChildren': { type: 'void', declaredBy: 'org.apache.royale.textLayout.elements.FlowGroupHelper', parameters: function () { return [ 'org.apache.royale.textLayout.elements.IFlowGroupElement', false ,'Array', false ]; }},
        '|getText': { type: 'String', declaredBy: 'org.apache.royale.textLayout.elements.FlowGroupHelper', parameters: function () { return [ 'org.apache.royale.textLayout.elements.IFlowGroupElement', false ,'String', false ,'int', true ,'int', true ,'String', true ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.textLayout.elements.FlowGroupHelper.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./FlowGroupHelper.js.map
