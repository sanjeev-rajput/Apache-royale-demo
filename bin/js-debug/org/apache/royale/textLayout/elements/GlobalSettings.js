/**
 * Generated by Apache Royale Compiler from org/apache/royale/textLayout/elements/GlobalSettings.as
 * org.apache.royale.textLayout.elements.GlobalSettings
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.textLayout.elements.GlobalSettings');
/* Royale Dependency List: XML,org.apache.royale.utils.Language*/



/**
 * @constructor
 */
org.apache.royale.textLayout.elements.GlobalSettings = function() {
};


/**
 * @private
 * @type {Function}
 */
org.apache.royale.textLayout.elements.GlobalSettings._fontMapperFunction;


/**
 * @private
 * @type {boolean}
 */
org.apache.royale.textLayout.elements.GlobalSettings._enableSearch = true;


/**
 * @private
 * @type {Function}
 */
org.apache.royale.textLayout.elements.GlobalSettings._resolveFontLookupFunction;


/**
 * @private
 * @type {Function}
 */
org.apache.royale.textLayout.elements.GlobalSettings._resourceStringFunction;


/**
 * @private
 * @const
 * @type {Object}
 */
org.apache.royale.textLayout.elements.GlobalSettings.resourceDict = {"missingStringResource":"No string for resource {0}", "invalidFlowElementConstruct":"Attempted construct of invalid FlowElement subclass", "invalidSplitAtPosition":"Invalid parameter to splitAtPosition", "badMXMLChildrenArgument":"Bad element of type {0} passed to mxmlChildren", "badReplaceChildrenIndex":"Out of range index to FlowGroupElement.replaceChildren", "invalidChildType":"NewElement not of a type that this can be parent of", "badRemoveChild":"Child to remove not found", "invalidSplitAtIndex":"Invalid parameter to splitAtIndex", "badShallowCopyRange":"Bad range in shallowCopy", "badSurrogatePairCopy":"Copying only half of a surrogate pair in SpanElement.shallowCopy", "invalidReplaceTextPositions":"Invalid positions passed to SpanElement.replaceText", "invalidSurrogatePairSplit":"Invalid splitting of a surrogate pair", "badPropertyValue":"Property {0} value {1} is out of range", "illegalOperation":"Illegal attempt to execute {0} operation", "unexpectedXMLElementInSpan":"Unexpected element {0} within a span", "unexpectedNamespace":"Unexpected namespace {0}", "unknownElement":"Unknown element {0}", "unknownAttribute":"Attribute {0} not permitted in element {1}", "malformedTag":"Malformed tag {0}", "malformedMarkup":"Malformed markup {0}", "missingTextFlow":"No TextFlow to parse", "expectedExactlyOneTextLayoutFormat":"Expected one and only one TextLayoutFormat in {0}", "expectedExactlyOneListMarkerFormat":"Expected one and only one ListMarkerFormat in {0}", "unsupportedVersion":"Version {0} is unsupported", "unsupportedProperty":"Property {0} is unsupported"};


/** @asprivate 
 * @nocollapse
 * @param {string} resourceName
 * @param {Array=} parameters
 * @return {string}
 */
org.apache.royale.textLayout.elements.GlobalSettings.defaultResourceStringFunction = function(resourceName, parameters) {
  parameters = typeof parameters !== 'undefined' ? parameters : null;
  var /** @type {string} */ value = String(org.apache.royale.textLayout.elements.GlobalSettings.resourceDict[resourceName]);
  if (value == null) {
    value = String(org.apache.royale.textLayout.elements.GlobalSettings.resourceDict["missingStringResource"]);
    parameters = [resourceName];
  }
  if (parameters)
    value = org.apache.royale.textLayout.elements.GlobalSettings.substitute(value, parameters);
  return value;
};


/** @asprivate 
 * @nocollapse
 * @param {string} str
 * @param {...} rest
 * @return {string}
 */
org.apache.royale.textLayout.elements.GlobalSettings.substitute = function(str, rest) {
  rest = Array.prototype.slice.call(arguments, 1);
  if (str == null)
    return '';
  var /** @type {number} */ len = (rest.length) >>> 0;
  var /** @type {Array} */ args;
  if (len == 1 && org.apache.royale.utils.Language.is(rest[0], Array)) {
    args = rest[0];
    len = (args.length) >>> 0;
  } else {
    args = rest;
  }
  for (var /** @type {number} */ i = 0; i < len; i++) {
    str = str.replace(new RegExp("\\{" + i + "\\}", "g"), args[i]);
  }
  return str;
};


/**
 * @private
 * @type {boolean}
 */
org.apache.royale.textLayout.elements.GlobalSettings._enableDefaultTabStops = false;


/**
 * @private
 * @type {boolean}
 */
org.apache.royale.textLayout.elements.GlobalSettings._alwaysCalculateWhitespaceBounds = false;


/**
 * @nocollapse
 * @const
 * @type {boolean}
 */
org.apache.royale.textLayout.elements.GlobalSettings.playerEnablesSpicyFeatures = false;


/**
 * @nocollapse
 * @const
 * @type {boolean}
 */
org.apache.royale.textLayout.elements.GlobalSettings.hasTouchScreen = false;


/**
 * @nocollapse
 * @export
 * @type {Function}
 */
org.apache.royale.textLayout.elements.GlobalSettings.fontMapperFunction;


org.apache.royale.textLayout.elements.GlobalSettings.get__fontMapperFunction = function() {
  return org.apache.royale.textLayout.elements.GlobalSettings._fontMapperFunction;
};


org.apache.royale.textLayout.elements.GlobalSettings.set__fontMapperFunction = function(val) {
  org.apache.royale.textLayout.elements.GlobalSettings._fontMapperFunction = val;
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
org.apache.royale.textLayout.elements.GlobalSettings.enableSearch;


org.apache.royale.textLayout.elements.GlobalSettings.get__enableSearch = function() {
  return org.apache.royale.textLayout.elements.GlobalSettings._enableSearch;
};


org.apache.royale.textLayout.elements.GlobalSettings.set__enableSearch = function(value) {
  org.apache.royale.textLayout.elements.GlobalSettings._enableSearch = value;
};


/**
 * @nocollapse
 * @export
 * @type {Function}
 */
org.apache.royale.textLayout.elements.GlobalSettings.resolveFontLookupFunction;


org.apache.royale.textLayout.elements.GlobalSettings.get__resolveFontLookupFunction = function() {
  return org.apache.royale.textLayout.elements.GlobalSettings._resolveFontLookupFunction;
};


org.apache.royale.textLayout.elements.GlobalSettings.set__resolveFontLookupFunction = function(val) {
  org.apache.royale.textLayout.elements.GlobalSettings._resolveFontLookupFunction = val;
};


/**
 * @nocollapse
 * @export
 * @type {Function}
 */
org.apache.royale.textLayout.elements.GlobalSettings.resourceStringFunction;


org.apache.royale.textLayout.elements.GlobalSettings.get__resourceStringFunction = function() {
  return org.apache.royale.textLayout.elements.GlobalSettings._resourceStringFunction;
};


org.apache.royale.textLayout.elements.GlobalSettings.set__resourceStringFunction = function(val) {
  org.apache.royale.textLayout.elements.GlobalSettings._resourceStringFunction = val;
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
org.apache.royale.textLayout.elements.GlobalSettings.enableDefaultTabStops;


org.apache.royale.textLayout.elements.GlobalSettings.get__enableDefaultTabStops = function() {
  return org.apache.royale.textLayout.elements.GlobalSettings._enableDefaultTabStops;
};


org.apache.royale.textLayout.elements.GlobalSettings.set__enableDefaultTabStops = function(val) {
  org.apache.royale.textLayout.elements.GlobalSettings._enableDefaultTabStops = val;
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
org.apache.royale.textLayout.elements.GlobalSettings.alwaysCalculateWhitespaceBounds;


org.apache.royale.textLayout.elements.GlobalSettings.get__alwaysCalculateWhitespaceBounds = function() {
  return org.apache.royale.textLayout.elements.GlobalSettings._alwaysCalculateWhitespaceBounds;
};


org.apache.royale.textLayout.elements.GlobalSettings.set__alwaysCalculateWhitespaceBounds = function(val) {
  org.apache.royale.textLayout.elements.GlobalSettings._alwaysCalculateWhitespaceBounds = val;
};


Object.defineProperties(org.apache.royale.textLayout.elements.GlobalSettings, /** @lends {org.apache.royale.textLayout.elements.GlobalSettings} */ {
/**
 * @type {Function}
 */
fontMapperFunction: {
get: org.apache.royale.textLayout.elements.GlobalSettings.get__fontMapperFunction,
set: org.apache.royale.textLayout.elements.GlobalSettings.set__fontMapperFunction},
/**
 * @type {boolean}
 */
enableSearch: {
get: org.apache.royale.textLayout.elements.GlobalSettings.get__enableSearch,
set: org.apache.royale.textLayout.elements.GlobalSettings.set__enableSearch},
/**
 * @type {Function}
 */
resolveFontLookupFunction: {
get: org.apache.royale.textLayout.elements.GlobalSettings.get__resolveFontLookupFunction,
set: org.apache.royale.textLayout.elements.GlobalSettings.set__resolveFontLookupFunction},
/**
 * @type {Function}
 */
resourceStringFunction: {
get: org.apache.royale.textLayout.elements.GlobalSettings.get__resourceStringFunction,
set: org.apache.royale.textLayout.elements.GlobalSettings.set__resourceStringFunction},
/**
 * @type {boolean}
 */
enableDefaultTabStops: {
get: org.apache.royale.textLayout.elements.GlobalSettings.get__enableDefaultTabStops,
set: org.apache.royale.textLayout.elements.GlobalSettings.set__enableDefaultTabStops},
/**
 * @type {boolean}
 */
alwaysCalculateWhitespaceBounds: {
get: org.apache.royale.textLayout.elements.GlobalSettings.get__alwaysCalculateWhitespaceBounds,
set: org.apache.royale.textLayout.elements.GlobalSettings.set__alwaysCalculateWhitespaceBounds}}
);

org.apache.royale.textLayout.elements.GlobalSettings._resourceStringFunction = org.apache.royale.textLayout.elements.GlobalSettings.defaultResourceStringFunction;




/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.textLayout.elements.GlobalSettings.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'GlobalSettings', qName: 'org.apache.royale.textLayout.elements.GlobalSettings', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.textLayout.elements.GlobalSettings.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        '|fontMapperFunction': { type: 'Function', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.elements.GlobalSettings'},
        '|enableSearch': { type: 'Boolean', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.elements.GlobalSettings'},
        '|resolveFontLookupFunction': { type: 'Function', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.elements.GlobalSettings'},
        '|resourceStringFunction': { type: 'Function', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.elements.GlobalSettings'},
        '|enableDefaultTabStops': { type: 'Boolean', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.elements.GlobalSettings'},
        '|alwaysCalculateWhitespaceBounds': { type: 'Boolean', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.elements.GlobalSettings'}
      };
    },
    methods: function () {
      return {
        '|defaultResourceStringFunction': { type: 'String', declaredBy: 'org.apache.royale.textLayout.elements.GlobalSettings', parameters: function () { return [ 'String', false ,'Array', true ]; }},
        '|substitute': { type: 'String', declaredBy: 'org.apache.royale.textLayout.elements.GlobalSettings', parameters: function () { return [ 'String', false ,'Array', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.textLayout.elements.GlobalSettings.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./GlobalSettings.js.map
