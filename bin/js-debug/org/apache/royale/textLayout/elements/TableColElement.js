/**
 * Generated by Apache Royale Compiler from org/apache/royale/textLayout/elements/TableColElement.as
 * org.apache.royale.textLayout.elements.TableColElement
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.textLayout.elements.TableColElement');
/* Royale Dependency List: org.apache.royale.textLayout.elements.IFlowElement,org.apache.royale.textLayout.elements.ITableCellElement,org.apache.royale.textLayout.formats.ITextLayoutFormat,XML*/

goog.require('org.apache.royale.textLayout.elements.TableFormattedElement');
goog.require('org.apache.royale.textLayout.elements.ITableColElement');



/**
 * @constructor
 * @extends {org.apache.royale.textLayout.elements.TableFormattedElement}
 * @implements {org.apache.royale.textLayout.elements.ITableColElement}
 * @param {org.apache.royale.textLayout.formats.ITextLayoutFormat=} format
 */
org.apache.royale.textLayout.elements.TableColElement = function(format) {
  format = typeof format !== 'undefined' ? format : null;
  org.apache.royale.textLayout.elements.TableColElement.base(this, 'constructor');
  if (format)
    this.format = format;
};
goog.inherits(org.apache.royale.textLayout.elements.TableColElement, org.apache.royale.textLayout.elements.TableFormattedElement);


/**
 * @private
 * @type {number}
 */
org.apache.royale.textLayout.elements.TableColElement.prototype.org_apache_royale_textLayout_elements_TableColElement__x;


/**
 * @private
 * @type {number}
 */
org.apache.royale.textLayout.elements.TableColElement.prototype.org_apache_royale_textLayout_elements_TableColElement__colIndex = 0;


/** @asprivate 
 * @override
 */
org.apache.royale.textLayout.elements.TableColElement.prototype.canOwnFlowElement = function(elem) {
  return false;
};


/** @asprivate if its in a numbered list expand the damage to all list items - causes the numbers to be regenerated 
 * @override
 */
org.apache.royale.textLayout.elements.TableColElement.prototype.modelChanged = function(changeType, elem, changeStart, changeLen, needNormalize, bumpGeneration) {
  needNormalize = typeof needNormalize !== 'undefined' ? needNormalize : true;
  bumpGeneration = typeof bumpGeneration !== 'undefined' ? bumpGeneration : true;
  org.apache.royale.textLayout.elements.TableColElement.superClass_.modelChanged.apply(this, [changeType, elem, changeStart, changeLen, needNormalize, bumpGeneration]);
};


org.apache.royale.textLayout.elements.TableColElement.prototype.get__className = function() {
  return "TableColElement";
};


org.apache.royale.textLayout.elements.TableColElement.prototype.get__abstract = function() {
  return false;
};


org.apache.royale.textLayout.elements.TableColElement.prototype.get__defaultTypeName = function() {
  return "col";
};


/**
 * @nocollapse
 * @export
 * @type {Array.<ITableCellElement>}
 */
org.apache.royale.textLayout.elements.TableColElement.prototype.cells;


org.apache.royale.textLayout.elements.TableColElement.prototype.get__cells = function() {
  if (!this.table) {
    return null;
  }
  return this.table.getCellsForColumn(this);
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
org.apache.royale.textLayout.elements.TableColElement.prototype.numCells;


org.apache.royale.textLayout.elements.TableColElement.prototype.get__numCells = function() {
  if (!this.table) {
    return 0;
  }
  return (this.table.getCellsForColumn(this).length) >> 0;
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
org.apache.royale.textLayout.elements.TableColElement.prototype.x;


org.apache.royale.textLayout.elements.TableColElement.prototype.get__x = function() {
  return this.org_apache_royale_textLayout_elements_TableColElement__x;
};


org.apache.royale.textLayout.elements.TableColElement.prototype.set__x = function(x) {
  this.org_apache_royale_textLayout_elements_TableColElement__x = x;
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
org.apache.royale.textLayout.elements.TableColElement.prototype.colIndex;


org.apache.royale.textLayout.elements.TableColElement.prototype.get__colIndex = function() {
  return this.org_apache_royale_textLayout_elements_TableColElement__colIndex;
};


org.apache.royale.textLayout.elements.TableColElement.prototype.set__colIndex = function(colIndex) {
  this.org_apache_royale_textLayout_elements_TableColElement__colIndex = colIndex;
};


Object.defineProperties(org.apache.royale.textLayout.elements.TableColElement.prototype, /** @lends {org.apache.royale.textLayout.elements.TableColElement.prototype} */ {
/**
 * @type {string}
 */
className: {
get: org.apache.royale.textLayout.elements.TableColElement.prototype.get__className},
/**
 * @type {boolean}
 */
abstract: {
get: org.apache.royale.textLayout.elements.TableColElement.prototype.get__abstract},
/**
 * @type {string}
 */
defaultTypeName: {
get: org.apache.royale.textLayout.elements.TableColElement.prototype.get__defaultTypeName},
/**
 * @type {Array.<ITableCellElement>}
 */
cells: {
get: org.apache.royale.textLayout.elements.TableColElement.prototype.get__cells},
/**
 * @type {number}
 */
numCells: {
get: org.apache.royale.textLayout.elements.TableColElement.prototype.get__numCells},
/**
 * @type {number}
 */
x: {
get: org.apache.royale.textLayout.elements.TableColElement.prototype.get__x,
set: org.apache.royale.textLayout.elements.TableColElement.prototype.set__x},
/**
 * @type {number}
 */
colIndex: {
get: org.apache.royale.textLayout.elements.TableColElement.prototype.get__colIndex,
set: org.apache.royale.textLayout.elements.TableColElement.prototype.set__colIndex}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.textLayout.elements.TableColElement.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'TableColElement', qName: 'org.apache.royale.textLayout.elements.TableColElement', kind: 'class' }], interfaces: [org.apache.royale.textLayout.elements.ITableColElement] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.textLayout.elements.TableColElement.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'className': { type: 'String', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.elements.TableColElement'},
        'defaultTypeName': { type: 'String', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.elements.TableColElement'},
        'cells': { type: 'Vector.<org.apache.royale.textLayout.elements.ITableCellElement>', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.elements.TableColElement'},
        'numCells': { type: 'int', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.elements.TableColElement'},
        'x': { type: 'Number', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.elements.TableColElement'},
        'colIndex': { type: 'int', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.elements.TableColElement'}
      };
    },
    methods: function () {
      return {
        'TableColElement': { type: '', declaredBy: 'org.apache.royale.textLayout.elements.TableColElement', parameters: function () { return [ 'org.apache.royale.textLayout.formats.ITextLayoutFormat', true ]; }},
        'canOwnFlowElement': { type: 'Boolean', declaredBy: 'org.apache.royale.textLayout.elements.TableColElement', parameters: function () { return [ 'org.apache.royale.textLayout.elements.IFlowElement', false ]; }},
        'modelChanged': { type: 'void', declaredBy: 'org.apache.royale.textLayout.elements.TableColElement', parameters: function () { return [ 'String', false ,'org.apache.royale.textLayout.elements.IFlowElement', false ,'int', false ,'int', false ,'Boolean', true ,'Boolean', true ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.textLayout.elements.TableColElement.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./TableColElement.js.map
