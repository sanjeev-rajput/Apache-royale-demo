/**
 * Generated by Apache Royale Compiler from org/apache/royale/textLayout/elements/TableCellElement.as
 * org.apache.royale.textLayout.elements.TableCellElement
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.textLayout.elements.TableCellElement');
/* Royale Dependency List: org.apache.royale.reflection.getDefinitionByName,org.apache.royale.reflection.getQualifiedClassName,org.apache.royale.textLayout.compose.ITextFlowLine,org.apache.royale.textLayout.container.ContainerUtil,org.apache.royale.textLayout.container.IContainerController,org.apache.royale.textLayout.elements.CellContainer,org.apache.royale.textLayout.elements.ElementHelper,org.apache.royale.textLayout.elements.IFlowElement,org.apache.royale.textLayout.elements.ITableElement,org.apache.royale.textLayout.elements.ITableRowElement,org.apache.royale.textLayout.elements.ITextFlow,org.apache.royale.textLayout.events.DamageEvent,org.apache.royale.textLayout.factory.ITLFFactory,org.apache.royale.textLayout.formats.BlockProgression,org.apache.royale.utils.Language,XML*/

goog.require('org.apache.royale.textLayout.elements.ITableCellElement');
goog.require('org.apache.royale.textLayout.elements.TableFormattedElement');



/**
 * @constructor
 * @extends {org.apache.royale.textLayout.elements.TableFormattedElement}
 * @implements {org.apache.royale.textLayout.elements.ITableCellElement}
 */
org.apache.royale.textLayout.elements.TableCellElement = function() {
  org.apache.royale.textLayout.elements.TableCellElement.base(this, 'constructor');
  this.org_apache_royale_textLayout_elements_TableCellElement__controller = org.apache.royale.textLayout.container.ContainerUtil.getController(this.container, NaN, NaN);
};
goog.inherits(org.apache.royale.textLayout.elements.TableCellElement, org.apache.royale.textLayout.elements.TableFormattedElement);


/**
 * @private
 * @type {number}
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.org_apache_royale_textLayout_elements_TableCellElement__width;


/**
 * @private
 * @type {number}
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.org_apache_royale_textLayout_elements_TableCellElement__height;


/**
 * @private
 * @type {number}
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.org_apache_royale_textLayout_elements_TableCellElement__parcelIndex = 0;


/**
 * @private
 * @type {org.apache.royale.textLayout.elements.CellContainer}
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.org_apache_royale_textLayout_elements_TableCellElement__container;


/**
 * @private
 * @type {boolean}
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.org_apache_royale_textLayout_elements_TableCellElement__enableIME = true;


/**
 * @private
 * @type {boolean}
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.org_apache_royale_textLayout_elements_TableCellElement__damaged = true;


/**
 * @private
 * @type {org.apache.royale.textLayout.container.IContainerController}
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.org_apache_royale_textLayout_elements_TableCellElement__controller;


/**
 * @private
 * @type {number}
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.org_apache_royale_textLayout_elements_TableCellElement__rowSpan = 1;


/**
 * @private
 * @type {number}
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.org_apache_royale_textLayout_elements_TableCellElement__columnSpan = 1;


/**
 * @private
 * @type {number}
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.org_apache_royale_textLayout_elements_TableCellElement__rowIndex = -1;


/**
 * @private
 * @type {number}
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.org_apache_royale_textLayout_elements_TableCellElement__colIndex = -1;


/**
 * @private
 * @type {boolean}
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.org_apache_royale_textLayout_elements_TableCellElement__includeDescentInCellBounds;


/** @asprivate 
 * @override
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.canOwnFlowElement = function(elem) {
  return org.apache.royale.utils.Language.is(elem, org.apache.royale.textLayout.elements.IFlowElement);
};


/**
 * @return {boolean}
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.isDamaged = function() {
  return !!(this.org_apache_royale_textLayout_elements_TableCellElement__damaged || (this._textFlow && this._textFlow.flowComposer.isPotentiallyDamaged(this._textFlow.textLength)));
};


/**
 * @private
 * @type {number}
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.org_apache_royale_textLayout_elements_TableCellElement__savedPaddingTop = 0;


/**
 * @private
 * @type {number}
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.org_apache_royale_textLayout_elements_TableCellElement__savedPaddingBottom = 0;


/**
 * @private
 * @type {number}
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.org_apache_royale_textLayout_elements_TableCellElement__savedPaddingLeft = 0;


/**
 * @private
 * @type {number}
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.org_apache_royale_textLayout_elements_TableCellElement__savedPaddingRight = 0;


/**
 * @return {boolean}
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.compose = function() {
  var /** @type {number} */ pt = this.getEffectivePaddingTop();
  var /** @type {number} */ pb = this.getEffectivePaddingBottom();
  var /** @type {number} */ pl = this.getEffectivePaddingLeft();
  var /** @type {number} */ pr = this.getEffectivePaddingRight();
  if (pt != this.org_apache_royale_textLayout_elements_TableCellElement__savedPaddingTop) {
    this.org_apache_royale_textLayout_elements_TableCellElement__controller.paddingTop = this.org_apache_royale_textLayout_elements_TableCellElement__savedPaddingTop = pt;
  }
  if (pb != this.org_apache_royale_textLayout_elements_TableCellElement__savedPaddingBottom) {
    this.org_apache_royale_textLayout_elements_TableCellElement__controller.paddingBottom = this.org_apache_royale_textLayout_elements_TableCellElement__savedPaddingBottom = pb;
  }
  if (pl != this.org_apache_royale_textLayout_elements_TableCellElement__savedPaddingLeft) {
    this.org_apache_royale_textLayout_elements_TableCellElement__controller.paddingLeft = this.org_apache_royale_textLayout_elements_TableCellElement__savedPaddingLeft = pl;
  }
  if (pr != this.org_apache_royale_textLayout_elements_TableCellElement__savedPaddingRight) {
    this.org_apache_royale_textLayout_elements_TableCellElement__controller.paddingRight = this.org_apache_royale_textLayout_elements_TableCellElement__savedPaddingRight = pr;
  }
  var /** @type {org.apache.royale.textLayout.elements.ITableElement} */ table = this.table;
  this.org_apache_royale_textLayout_elements_TableCellElement__damaged = false;
  var /** @type {number} */ compWidth = 0;
  for (var /** @type {number} */ i = 0; i < this.columnSpan; i++) {
    if (table && table.getColumnAt((this.colIndex + i) >> 0)) {
      compWidth += Number(table.getColumnAt((this.colIndex + i) >> 0).columnWidth);
    }
  }
  this.width = compWidth;
  if (this._textFlow && this._textFlow.flowComposer) {
    return this._textFlow.flowComposer.compose();
  }
  return false;
};


/**
 * @return {boolean}
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.update = function() {
  if (this._textFlow && this._textFlow.flowComposer) {
    return this._textFlow.flowComposer.updateAllControllers();
  }
  return false;
};


/**
 * @protected
 * @type {org.apache.royale.textLayout.elements.ITextFlow}
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype._textFlow;


/**
 * @private
 * @param {org.apache.royale.textLayout.events.DamageEvent} ev
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.org_apache_royale_textLayout_elements_TableCellElement_handleCellDamage = function(ev) {
  this.damage();
};


/**
 * @return {number}
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.getComposedHeight = function() {
  var /** @type {number} */ descent = 0;
  if (!this.includeDescentInCellBounds) {
    if (this._textFlow.flowComposer && this._textFlow.flowComposer.numLines) {
      var /** @type {org.apache.royale.textLayout.compose.ITextFlowLine} */ lastLine = this._textFlow.flowComposer.getLineAt((this._textFlow.flowComposer.numLines - 1) >> 0);
      if (lastLine)
        descent = lastLine.descent;
    }
  }
  return (this.org_apache_royale_textLayout_elements_TableCellElement__controller.getContentBounds().height - descent);
};


/**
 * @return {number}
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.getRowHeight = function() {
  return this.getRow() ? this.getRow().composedHeight : NaN;
};


/**
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.updateCompositionShapes = function() {
  this.org_apache_royale_textLayout_elements_TableCellElement__controller.updateCompositionShapes();
};


/**
 * Return the row that this cell is part of or null 
 * if not part of a row.
 * @return {org.apache.royale.textLayout.elements.ITableRowElement}
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.getRow = function() {
  return this.table ? this.table.getRowAt(this.rowIndex) : null;
};


/**
 * Returns the next cell in the table or null if not part of a
 * table or no cells exist after this cell.
 * @return {org.apache.royale.textLayout.elements.ITableCellElement}
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.getNextCell = function() {
  return this.table ? this.table.getNextCell(this) : null;
};


/**
 * Returns the previous cell in the table or null if not part of a
 * table or no cells exist before this cell.
 * @return {org.apache.royale.textLayout.elements.ITableCellElement}
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.getPreviousCell = function() {
  return this.table ? this.table.getPreviousCell(this) : null;
};


/**
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.damage = function() {
  if (this.table) {
    this.table.hasCellDamage = true;
  }
  this.org_apache_royale_textLayout_elements_TableCellElement__damaged = true;
};


/**
 * Adds in the table cell spacing, border stroke width. 
 * We may be able to set this value when the format changes. 
 * For now we just want to get it to work. 
 * @return {number}
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.getTotalPaddingWidth = function() {
  var /** @type {number} */ paddingAmount = 0;
  if (!this.textFlow) {
    return 0;
  }
  if (this.table && this.table.cellSpacing != undefined) {
    paddingAmount += Number(this.table.cellSpacing);
  }
  if (this.textFlow.computedFormat.blockProgression == org.apache.royale.textLayout.formats.BlockProgression.RL) {
    paddingAmount += Math.max(this.getEffectivePaddingTop() + this.getEffectivePaddingBottom(), this.getEffectiveBorderTopWidth() + this.getEffectiveBorderBottomWidth());
  } else {
    paddingAmount += Math.max(this.getEffectivePaddingLeft() + this.getEffectivePaddingRight(), this.getEffectiveBorderLeftWidth() + this.getEffectiveBorderRightWidth());
  }
  return paddingAmount;
};


/**
 * Adds in the table cell spacing, border stroke height. 
 * We may be able to set this value when the format changes. 
 * @return {number}
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.getTotalPaddingHeight = function() {
  var /** @type {number} */ paddingAmount = 0;
  if (!this.textFlow) {
    return 0;
  }
  if (this.table && this.table.cellSpacing != undefined) {
    paddingAmount += Number(this.table.cellSpacing);
  }
  if (this.textFlow.computedFormat.blockProgression == org.apache.royale.textLayout.formats.BlockProgression.RL) {
    paddingAmount += Math.max(this.getEffectivePaddingLeft() + this.getEffectivePaddingRight(), this.getEffectiveBorderLeftWidth() + this.getEffectiveBorderRightWidth());
  } else {
    paddingAmount += Math.max(this.getEffectivePaddingTop() + this.getEffectivePaddingBottom(), this.getEffectiveBorderTopWidth() + this.getEffectiveBorderBottomWidth());
  }
  return paddingAmount;
};


org.apache.royale.textLayout.elements.TableCellElement.prototype.get__className = function() {
  return "TableCellElement";
};


org.apache.royale.textLayout.elements.TableCellElement.prototype.get__abstract = function() {
  return false;
};


org.apache.royale.textLayout.elements.TableCellElement.prototype.get__defaultTypeName = function() {
  return "td";
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.parcelIndex;


org.apache.royale.textLayout.elements.TableCellElement.prototype.get__parcelIndex = function() {
  return this.org_apache_royale_textLayout_elements_TableCellElement__parcelIndex;
};


org.apache.royale.textLayout.elements.TableCellElement.prototype.set__parcelIndex = function(value) {
  this.org_apache_royale_textLayout_elements_TableCellElement__parcelIndex = value;
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.rowIndex;


org.apache.royale.textLayout.elements.TableCellElement.prototype.get__rowIndex = function() {
  return this.org_apache_royale_textLayout_elements_TableCellElement__rowIndex;
};


org.apache.royale.textLayout.elements.TableCellElement.prototype.set__rowIndex = function(value) {
  this.org_apache_royale_textLayout_elements_TableCellElement__rowIndex = value;
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.colIndex;


org.apache.royale.textLayout.elements.TableCellElement.prototype.get__colIndex = function() {
  return this.org_apache_royale_textLayout_elements_TableCellElement__colIndex;
};


org.apache.royale.textLayout.elements.TableCellElement.prototype.set__colIndex = function(value) {
  this.org_apache_royale_textLayout_elements_TableCellElement__colIndex = value;
};


/**
 * @nocollapse
 * @export
 * @type {org.apache.royale.textLayout.elements.ITextFlow}
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.textFlow;


org.apache.royale.textLayout.elements.TableCellElement.prototype.get__textFlow = function() {
  if (this._textFlow == null) {
    var /** @type {org.apache.royale.textLayout.elements.ITextFlow} */ tf = this.getTextFlow();
    var /** @type {org.apache.royale.textLayout.factory.ITLFFactory} */ tlfFactory;
    if (tf)
      tlfFactory = tf.tlfFactory;
    var /** @type {org.apache.royale.textLayout.elements.ITextFlow} */ flow = org.apache.royale.textLayout.elements.ElementHelper.getDefaultTextFlow(tlfFactory);
    if (this.table && this.table.getTextFlow() && this.table.getTextFlow().interactionManager) {
      flow.interactionManager = this._textFlow.interactionManager.copy(true);
    } else if (this.table && this.table.getTextFlow() && this.table.getTextFlow().interactionManager) {
      var /** @type {Object} */ im =  /** @type {Object|null} */ (org.apache.royale.reflection.getDefinitionByName(org.apache.royale.reflection.getQualifiedClassName(this.table.getTextFlow().interactionManager)));
      flow.interactionManager = new im();
    } else {
      flow.normalize();
    }
    this._textFlow = flow;
  }
  return this._textFlow;
};


org.apache.royale.textLayout.elements.TableCellElement.prototype.set__textFlow = function(value) {
  if (this._textFlow) {
    this._textFlow.removeEventListener(org.apache.royale.textLayout.events.DamageEvent.DAMAGE, org.apache.royale.utils.Language.closure(this.org_apache_royale_textLayout_elements_TableCellElement_handleCellDamage, this, 'org_apache_royale_textLayout_elements_TableCellElement_handleCellDamage'));
    this._textFlow.flowComposer.removeAllControllers();
  }
  this._textFlow = value;
  this._textFlow.parentElement = this;
  this._textFlow.flowComposer.addController(this.org_apache_royale_textLayout_elements_TableCellElement__controller);
  this._textFlow.addEventListener(org.apache.royale.textLayout.events.DamageEvent.DAMAGE, org.apache.royale.utils.Language.closure(this.org_apache_royale_textLayout_elements_TableCellElement_handleCellDamage, this, 'org_apache_royale_textLayout_elements_TableCellElement_handleCellDamage'));
};


/**
 * @nocollapse
 * @export
 * @type {org.apache.royale.textLayout.container.IContainerController}
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.controller;


org.apache.royale.textLayout.elements.TableCellElement.prototype.get__controller = function() {
  return this.org_apache_royale_textLayout_elements_TableCellElement__controller;
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.enableIME;


org.apache.royale.textLayout.elements.TableCellElement.prototype.get__enableIME = function() {
  return this.org_apache_royale_textLayout_elements_TableCellElement__enableIME;
};


org.apache.royale.textLayout.elements.TableCellElement.prototype.set__enableIME = function(value) {
  this.org_apache_royale_textLayout_elements_TableCellElement__enableIME = value;
};


/**
 * @nocollapse
 * @export
 * @type {org.apache.royale.textLayout.elements.CellContainer}
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.container;


org.apache.royale.textLayout.elements.TableCellElement.prototype.get__container = function() {
  if (!this.org_apache_royale_textLayout_elements_TableCellElement__container) {
    this.org_apache_royale_textLayout_elements_TableCellElement__container = new org.apache.royale.textLayout.elements.CellContainer(this.enableIME);
    this.org_apache_royale_textLayout_elements_TableCellElement__container.cellElement = this;
  }
  return this.org_apache_royale_textLayout_elements_TableCellElement__container;
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.width;


org.apache.royale.textLayout.elements.TableCellElement.prototype.get__width = function() {
  return this.org_apache_royale_textLayout_elements_TableCellElement__width;
};


org.apache.royale.textLayout.elements.TableCellElement.prototype.set__width = function(value) {
  if (this.org_apache_royale_textLayout_elements_TableCellElement__width != value) {
    this.org_apache_royale_textLayout_elements_TableCellElement__damaged = true;
  }
  this.org_apache_royale_textLayout_elements_TableCellElement__width = value;
  this.org_apache_royale_textLayout_elements_TableCellElement__controller.setCompositionSize(this.org_apache_royale_textLayout_elements_TableCellElement__width, this.org_apache_royale_textLayout_elements_TableCellElement__controller.compositionHeight);
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.height;


org.apache.royale.textLayout.elements.TableCellElement.prototype.get__height = function() {
  return this.org_apache_royale_textLayout_elements_TableCellElement__height;
};


org.apache.royale.textLayout.elements.TableCellElement.prototype.set__height = function(value) {
  if (this.org_apache_royale_textLayout_elements_TableCellElement__height != value) {
    this.org_apache_royale_textLayout_elements_TableCellElement__damaged = true;
  }
  this.org_apache_royale_textLayout_elements_TableCellElement__height = value;
  this.org_apache_royale_textLayout_elements_TableCellElement__controller.setCompositionSize(this.org_apache_royale_textLayout_elements_TableCellElement__controller.compositionWidth, this.org_apache_royale_textLayout_elements_TableCellElement__height);
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.rowSpan;


org.apache.royale.textLayout.elements.TableCellElement.prototype.get__rowSpan = function() {
  return this.org_apache_royale_textLayout_elements_TableCellElement__rowSpan;
};


org.apache.royale.textLayout.elements.TableCellElement.prototype.set__rowSpan = function(value) {
  if (value >= 1)
    this.org_apache_royale_textLayout_elements_TableCellElement__rowSpan = value;
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.columnSpan;


org.apache.royale.textLayout.elements.TableCellElement.prototype.get__columnSpan = function() {
  return this.org_apache_royale_textLayout_elements_TableCellElement__columnSpan;
};


org.apache.royale.textLayout.elements.TableCellElement.prototype.set__columnSpan = function(value) {
  if (value >= 1)
    this.org_apache_royale_textLayout_elements_TableCellElement__columnSpan = value;
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.x;


org.apache.royale.textLayout.elements.TableCellElement.prototype.get__x = function() {
  return this.container.x;
};


org.apache.royale.textLayout.elements.TableCellElement.prototype.set__x = function(value) {
  this.container.x = value;
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.y;


org.apache.royale.textLayout.elements.TableCellElement.prototype.get__y = function() {
  return this.container.y;
};


org.apache.royale.textLayout.elements.TableCellElement.prototype.set__y = function(value) {
  this.container.y = value;
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.includeDescentInCellBounds;


org.apache.royale.textLayout.elements.TableCellElement.prototype.get__includeDescentInCellBounds = function() {
  return this.org_apache_royale_textLayout_elements_TableCellElement__includeDescentInCellBounds;
};


org.apache.royale.textLayout.elements.TableCellElement.prototype.set__includeDescentInCellBounds = function(value) {
  this.org_apache_royale_textLayout_elements_TableCellElement__includeDescentInCellBounds = value;
};


Object.defineProperties(org.apache.royale.textLayout.elements.TableCellElement.prototype, /** @lends {org.apache.royale.textLayout.elements.TableCellElement.prototype} */ {
/**
 * @type {string}
 */
className: {
get: org.apache.royale.textLayout.elements.TableCellElement.prototype.get__className},
/**
 * @type {boolean}
 */
abstract: {
get: org.apache.royale.textLayout.elements.TableCellElement.prototype.get__abstract},
/**
 * @type {string}
 */
defaultTypeName: {
get: org.apache.royale.textLayout.elements.TableCellElement.prototype.get__defaultTypeName},
/**
 * @type {number}
 */
parcelIndex: {
get: org.apache.royale.textLayout.elements.TableCellElement.prototype.get__parcelIndex,
set: org.apache.royale.textLayout.elements.TableCellElement.prototype.set__parcelIndex},
/**
 * @type {number}
 */
rowIndex: {
get: org.apache.royale.textLayout.elements.TableCellElement.prototype.get__rowIndex,
set: org.apache.royale.textLayout.elements.TableCellElement.prototype.set__rowIndex},
/**
 * @type {number}
 */
colIndex: {
get: org.apache.royale.textLayout.elements.TableCellElement.prototype.get__colIndex,
set: org.apache.royale.textLayout.elements.TableCellElement.prototype.set__colIndex},
/**
 * @type {org.apache.royale.textLayout.elements.ITextFlow}
 */
textFlow: {
get: org.apache.royale.textLayout.elements.TableCellElement.prototype.get__textFlow,
set: org.apache.royale.textLayout.elements.TableCellElement.prototype.set__textFlow},
/**
 * @type {org.apache.royale.textLayout.container.IContainerController}
 */
controller: {
get: org.apache.royale.textLayout.elements.TableCellElement.prototype.get__controller},
/**
 * @type {boolean}
 */
enableIME: {
get: org.apache.royale.textLayout.elements.TableCellElement.prototype.get__enableIME,
set: org.apache.royale.textLayout.elements.TableCellElement.prototype.set__enableIME},
/**
 * @type {org.apache.royale.textLayout.elements.CellContainer}
 */
container: {
get: org.apache.royale.textLayout.elements.TableCellElement.prototype.get__container},
/**
 * @type {number}
 */
width: {
get: org.apache.royale.textLayout.elements.TableCellElement.prototype.get__width,
set: org.apache.royale.textLayout.elements.TableCellElement.prototype.set__width},
/**
 * @type {number}
 */
height: {
get: org.apache.royale.textLayout.elements.TableCellElement.prototype.get__height,
set: org.apache.royale.textLayout.elements.TableCellElement.prototype.set__height},
/**
 * @type {number}
 */
rowSpan: {
get: org.apache.royale.textLayout.elements.TableCellElement.prototype.get__rowSpan,
set: org.apache.royale.textLayout.elements.TableCellElement.prototype.set__rowSpan},
/**
 * @type {number}
 */
columnSpan: {
get: org.apache.royale.textLayout.elements.TableCellElement.prototype.get__columnSpan,
set: org.apache.royale.textLayout.elements.TableCellElement.prototype.set__columnSpan},
/**
 * @type {number}
 */
x: {
get: org.apache.royale.textLayout.elements.TableCellElement.prototype.get__x,
set: org.apache.royale.textLayout.elements.TableCellElement.prototype.set__x},
/**
 * @type {number}
 */
y: {
get: org.apache.royale.textLayout.elements.TableCellElement.prototype.get__y,
set: org.apache.royale.textLayout.elements.TableCellElement.prototype.set__y},
/**
 * @type {boolean}
 */
includeDescentInCellBounds: {
get: org.apache.royale.textLayout.elements.TableCellElement.prototype.get__includeDescentInCellBounds,
set: org.apache.royale.textLayout.elements.TableCellElement.prototype.set__includeDescentInCellBounds}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'TableCellElement', qName: 'org.apache.royale.textLayout.elements.TableCellElement', kind: 'class' }], interfaces: [org.apache.royale.textLayout.elements.ITableCellElement] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'className': { type: 'String', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.elements.TableCellElement'},
        'defaultTypeName': { type: 'String', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.elements.TableCellElement'},
        'parcelIndex': { type: 'int', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.elements.TableCellElement'},
        'rowIndex': { type: 'int', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.elements.TableCellElement'},
        'colIndex': { type: 'int', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.elements.TableCellElement'},
        'textFlow': { type: 'org.apache.royale.textLayout.elements.ITextFlow', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.elements.TableCellElement'},
        'controller': { type: 'org.apache.royale.textLayout.container.IContainerController', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.elements.TableCellElement'},
        'enableIME': { type: 'Boolean', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.elements.TableCellElement'},
        'container': { type: 'org.apache.royale.textLayout.elements.CellContainer', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.elements.TableCellElement'},
        'width': { type: 'Number', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.elements.TableCellElement'},
        'height': { type: 'Number', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.elements.TableCellElement'},
        'rowSpan': { type: 'uint', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.elements.TableCellElement'},
        'columnSpan': { type: 'uint', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.elements.TableCellElement'},
        'x': { type: 'Number', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.elements.TableCellElement'},
        'y': { type: 'Number', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.elements.TableCellElement'},
        'includeDescentInCellBounds': { type: 'Boolean', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.elements.TableCellElement'}
      };
    },
    methods: function () {
      return {
        'TableCellElement': { type: '', declaredBy: 'org.apache.royale.textLayout.elements.TableCellElement'},
        'canOwnFlowElement': { type: 'Boolean', declaredBy: 'org.apache.royale.textLayout.elements.TableCellElement', parameters: function () { return [ 'org.apache.royale.textLayout.elements.IFlowElement', false ]; }},
        'isDamaged': { type: 'Boolean', declaredBy: 'org.apache.royale.textLayout.elements.TableCellElement'},
        'compose': { type: 'Boolean', declaredBy: 'org.apache.royale.textLayout.elements.TableCellElement'},
        'update': { type: 'Boolean', declaredBy: 'org.apache.royale.textLayout.elements.TableCellElement'},
        'getComposedHeight': { type: 'Number', declaredBy: 'org.apache.royale.textLayout.elements.TableCellElement'},
        'getRowHeight': { type: 'Number', declaredBy: 'org.apache.royale.textLayout.elements.TableCellElement'},
        'updateCompositionShapes': { type: 'void', declaredBy: 'org.apache.royale.textLayout.elements.TableCellElement'},
        'getRow': { type: 'org.apache.royale.textLayout.elements.ITableRowElement', declaredBy: 'org.apache.royale.textLayout.elements.TableCellElement'},
        'getNextCell': { type: 'org.apache.royale.textLayout.elements.ITableCellElement', declaredBy: 'org.apache.royale.textLayout.elements.TableCellElement'},
        'getPreviousCell': { type: 'org.apache.royale.textLayout.elements.ITableCellElement', declaredBy: 'org.apache.royale.textLayout.elements.TableCellElement'},
        'damage': { type: 'void', declaredBy: 'org.apache.royale.textLayout.elements.TableCellElement'},
        'getTotalPaddingWidth': { type: 'Number', declaredBy: 'org.apache.royale.textLayout.elements.TableCellElement'},
        'getTotalPaddingHeight': { type: 'Number', declaredBy: 'org.apache.royale.textLayout.elements.TableCellElement'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.textLayout.elements.TableCellElement.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./TableCellElement.js.map
