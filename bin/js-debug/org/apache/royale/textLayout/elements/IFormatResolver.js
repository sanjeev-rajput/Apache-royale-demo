/**
 * Generated by Apache Royale Compiler from org/apache/royale/textLayout/elements/IFormatResolver.as
 * org.apache.royale.textLayout.elements.IFormatResolver
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.textLayout.elements.IFormatResolver');
/* Royale Dependency List: org.apache.royale.textLayout.elements.ITextFlow,org.apache.royale.textLayout.formats.ITextLayoutFormat,XML*/




/**
 * @interface
 */
org.apache.royale.textLayout.elements.IFormatResolver = function() {
};
/** Invalidates any cached formatting information for a ITextFlow so that formatting must be recomputed.
 *
 * @playerversion Flash 10
 * @playerversion AIR 1.5
 * @langversion 3.0
 * @param {org.apache.royale.textLayout.elements.ITextFlow} textFlow
 */
org.apache.royale.textLayout.elements.IFormatResolver.prototype.invalidateAll = function(textFlow) {
};
/** Invalidates cached formatting information on this element because, for example, the <code>parent</code> changed, 
 *  or the <code>id</code> or the <code>styleName</code> changed or the <code>typeName</code> changed. 
 *
 * @playerversion Flash 10
 * @playerversion AIR 1.5
 * @param {Object} target
 */
org.apache.royale.textLayout.elements.IFormatResolver.prototype.invalidate = function(target) {
};
/** Given a FlowElement or ContainerController object, return any format settings for it.
 *
 * @asreturn format settings for the specified object.
 * 
 * @playerversion Flash 10
 * @playerversion AIR 1.5
 * @langversion 3.0
 * @param {Object} target
 * @return {org.apache.royale.textLayout.formats.ITextLayoutFormat}
 */
org.apache.royale.textLayout.elements.IFormatResolver.prototype.resolveFormat = function(target) {
};
/** Given a FlowElement or ContainerController object and the name of a format property, return the format value
 * or <code>undefined</code> if the value is not found.
 *
 * @asreturn the value of the specified format for the specified object.
 *
 * @playerversion Flash 10
 * @playerversion AIR 1.5
 * @langversion 3.0
 * @param {Object} target
 * @param {string} userFormat
 * @return {*}
 */
org.apache.royale.textLayout.elements.IFormatResolver.prototype.resolveUserFormat = function(target, userFormat) {
};
/** Returns the format resolver when a ITextFlow is copied.
 *
 * @asreturn the format resolver for the copy of the ITextFlow.
 *
 * @playerversion Flash 10
 * @playerversion AIR 1.5
 * @langversion 3.0
 * @param {org.apache.royale.textLayout.elements.ITextFlow} oldFlow
 * @param {org.apache.royale.textLayout.elements.ITextFlow} newFlow
 * @return {org.apache.royale.textLayout.elements.IFormatResolver}
 */
org.apache.royale.textLayout.elements.IFormatResolver.prototype.getResolverForNewFlow = function(oldFlow, newFlow) {
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.textLayout.elements.IFormatResolver.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'IFormatResolver', qName: 'org.apache.royale.textLayout.elements.IFormatResolver', kind: 'interface' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.textLayout.elements.IFormatResolver.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    methods: function () {
      return {
        'invalidateAll': { type: 'void', declaredBy: 'org.apache.royale.textLayout.elements.IFormatResolver', parameters: function () { return [ 'org.apache.royale.textLayout.elements.ITextFlow', false ]; }},
        'invalidate': { type: 'void', declaredBy: 'org.apache.royale.textLayout.elements.IFormatResolver', parameters: function () { return [ 'Object', false ]; }},
        'resolveFormat': { type: 'org.apache.royale.textLayout.formats.ITextLayoutFormat', declaredBy: 'org.apache.royale.textLayout.elements.IFormatResolver', parameters: function () { return [ 'Object', false ]; }},
        'resolveUserFormat': { type: '*', declaredBy: 'org.apache.royale.textLayout.elements.IFormatResolver', parameters: function () { return [ 'Object', false ,'String', false ]; }},
        'getResolverForNewFlow': { type: 'org.apache.royale.textLayout.elements.IFormatResolver', declaredBy: 'org.apache.royale.textLayout.elements.IFormatResolver', parameters: function () { return [ 'org.apache.royale.textLayout.elements.ITextFlow', false ,'org.apache.royale.textLayout.elements.ITextFlow', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.textLayout.elements.IFormatResolver.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./IFormatResolver.js.map
