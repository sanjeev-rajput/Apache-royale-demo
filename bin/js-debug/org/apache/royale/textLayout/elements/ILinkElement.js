/**
 * Generated by Apache Royale Compiler from org/apache/royale/textLayout/elements/ILinkElement.as
 * org.apache.royale.textLayout.elements.ILinkElement
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.textLayout.elements.ILinkElement');
/* Royale Dependency List: org.apache.royale.events.MouseEvent,org.apache.royale.textLayout.events.FlowElementMouseEventManager,XML*/

goog.require('org.apache.royale.textLayout.elements.ISubParagraphGroupElementBase');



/**
 * @interface
 * @extends {org.apache.royale.textLayout.elements.ISubParagraphGroupElementBase}
 */
org.apache.royale.textLayout.elements.ILinkElement = function() {
};
/**
 * @param {string} linkState
 */
org.apache.royale.textLayout.elements.ILinkElement.prototype.chgLinkState = function(linkState) {
};
/**  * @type {string}
 */org.apache.royale.textLayout.elements.ILinkElement.prototype.linkState;
/**
 * @param {org.apache.royale.textLayout.events.FlowElementMouseEventManager} mgr
 * @param {org.apache.royale.events.MouseEvent} evt
 */
org.apache.royale.textLayout.elements.ILinkElement.prototype.mouseDownHandler = function(mgr, evt) {
};
/** @asprivate
 * The ElementMouseEventManager calls this method directly. Note that the mouse
 * coordinates are unrelated to any coordinate in the container or this element.
 * @param {org.apache.royale.textLayout.events.FlowElementMouseEventManager} mgr
 * @param {org.apache.royale.events.MouseEvent} evt
 */
org.apache.royale.textLayout.elements.ILinkElement.prototype.mouseMoveHandler = function(mgr, evt) {
};
/** @asprivate
 * The ElementMouseEventManager calls this method directly. Note that the mouse
 * coordinates are unrelated to any coordinate in the container or this element.
 * @param {org.apache.royale.textLayout.events.FlowElementMouseEventManager} mgr
 * @param {org.apache.royale.events.MouseEvent} evt
 */
org.apache.royale.textLayout.elements.ILinkElement.prototype.mouseOutHandler = function(mgr, evt) {
};
/** @asprivate
 * The ElementMouseEventManager calls this method directly. Note that the mouse
 * coordinates are unrelated to any coordinate in the container or this element.
 * @param {org.apache.royale.textLayout.events.FlowElementMouseEventManager} mgr
 * @param {org.apache.royale.events.MouseEvent} evt
 */
org.apache.royale.textLayout.elements.ILinkElement.prototype.mouseOverHandler = function(mgr, evt) {
};
/** @asprivate
 * The ElementMouseEventManager calls this method directly. Note that the mouse
 * coordinates are unrelated to any coordinate in the container or this element.
 * @param {org.apache.royale.textLayout.events.FlowElementMouseEventManager} mgr
 * @param {org.apache.royale.events.MouseEvent} evt
 */
org.apache.royale.textLayout.elements.ILinkElement.prototype.mouseUpHandler = function(mgr, evt) {
};
/** @asprivate
 * The ElementMouseEventManager calls this method directly. Note that the mouse
 * coordinates are unrelated to any coordinate in the container or this element.
 * @param {org.apache.royale.textLayout.events.FlowElementMouseEventManager} mgr
 * @param {org.apache.royale.events.MouseEvent} evt
 */
org.apache.royale.textLayout.elements.ILinkElement.prototype.mouseClickHandler = function(mgr, evt) {
};
/**  * @type {string}
 */org.apache.royale.textLayout.elements.ILinkElement.prototype.href;
/**  * @type {string}
 */org.apache.royale.textLayout.elements.ILinkElement.prototype.target;


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.textLayout.elements.ILinkElement.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'ILinkElement', qName: 'org.apache.royale.textLayout.elements.ILinkElement', kind: 'interface' }], interfaces: [org.apache.royale.textLayout.elements.ISubParagraphGroupElementBase] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.textLayout.elements.ILinkElement.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'linkState': { type: 'String', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.elements.ILinkElement'},
        'href': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.elements.ILinkElement'},
        'target': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.elements.ILinkElement'}
      };
    },
    methods: function () {
      return {
        'chgLinkState': { type: 'void', declaredBy: 'org.apache.royale.textLayout.elements.ILinkElement', parameters: function () { return [ 'String', false ]; }},
        'mouseDownHandler': { type: 'void', declaredBy: 'org.apache.royale.textLayout.elements.ILinkElement', parameters: function () { return [ 'org.apache.royale.textLayout.events.FlowElementMouseEventManager', false ,'org.apache.royale.events.MouseEvent', false ]; }},
        'mouseMoveHandler': { type: 'void', declaredBy: 'org.apache.royale.textLayout.elements.ILinkElement', parameters: function () { return [ 'org.apache.royale.textLayout.events.FlowElementMouseEventManager', false ,'org.apache.royale.events.MouseEvent', false ]; }},
        'mouseOutHandler': { type: 'void', declaredBy: 'org.apache.royale.textLayout.elements.ILinkElement', parameters: function () { return [ 'org.apache.royale.textLayout.events.FlowElementMouseEventManager', false ,'org.apache.royale.events.MouseEvent', false ]; }},
        'mouseOverHandler': { type: 'void', declaredBy: 'org.apache.royale.textLayout.elements.ILinkElement', parameters: function () { return [ 'org.apache.royale.textLayout.events.FlowElementMouseEventManager', false ,'org.apache.royale.events.MouseEvent', false ]; }},
        'mouseUpHandler': { type: 'void', declaredBy: 'org.apache.royale.textLayout.elements.ILinkElement', parameters: function () { return [ 'org.apache.royale.textLayout.events.FlowElementMouseEventManager', false ,'org.apache.royale.events.MouseEvent', false ]; }},
        'mouseClickHandler': { type: 'void', declaredBy: 'org.apache.royale.textLayout.elements.ILinkElement', parameters: function () { return [ 'org.apache.royale.textLayout.events.FlowElementMouseEventManager', false ,'org.apache.royale.events.MouseEvent', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.textLayout.elements.ILinkElement.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./ILinkElement.js.map
