/**
 * Generated by Apache Royale Compiler from org/apache/royale/textLayout/factory/NumberLineFactory.as
 * org.apache.royale.textLayout.factory.NumberLineFactory
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.textLayout.factory.NumberLineFactory');
/* Royale Dependency List: org.apache.royale.geom.Rectangle,org.apache.royale.text.engine.ITextBlock,org.apache.royale.text.engine.ITextLine,org.apache.royale.textLayout.compose.utils.FactoryHelper,org.apache.royale.textLayout.compose.utils.NumberLineUserData,org.apache.royale.textLayout.elements.IBackgroundManager,org.apache.royale.textLayout.elements.ITextFlow,org.apache.royale.textLayout.formats.BlockProgression,org.apache.royale.textLayout.formats.ITextLayoutFormat,XML*/

goog.require('org.apache.royale.textLayout.factory.StringTextLineFactory');
goog.require('org.apache.royale.textLayout.factory.INumberLineFactory');



/**
 * @constructor
 * @extends {org.apache.royale.textLayout.factory.StringTextLineFactory}
 * @implements {org.apache.royale.textLayout.factory.INumberLineFactory}
 */
org.apache.royale.textLayout.factory.NumberLineFactory = function() {
  org.apache.royale.textLayout.factory.NumberLineFactory.base(this, 'constructor');
};
goog.inherits(org.apache.royale.textLayout.factory.NumberLineFactory, org.apache.royale.textLayout.factory.StringTextLineFactory);


/**
 * @private
 * @type {string}
 */
org.apache.royale.textLayout.factory.NumberLineFactory.prototype.org_apache_royale_textLayout_factory_NumberLineFactory__listStylePosition;


/**
 * @private
 * @type {org.apache.royale.textLayout.formats.ITextLayoutFormat}
 */
org.apache.royale.textLayout.factory.NumberLineFactory.prototype.org_apache_royale_textLayout_factory_NumberLineFactory__markerFormat;


/**
 * @private
 * @type {org.apache.royale.textLayout.elements.IBackgroundManager}
 */
org.apache.royale.textLayout.factory.NumberLineFactory.prototype.org_apache_royale_textLayout_factory_NumberLineFactory__backgroundManager;


/**
 */
org.apache.royale.textLayout.factory.NumberLineFactory.prototype.clearBackgroundManager = function() {
  this.org_apache_royale_textLayout_factory_NumberLineFactory__backgroundManager = null;
};


/** @asprivate 
 * @nocollapse
 * @param {org.apache.royale.text.engine.ITextLine} numberLine
 * @param {string} bp
 * @return {number}
 */
org.apache.royale.textLayout.factory.NumberLineFactory.calculateInsideNumberLineWidth = function(numberLine, bp) {
  var /** @type {number} */ minVal = Number.MAX_VALUE;
  var /** @type {number} */ maxVal = Number.MIN_VALUE;
  var /** @type {number} */ idx = 0;
  var /** @type {org.apache.royale.geom.Rectangle} */ rect;
  if (bp == org.apache.royale.textLayout.formats.BlockProgression.TB) {
    for (; idx < numberLine.atomCount; idx++) {
      if (numberLine.getAtomTextBlockBeginIndex(idx) != numberLine.rawTextLength - 1) {
        rect = numberLine.getAtomBounds(idx);
        minVal = Math.min(minVal, rect.x);
        maxVal = Math.max(maxVal, rect.right);
      }
    }
  } else {
    for (; idx < numberLine.atomCount; idx++) {
      if (numberLine.getAtomTextBlockBeginIndex(idx) != numberLine.rawTextLength - 1) {
        rect = numberLine.getAtomBounds(idx);
        minVal = Math.min(minVal, rect.top);
        maxVal = Math.max(maxVal, rect.bottom);
      }
    }
  }
  return maxVal > minVal ? maxVal - minVal : 0;
};


/**
 * @protected
 * @override
 */
org.apache.royale.textLayout.factory.NumberLineFactory.prototype.callbackWithTextLines = function(callback, delx, dely) {
  var foreachiter0_target = org.apache.royale.textLayout.compose.utils.FactoryHelper.staticComposer.lines;
  for (var foreachiter0 in foreachiter0_target) 
  {
  var textLine = foreachiter0_target[foreachiter0];
  {
    textLine.userData = new org.apache.royale.textLayout.compose.utils.NumberLineUserData(this.listStylePosition, org.apache.royale.textLayout.factory.NumberLineFactory.calculateInsideNumberLineWidth(textLine, org.apache.royale.utils.Language.string(this.textFlowFormat.blockProgression)), this.org_apache_royale_textLayout_factory_NumberLineFactory__markerFormat, this.paragraphFormat.direction);
    var /** @type {org.apache.royale.text.engine.ITextBlock} */ textBlock = textLine.textBlock;
    if (textBlock) {
      
      textBlock.releaseLines(textBlock.firstLine, textBlock.lastLine);
    }
    textLine.x += delx;
    textLine.y += dely;
    textLine.validity = "static";
    
    callback(textLine);
  }}
  
};


/**
 * @override
 */
org.apache.royale.textLayout.factory.NumberLineFactory.prototype.processBackgroundColors = function(textFlow, callback, x, y, constrainWidth, constrainHeight) {
  this.org_apache_royale_textLayout_factory_NumberLineFactory__backgroundManager = textFlow.backgroundManager;
  textFlow.clearBackgroundManager();
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
org.apache.royale.textLayout.factory.NumberLineFactory.prototype.listStylePosition;


org.apache.royale.textLayout.factory.NumberLineFactory.prototype.get__listStylePosition = function() {
  return this.org_apache_royale_textLayout_factory_NumberLineFactory__listStylePosition;
};


org.apache.royale.textLayout.factory.NumberLineFactory.prototype.set__listStylePosition = function(val) {
  this.org_apache_royale_textLayout_factory_NumberLineFactory__listStylePosition = val;
};


/**
 * @nocollapse
 * @export
 * @type {org.apache.royale.textLayout.formats.ITextLayoutFormat}
 */
org.apache.royale.textLayout.factory.NumberLineFactory.prototype.markerFormat;


org.apache.royale.textLayout.factory.NumberLineFactory.prototype.get__markerFormat = function() {
  return this.org_apache_royale_textLayout_factory_NumberLineFactory__markerFormat;
};


org.apache.royale.textLayout.factory.NumberLineFactory.prototype.set__markerFormat = function(val) {
  this.org_apache_royale_textLayout_factory_NumberLineFactory__markerFormat = val;
  this.spanFormat = val;
};


/**
 * @nocollapse
 * @export
 * @type {org.apache.royale.textLayout.elements.IBackgroundManager}
 */
org.apache.royale.textLayout.factory.NumberLineFactory.prototype.backgroundManager;


org.apache.royale.textLayout.factory.NumberLineFactory.prototype.get__backgroundManager = function() {
  return this.org_apache_royale_textLayout_factory_NumberLineFactory__backgroundManager;
};


Object.defineProperties(org.apache.royale.textLayout.factory.NumberLineFactory.prototype, /** @lends {org.apache.royale.textLayout.factory.NumberLineFactory.prototype} */ {
/**
 * @type {string}
 */
listStylePosition: {
get: org.apache.royale.textLayout.factory.NumberLineFactory.prototype.get__listStylePosition,
set: org.apache.royale.textLayout.factory.NumberLineFactory.prototype.set__listStylePosition},
/**
 * @type {org.apache.royale.textLayout.formats.ITextLayoutFormat}
 */
markerFormat: {
get: org.apache.royale.textLayout.factory.NumberLineFactory.prototype.get__markerFormat,
set: org.apache.royale.textLayout.factory.NumberLineFactory.prototype.set__markerFormat},
/**
 * @type {org.apache.royale.textLayout.elements.IBackgroundManager}
 */
backgroundManager: {
get: org.apache.royale.textLayout.factory.NumberLineFactory.prototype.get__backgroundManager}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.textLayout.factory.NumberLineFactory.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'NumberLineFactory', qName: 'org.apache.royale.textLayout.factory.NumberLineFactory', kind: 'class' }], interfaces: [org.apache.royale.textLayout.factory.INumberLineFactory] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.textLayout.factory.NumberLineFactory.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'listStylePosition': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.factory.NumberLineFactory'},
        'markerFormat': { type: 'org.apache.royale.textLayout.formats.ITextLayoutFormat', access: 'readwrite', declaredBy: 'org.apache.royale.textLayout.factory.NumberLineFactory'},
        'backgroundManager': { type: 'org.apache.royale.textLayout.elements.IBackgroundManager', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.factory.NumberLineFactory'}
      };
    },
    methods: function () {
      return {
        'clearBackgroundManager': { type: 'void', declaredBy: 'org.apache.royale.textLayout.factory.NumberLineFactory'},
        '|calculateInsideNumberLineWidth': { type: 'Number', declaredBy: 'org.apache.royale.textLayout.factory.NumberLineFactory', parameters: function () { return [ 'org.apache.royale.text.engine.ITextLine', false ,'String', false ]; }},
        'processBackgroundColors': { type: '*', declaredBy: 'org.apache.royale.textLayout.factory.NumberLineFactory', parameters: function () { return [ 'org.apache.royale.textLayout.elements.ITextFlow', false ,'Function', false ,'Number', false ,'Number', false ,'Number', false ,'Number', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.textLayout.factory.NumberLineFactory.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./NumberLineFactory.js.map
