/**
 * Generated by Apache Royale Compiler from org/apache/royale/textLayout/edit/SelectionFormat.as
 * org.apache.royale.textLayout.edit.SelectionFormat
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.textLayout.edit.SelectionFormat');
/* Royale Dependency List: XML*/



/** 
 * Creates a SelectionFormat object with the specified properties.
 * 
 * <p>A SelectionFormat created with the default values will use black for
 * the highlight colors, 1.0 for the alphas, and BlendMode.DIFFERENCE for the blending modes.
 * The cursor blink rate is 500 milliseconds.</p>
 *
 * <p>Setting the <code>pointAlpha</code> and <code>rangeAlpha</code> properties to zero disables selection highlighting.</p>
 * 
 * <p>Non-zero blink rate is only used when an EditManager is attached to the TextFlow.</p>
 * 
 * @asparam rangeColor The color for drawing the highlight.
 * @asparam rangeAlpha The transparency value for drawing the highlight. Valid values are between 0
 * (completely transparent) and 1 (completely opaque, which is the default).
 * @asparam rangeBlendMode The blend mode for drawing the highlight. Use constants defined in the BlendMode class
 * to set this parameter.
 * @asparam pointColor The color for the drawing cursor.
 * @asparam pointAlpha The transparency value for drawing the cursor. Valid values are between 0
 * (completely transparent) and 1 (completely opaque, which is the default).
 * @asparam pointBlendMode The blend mode for drawing the cursor. Use constants defined in the BlendMode class
 * to set this parameter.
 * @asparam pointBlinkRate The rate at which the cursor blinks, in milliseconds.
 * 
 * @see flash.display.BlendMode
 * @see #pointAlpha
 * @see #rangeAlpha
 * 
 * @playerversion Flash 10
 * @playerversion AIR 1.5
 * @langversion 3.0
 * @constructor
 * @param {number=} rangeColor
 * @param {number=} rangeAlpha
 * @param {string=} rangeBlendMode
 * @param {number=} pointColor
 * @param {number=} pointAlpha
 * @param {string=} pointBlendMode
 * @param {number=} pointBlinkRate
 * @param {number=} pointBlinkAlpha
 * @param {number=} pointBlinkColor
 */
org.apache.royale.textLayout.edit.SelectionFormat = function(rangeColor, rangeAlpha, rangeBlendMode, pointColor, pointAlpha, pointBlendMode, pointBlinkRate, pointBlinkAlpha, pointBlinkColor) {
  rangeColor = typeof rangeColor !== 'undefined' ? rangeColor : 0xffffff;
  rangeAlpha = typeof rangeAlpha !== 'undefined' ? rangeAlpha : 1.0;
  rangeBlendMode = typeof rangeBlendMode !== 'undefined' ? rangeBlendMode : "difference";
  pointColor = typeof pointColor !== 'undefined' ? pointColor : 0xffffff;
  pointAlpha = typeof pointAlpha !== 'undefined' ? pointAlpha : 1.0;
  pointBlendMode = typeof pointBlendMode !== 'undefined' ? pointBlendMode : "difference";
  pointBlinkRate = typeof pointBlinkRate !== 'undefined' ? pointBlinkRate : 500;
  pointBlinkAlpha = typeof pointBlinkAlpha !== 'undefined' ? pointBlinkAlpha : 0;
  pointBlinkColor = typeof pointBlinkColor !== 'undefined' ? pointBlinkColor : 0;
  this.org_apache_royale_textLayout_edit_SelectionFormat__rangeColor = rangeColor;
  this.org_apache_royale_textLayout_edit_SelectionFormat__rangeAlpha = rangeAlpha;
  this.org_apache_royale_textLayout_edit_SelectionFormat__rangeBlendMode = rangeBlendMode;
  this.org_apache_royale_textLayout_edit_SelectionFormat__pointColor = pointColor;
  this.org_apache_royale_textLayout_edit_SelectionFormat__pointAlpha = pointAlpha;
  this.org_apache_royale_textLayout_edit_SelectionFormat__pointBlendMode = pointBlendMode;
  this.org_apache_royale_textLayout_edit_SelectionFormat__pointBlinkRate = pointBlinkRate;
  this.org_apache_royale_textLayout_edit_SelectionFormat__pointBlinkAlpha = pointBlinkAlpha;
  this.org_apache_royale_textLayout_edit_SelectionFormat__pointBlinkColor = pointBlinkColor;
};


/**
 * @private
 * @type {number}
 */
org.apache.royale.textLayout.edit.SelectionFormat.prototype.org_apache_royale_textLayout_edit_SelectionFormat__rangeColor = 0;


/**
 * @private
 * @type {number}
 */
org.apache.royale.textLayout.edit.SelectionFormat.prototype.org_apache_royale_textLayout_edit_SelectionFormat__rangeAlpha;


/**
 * @private
 * @type {string}
 */
org.apache.royale.textLayout.edit.SelectionFormat.prototype.org_apache_royale_textLayout_edit_SelectionFormat__rangeBlendMode;


/**
 * @private
 * @type {number}
 */
org.apache.royale.textLayout.edit.SelectionFormat.prototype.org_apache_royale_textLayout_edit_SelectionFormat__pointColor = 0;


/**
 * @private
 * @type {number}
 */
org.apache.royale.textLayout.edit.SelectionFormat.prototype.org_apache_royale_textLayout_edit_SelectionFormat__pointAlpha;


/**
 * @private
 * @type {string}
 */
org.apache.royale.textLayout.edit.SelectionFormat.prototype.org_apache_royale_textLayout_edit_SelectionFormat__pointBlendMode;


/**
 * @private
 * @type {number}
 */
org.apache.royale.textLayout.edit.SelectionFormat.prototype.org_apache_royale_textLayout_edit_SelectionFormat__pointBlinkRate;


/**
 * @private
 * @type {number}
 */
org.apache.royale.textLayout.edit.SelectionFormat.prototype.org_apache_royale_textLayout_edit_SelectionFormat__pointBlinkAlpha;


/**
 * @private
 * @type {number}
 */
org.apache.royale.textLayout.edit.SelectionFormat.prototype.org_apache_royale_textLayout_edit_SelectionFormat__pointBlinkColor = 0;


/**
 * Determines whether this SelectionFormat object has the same property values
 * as another SelectionFormat object.
 *  
 * @asreturn <code>true</code>, if the property values are identical; <code>false</code>, otherwise.
 * 
 * @playerversion Flash 10
 * @playerversion AIR 1.5
 * @langversion 3.0
 * 
 * @asparam selectionFormat	the SelectionFormat to compare against.
 * @param {org.apache.royale.textLayout.edit.SelectionFormat} selectionFormat
 * @return {boolean}
 */
org.apache.royale.textLayout.edit.SelectionFormat.prototype.equals = function(selectionFormat) {
  if ((this.org_apache_royale_textLayout_edit_SelectionFormat__rangeBlendMode == selectionFormat.rangeBlendMode) && (this.org_apache_royale_textLayout_edit_SelectionFormat__rangeAlpha == selectionFormat.rangeAlpha) && (this.org_apache_royale_textLayout_edit_SelectionFormat__rangeColor == selectionFormat.rangeColor) && (this.org_apache_royale_textLayout_edit_SelectionFormat__pointColor == selectionFormat.pointColor) && (this.org_apache_royale_textLayout_edit_SelectionFormat__pointAlpha == selectionFormat.pointAlpha) && (this.org_apache_royale_textLayout_edit_SelectionFormat__pointBlendMode == selectionFormat.pointBlendMode) && (this.org_apache_royale_textLayout_edit_SelectionFormat__pointBlinkRate == selectionFormat.pointBlinkRate))
    return true;
  return false;
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
org.apache.royale.textLayout.edit.SelectionFormat.prototype.rangeColor;


org.apache.royale.textLayout.edit.SelectionFormat.prototype.get__rangeColor = function() {
  return this.org_apache_royale_textLayout_edit_SelectionFormat__rangeColor;
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
org.apache.royale.textLayout.edit.SelectionFormat.prototype.rangeAlpha;


org.apache.royale.textLayout.edit.SelectionFormat.prototype.get__rangeAlpha = function() {
  return this.org_apache_royale_textLayout_edit_SelectionFormat__rangeAlpha;
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
org.apache.royale.textLayout.edit.SelectionFormat.prototype.rangeBlendMode;


org.apache.royale.textLayout.edit.SelectionFormat.prototype.get__rangeBlendMode = function() {
  return this.org_apache_royale_textLayout_edit_SelectionFormat__rangeBlendMode;
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
org.apache.royale.textLayout.edit.SelectionFormat.prototype.pointColor;


org.apache.royale.textLayout.edit.SelectionFormat.prototype.get__pointColor = function() {
  return this.org_apache_royale_textLayout_edit_SelectionFormat__pointColor;
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
org.apache.royale.textLayout.edit.SelectionFormat.prototype.pointAlpha;


org.apache.royale.textLayout.edit.SelectionFormat.prototype.get__pointAlpha = function() {
  return this.org_apache_royale_textLayout_edit_SelectionFormat__pointAlpha;
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
org.apache.royale.textLayout.edit.SelectionFormat.prototype.pointBlinkRate;


org.apache.royale.textLayout.edit.SelectionFormat.prototype.get__pointBlinkRate = function() {
  return this.org_apache_royale_textLayout_edit_SelectionFormat__pointBlinkRate;
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
org.apache.royale.textLayout.edit.SelectionFormat.prototype.pointBlinkAlpha;


org.apache.royale.textLayout.edit.SelectionFormat.prototype.get__pointBlinkAlpha = function() {
  return this.org_apache_royale_textLayout_edit_SelectionFormat__pointBlinkAlpha;
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
org.apache.royale.textLayout.edit.SelectionFormat.prototype.pointBlinkColor;


org.apache.royale.textLayout.edit.SelectionFormat.prototype.get__pointBlinkColor = function() {
  return this.org_apache_royale_textLayout_edit_SelectionFormat__pointBlinkColor;
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
org.apache.royale.textLayout.edit.SelectionFormat.prototype.pointBlendMode;


org.apache.royale.textLayout.edit.SelectionFormat.prototype.get__pointBlendMode = function() {
  return this.org_apache_royale_textLayout_edit_SelectionFormat__pointBlendMode;
};


Object.defineProperties(org.apache.royale.textLayout.edit.SelectionFormat.prototype, /** @lends {org.apache.royale.textLayout.edit.SelectionFormat.prototype} */ {
/**
 * @type {number}
 */
rangeColor: {
get: org.apache.royale.textLayout.edit.SelectionFormat.prototype.get__rangeColor},
/**
 * @type {number}
 */
rangeAlpha: {
get: org.apache.royale.textLayout.edit.SelectionFormat.prototype.get__rangeAlpha},
/**
 * @type {string}
 */
rangeBlendMode: {
get: org.apache.royale.textLayout.edit.SelectionFormat.prototype.get__rangeBlendMode},
/**
 * @type {number}
 */
pointColor: {
get: org.apache.royale.textLayout.edit.SelectionFormat.prototype.get__pointColor},
/**
 * @type {number}
 */
pointAlpha: {
get: org.apache.royale.textLayout.edit.SelectionFormat.prototype.get__pointAlpha},
/**
 * @type {number}
 */
pointBlinkRate: {
get: org.apache.royale.textLayout.edit.SelectionFormat.prototype.get__pointBlinkRate},
/**
 * @type {number}
 */
pointBlinkAlpha: {
get: org.apache.royale.textLayout.edit.SelectionFormat.prototype.get__pointBlinkAlpha},
/**
 * @type {number}
 */
pointBlinkColor: {
get: org.apache.royale.textLayout.edit.SelectionFormat.prototype.get__pointBlinkColor},
/**
 * @type {string}
 */
pointBlendMode: {
get: org.apache.royale.textLayout.edit.SelectionFormat.prototype.get__pointBlendMode}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.textLayout.edit.SelectionFormat.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'SelectionFormat', qName: 'org.apache.royale.textLayout.edit.SelectionFormat', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.textLayout.edit.SelectionFormat.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'rangeColor': { type: 'uint', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.edit.SelectionFormat'},
        'rangeAlpha': { type: 'Number', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.edit.SelectionFormat'},
        'rangeBlendMode': { type: 'String', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.edit.SelectionFormat'},
        'pointColor': { type: 'uint', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.edit.SelectionFormat'},
        'pointAlpha': { type: 'Number', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.edit.SelectionFormat'},
        'pointBlinkRate': { type: 'Number', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.edit.SelectionFormat'},
        'pointBlinkAlpha': { type: 'Number', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.edit.SelectionFormat'},
        'pointBlinkColor': { type: 'uint', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.edit.SelectionFormat'},
        'pointBlendMode': { type: 'String', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.edit.SelectionFormat'}
      };
    },
    methods: function () {
      return {
        'SelectionFormat': { type: '', declaredBy: 'org.apache.royale.textLayout.edit.SelectionFormat', parameters: function () { return [ 'uint', true ,'Number', true ,'String', true ,'uint', true ,'Number', true ,'String', true ,'Number', true ,'Number', true ,'uint', true ]; }},
        'equals': { type: 'Boolean', declaredBy: 'org.apache.royale.textLayout.edit.SelectionFormat', parameters: function () { return [ 'org.apache.royale.textLayout.edit.SelectionFormat', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.textLayout.edit.SelectionFormat.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./SelectionFormat.js.map
