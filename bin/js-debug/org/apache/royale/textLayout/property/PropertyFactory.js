/**
 * Generated by Apache Royale Compiler from org/apache/royale/textLayout/property/PropertyFactory.as
 * org.apache.royale.textLayout.property.PropertyFactory
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.textLayout.property.PropertyFactory');
/* Royale Dependency List: org.apache.royale.textLayout.formats.FormatValue,org.apache.royale.textLayout.formats.ListMarkerFormat,org.apache.royale.textLayout.formats.TextLayoutFormat,org.apache.royale.textLayout.property.BooleanPropertyHandler,org.apache.royale.textLayout.property.EnumPropertyHandler,org.apache.royale.textLayout.property.FormatPropertyHandler,org.apache.royale.textLayout.property.IntPropertyHandler,org.apache.royale.textLayout.property.NumberPropertyHandler,org.apache.royale.textLayout.property.PercentPropertyHandler,org.apache.royale.textLayout.property.Property,org.apache.royale.textLayout.property.SpacingLimitPropertyHandler,org.apache.royale.textLayout.property.StringPropertyHandler,org.apache.royale.textLayout.property.TabStopsProperty,org.apache.royale.textLayout.property.UintPropertyHandler,org.apache.royale.textLayout.property.UndefinedPropertyHandler,XML*/




/**
 * @constructor
 */
org.apache.royale.textLayout.property.PropertyFactory = function() {
};


/**
 * @private
 * @type {org.apache.royale.textLayout.property.StringPropertyHandler}
 */
org.apache.royale.textLayout.property.PropertyFactory._sharedStringHandler;


/**
 * @private
 * @type {org.apache.royale.textLayout.property.EnumPropertyHandler}
 */
org.apache.royale.textLayout.property.PropertyFactory._sharedInheritEnumHandler;


/**
 * @private
 * @type {org.apache.royale.textLayout.property.UndefinedPropertyHandler}
 */
org.apache.royale.textLayout.property.PropertyFactory._sharedUndefinedHandler;


/**
 * @private
 * @type {org.apache.royale.textLayout.property.UintPropertyHandler}
 */
org.apache.royale.textLayout.property.PropertyFactory._sharedUintHandler;


/**
 * @private
 * @type {org.apache.royale.textLayout.property.BooleanPropertyHandler}
 */
org.apache.royale.textLayout.property.PropertyFactory._sharedBooleanHandler;


/**
 * @private
 * @type {org.apache.royale.textLayout.property.FormatPropertyHandler}
 */
org.apache.royale.textLayout.property.PropertyFactory._sharedTextLayoutFormatHandler;


/**
 * @private
 * @type {org.apache.royale.textLayout.property.FormatPropertyHandler}
 */
org.apache.royale.textLayout.property.PropertyFactory._sharedListMarkerFormatHandler;


/**
 * @nocollapse
 * @param {string} nameValue
 * @param {boolean} defaultValue
 * @param {boolean} inherited
 * @param {Array} categories
 * @return {org.apache.royale.textLayout.property.Property}
 */
org.apache.royale.textLayout.property.PropertyFactory.bool = function(nameValue, defaultValue, inherited, categories) {
  var /** @type {org.apache.royale.textLayout.property.Property} */ rslt = new org.apache.royale.textLayout.property.Property(nameValue, defaultValue, inherited, categories);
  rslt.addHandlers(org.apache.royale.textLayout.property.PropertyFactory.sharedUndefinedHandler, org.apache.royale.textLayout.property.PropertyFactory.sharedBooleanHandler, org.apache.royale.textLayout.property.PropertyFactory.sharedInheritEnumHandler);
  return rslt;
};


/**
 * @nocollapse
 * @param {string} nameValue
 * @param {string} defaultValue
 * @param {boolean} inherited
 * @param {Array} categories
 * @return {org.apache.royale.textLayout.property.Property}
 */
org.apache.royale.textLayout.property.PropertyFactory.string = function(nameValue, defaultValue, inherited, categories) {
  var /** @type {org.apache.royale.textLayout.property.Property} */ rslt = new org.apache.royale.textLayout.property.Property(nameValue, defaultValue, inherited, categories);
  rslt.addHandlers(org.apache.royale.textLayout.property.PropertyFactory.sharedUndefinedHandler, org.apache.royale.textLayout.property.PropertyFactory.sharedStringHandler);
  return rslt;
};


/**
 * @nocollapse
 * @param {string} nameValue
 * @param {number} defaultValue
 * @param {boolean} inherited
 * @param {Array} categories
 * @return {org.apache.royale.textLayout.property.Property}
 */
org.apache.royale.textLayout.property.PropertyFactory.uintProp = function(nameValue, defaultValue, inherited, categories) {
  var /** @type {org.apache.royale.textLayout.property.Property} */ rslt = new org.apache.royale.textLayout.property.Property(nameValue, defaultValue, inherited, categories);
  rslt.addHandlers(org.apache.royale.textLayout.property.PropertyFactory.sharedUndefinedHandler, org.apache.royale.textLayout.property.PropertyFactory.sharedUintHandler, org.apache.royale.textLayout.property.PropertyFactory.sharedInheritEnumHandler);
  return rslt;
};


/**
 * @nocollapse
 * @param {string} nameValue
 * @param {string} defaultValue
 * @param {boolean} inherited
 * @param {Array} categories
 * @param {...} rest
 * @return {org.apache.royale.textLayout.property.Property}
 */
org.apache.royale.textLayout.property.PropertyFactory.enumString = function(nameValue, defaultValue, inherited, categories, rest) {
  rest = Array.prototype.slice.call(arguments, 4);
  var /** @type {org.apache.royale.textLayout.property.Property} */ rslt = new org.apache.royale.textLayout.property.Property(nameValue, defaultValue, inherited, categories);
  rslt.addHandlers(org.apache.royale.textLayout.property.PropertyFactory.sharedUndefinedHandler, new org.apache.royale.textLayout.property.EnumPropertyHandler(rest), org.apache.royale.textLayout.property.PropertyFactory.sharedInheritEnumHandler);
  return rslt;
};


/**
 * @nocollapse
 * @param {string} nameValue
 * @param {Object} defaultValue
 * @param {boolean} inherited
 * @param {Array} categories
 * @param {number} minValue
 * @param {number} maxValue
 * @param {...} rest
 * @return {org.apache.royale.textLayout.property.Property}
 */
org.apache.royale.textLayout.property.PropertyFactory.intOrEnum = function(nameValue, defaultValue, inherited, categories, minValue, maxValue, rest) {
  rest = Array.prototype.slice.call(arguments, 6);
  var /** @type {org.apache.royale.textLayout.property.Property} */ rslt = new org.apache.royale.textLayout.property.Property(nameValue, defaultValue, inherited, categories);
  rslt.addHandlers(org.apache.royale.textLayout.property.PropertyFactory.sharedUndefinedHandler, new org.apache.royale.textLayout.property.EnumPropertyHandler(rest), new org.apache.royale.textLayout.property.IntPropertyHandler(minValue, maxValue), org.apache.royale.textLayout.property.PropertyFactory.sharedInheritEnumHandler);
  return rslt;
};


/**
 * @nocollapse
 * @param {string} nameValue
 * @param {Object} defaultValue
 * @param {boolean} inherited
 * @param {Array} categories
 * @param {...} rest
 * @return {org.apache.royale.textLayout.property.Property}
 */
org.apache.royale.textLayout.property.PropertyFactory.uintOrEnum = function(nameValue, defaultValue, inherited, categories, rest) {
  rest = Array.prototype.slice.call(arguments, 4);
  var /** @type {org.apache.royale.textLayout.property.Property} */ rslt = new org.apache.royale.textLayout.property.Property(nameValue, defaultValue, inherited, categories);
  rslt.addHandlers(org.apache.royale.textLayout.property.PropertyFactory.sharedUndefinedHandler, new org.apache.royale.textLayout.property.EnumPropertyHandler(rest), org.apache.royale.textLayout.property.PropertyFactory.sharedUintHandler, org.apache.royale.textLayout.property.PropertyFactory.sharedInheritEnumHandler);
  return rslt;
};


/**
 * @nocollapse
 * @param {string} nameValue
 * @param {number} defaultValue
 * @param {boolean} inherited
 * @param {Array} categories
 * @param {number} minValue
 * @param {number} maxValue
 * @return {org.apache.royale.textLayout.property.Property}
 */
org.apache.royale.textLayout.property.PropertyFactory.number = function(nameValue, defaultValue, inherited, categories, minValue, maxValue) {
  var /** @type {org.apache.royale.textLayout.property.Property} */ rslt = new org.apache.royale.textLayout.property.Property(nameValue, defaultValue, inherited, categories);
  rslt.addHandlers(org.apache.royale.textLayout.property.PropertyFactory.sharedUndefinedHandler, new org.apache.royale.textLayout.property.NumberPropertyHandler(minValue, maxValue), org.apache.royale.textLayout.property.PropertyFactory.sharedInheritEnumHandler);
  return rslt;
};


/**
 * @nocollapse
 * @param {string} nameValue
 * @param {Object} defaultValue
 * @param {boolean} inherited
 * @param {Array} categories
 * @param {number} minValue
 * @param {number} maxValue
 * @param {string} minPercentValue
 * @param {string} maxPercentValue
 * @param {...} rest
 * @return {org.apache.royale.textLayout.property.Property}
 */
org.apache.royale.textLayout.property.PropertyFactory.numPercentEnum = function(nameValue, defaultValue, inherited, categories, minValue, maxValue, minPercentValue, maxPercentValue, rest) {
  rest = Array.prototype.slice.call(arguments, 8);
  var /** @type {org.apache.royale.textLayout.property.Property} */ rslt = new org.apache.royale.textLayout.property.Property(nameValue, defaultValue, inherited, categories);
  rslt.addHandlers(org.apache.royale.textLayout.property.PropertyFactory.sharedUndefinedHandler, new org.apache.royale.textLayout.property.EnumPropertyHandler(rest), new org.apache.royale.textLayout.property.PercentPropertyHandler(minPercentValue, maxPercentValue), new org.apache.royale.textLayout.property.NumberPropertyHandler(minValue, maxValue), org.apache.royale.textLayout.property.PropertyFactory.sharedInheritEnumHandler);
  return rslt;
};


/**
 * @nocollapse
 * @param {string} nameValue
 * @param {Object} defaultValue
 * @param {boolean} inherited
 * @param {Array} categories
 * @param {number} minValue
 * @param {number} maxValue
 * @param {string} minPercentValue
 * @param {string} maxPercentValue
 * @return {org.apache.royale.textLayout.property.Property}
 */
org.apache.royale.textLayout.property.PropertyFactory.numPercent = function(nameValue, defaultValue, inherited, categories, minValue, maxValue, minPercentValue, maxPercentValue) {
  var /** @type {org.apache.royale.textLayout.property.Property} */ rslt = new org.apache.royale.textLayout.property.Property(nameValue, defaultValue, inherited, categories);
  rslt.addHandlers(org.apache.royale.textLayout.property.PropertyFactory.sharedUndefinedHandler, new org.apache.royale.textLayout.property.PercentPropertyHandler(minPercentValue, maxPercentValue), new org.apache.royale.textLayout.property.NumberPropertyHandler(minValue, maxValue), org.apache.royale.textLayout.property.PropertyFactory.sharedInheritEnumHandler);
  return rslt;
};


/**
 * @nocollapse
 * @param {string} nameValue
 * @param {Object} defaultValue
 * @param {boolean} inherited
 * @param {Array} categories
 * @param {number} minValue
 * @param {number} maxValue
 * @param {...} rest
 * @return {org.apache.royale.textLayout.property.Property}
 */
org.apache.royale.textLayout.property.PropertyFactory.numEnum = function(nameValue, defaultValue, inherited, categories, minValue, maxValue, rest) {
  rest = Array.prototype.slice.call(arguments, 6);
  var /** @type {org.apache.royale.textLayout.property.Property} */ rslt = new org.apache.royale.textLayout.property.Property(nameValue, defaultValue, inherited, categories);
  rslt.addHandlers(org.apache.royale.textLayout.property.PropertyFactory.sharedUndefinedHandler, new org.apache.royale.textLayout.property.EnumPropertyHandler(rest), new org.apache.royale.textLayout.property.NumberPropertyHandler(minValue, maxValue), org.apache.royale.textLayout.property.PropertyFactory.sharedInheritEnumHandler);
  return rslt;
};


/**
 * @nocollapse
 * @param {string} nameValue
 * @param {Array} defaultValue
 * @param {boolean} inherited
 * @param {Array} categories
 * @return {org.apache.royale.textLayout.property.Property}
 */
org.apache.royale.textLayout.property.PropertyFactory.tabStopsProp = function(nameValue, defaultValue, inherited, categories) {
  return new org.apache.royale.textLayout.property.TabStopsProperty(nameValue, defaultValue, inherited, categories);
};


/**
 * @nocollapse
 * @param {string} nameValue
 * @param {Object} defaultValue
 * @param {boolean} inherited
 * @param {Array} categories
 * @param {string} minPercentValue
 * @param {string} maxPercentValue
 * @return {org.apache.royale.textLayout.property.Property}
 */
org.apache.royale.textLayout.property.PropertyFactory.spacingLimitProp = function(nameValue, defaultValue, inherited, categories, minPercentValue, maxPercentValue) {
  var /** @type {org.apache.royale.textLayout.property.Property} */ rslt = new org.apache.royale.textLayout.property.Property(nameValue, defaultValue, inherited, categories);
  rslt.addHandlers(org.apache.royale.textLayout.property.PropertyFactory.sharedUndefinedHandler, new org.apache.royale.textLayout.property.SpacingLimitPropertyHandler(minPercentValue, maxPercentValue), org.apache.royale.textLayout.property.PropertyFactory.sharedInheritEnumHandler);
  return rslt;
};


/**
 * @private
 * @const
 * @type {*}
 */
org.apache.royale.textLayout.property.PropertyFactory.undefinedValue = undefined;


/**
 * @nocollapse
 * @param {string} nameValue
 * @param {Object} defaultValue
 * @param {boolean} inherited
 * @param {Array} categories
 * @return {org.apache.royale.textLayout.property.Property}
 */
org.apache.royale.textLayout.property.PropertyFactory.tlfProp = function(nameValue, defaultValue, inherited, categories) {
  var /** @type {org.apache.royale.textLayout.property.Property} */ rslt = new org.apache.royale.textLayout.property.Property(nameValue, org.apache.royale.textLayout.property.PropertyFactory.undefinedValue, inherited, categories);
  rslt.addHandlers(org.apache.royale.textLayout.property.PropertyFactory.sharedUndefinedHandler, org.apache.royale.textLayout.property.PropertyFactory.sharedTextLayoutFormatHandler, org.apache.royale.textLayout.property.PropertyFactory.sharedInheritEnumHandler);
  return rslt;
};


/**
 * @nocollapse
 * @param {string} nameValue
 * @param {Object} defaultValue
 * @param {boolean} inherited
 * @param {Array} categories
 * @return {org.apache.royale.textLayout.property.Property}
 */
org.apache.royale.textLayout.property.PropertyFactory.listMarkerFormatProp = function(nameValue, defaultValue, inherited, categories) {
  var /** @type {org.apache.royale.textLayout.property.Property} */ rslt = new org.apache.royale.textLayout.property.Property(nameValue, org.apache.royale.textLayout.property.PropertyFactory.undefinedValue, inherited, categories);
  rslt.addHandlers(org.apache.royale.textLayout.property.PropertyFactory.sharedUndefinedHandler, org.apache.royale.textLayout.property.PropertyFactory.sharedListMarkerFormatHandler, org.apache.royale.textLayout.property.PropertyFactory.sharedInheritEnumHandler);
  return rslt;
};


/**
 * @nocollapse
 * @export
 * @type {org.apache.royale.textLayout.property.StringPropertyHandler}
 */
org.apache.royale.textLayout.property.PropertyFactory.sharedStringHandler;


org.apache.royale.textLayout.property.PropertyFactory.get__sharedStringHandler = function() {
  if (org.apache.royale.textLayout.property.PropertyFactory._sharedStringHandler == null)
    org.apache.royale.textLayout.property.PropertyFactory._sharedStringHandler = new org.apache.royale.textLayout.property.StringPropertyHandler();
  return org.apache.royale.textLayout.property.PropertyFactory._sharedStringHandler;
};


/**
 * @nocollapse
 * @export
 * @type {org.apache.royale.textLayout.property.EnumPropertyHandler}
 */
org.apache.royale.textLayout.property.PropertyFactory.sharedInheritEnumHandler;


org.apache.royale.textLayout.property.PropertyFactory.get__sharedInheritEnumHandler = function() {
  if (org.apache.royale.textLayout.property.PropertyFactory._sharedInheritEnumHandler == null)
    org.apache.royale.textLayout.property.PropertyFactory._sharedInheritEnumHandler = new org.apache.royale.textLayout.property.EnumPropertyHandler([org.apache.royale.textLayout.formats.FormatValue.INHERIT]);
  return org.apache.royale.textLayout.property.PropertyFactory._sharedInheritEnumHandler;
};


/**
 * @nocollapse
 * @export
 * @type {org.apache.royale.textLayout.property.UndefinedPropertyHandler}
 */
org.apache.royale.textLayout.property.PropertyFactory.sharedUndefinedHandler;


org.apache.royale.textLayout.property.PropertyFactory.get__sharedUndefinedHandler = function() {
  if (org.apache.royale.textLayout.property.PropertyFactory._sharedUndefinedHandler == null)
    org.apache.royale.textLayout.property.PropertyFactory._sharedUndefinedHandler = new org.apache.royale.textLayout.property.UndefinedPropertyHandler();
  return org.apache.royale.textLayout.property.PropertyFactory._sharedUndefinedHandler;
};


/**
 * @nocollapse
 * @export
 * @type {org.apache.royale.textLayout.property.UintPropertyHandler}
 */
org.apache.royale.textLayout.property.PropertyFactory.sharedUintHandler;


org.apache.royale.textLayout.property.PropertyFactory.get__sharedUintHandler = function() {
  if (org.apache.royale.textLayout.property.PropertyFactory._sharedUintHandler == null)
    org.apache.royale.textLayout.property.PropertyFactory._sharedUintHandler = new org.apache.royale.textLayout.property.UintPropertyHandler();
  return org.apache.royale.textLayout.property.PropertyFactory._sharedUintHandler;
};


/**
 * @nocollapse
 * @export
 * @type {org.apache.royale.textLayout.property.BooleanPropertyHandler}
 */
org.apache.royale.textLayout.property.PropertyFactory.sharedBooleanHandler;


org.apache.royale.textLayout.property.PropertyFactory.get__sharedBooleanHandler = function() {
  if (org.apache.royale.textLayout.property.PropertyFactory._sharedBooleanHandler == null)
    org.apache.royale.textLayout.property.PropertyFactory._sharedBooleanHandler = new org.apache.royale.textLayout.property.BooleanPropertyHandler();
  return org.apache.royale.textLayout.property.PropertyFactory._sharedBooleanHandler;
};


/**
 * @nocollapse
 * @export
 * @type {org.apache.royale.textLayout.property.FormatPropertyHandler}
 */
org.apache.royale.textLayout.property.PropertyFactory.sharedTextLayoutFormatHandler;


org.apache.royale.textLayout.property.PropertyFactory.get__sharedTextLayoutFormatHandler = function() {
  if (org.apache.royale.textLayout.property.PropertyFactory._sharedTextLayoutFormatHandler == null) {
    org.apache.royale.textLayout.property.PropertyFactory._sharedTextLayoutFormatHandler = new org.apache.royale.textLayout.property.FormatPropertyHandler();
    org.apache.royale.textLayout.property.PropertyFactory._sharedTextLayoutFormatHandler.converter = org.apache.royale.textLayout.formats.TextLayoutFormat.createTextLayoutFormat;
  }
  return org.apache.royale.textLayout.property.PropertyFactory._sharedTextLayoutFormatHandler;
};


/**
 * @nocollapse
 * @export
 * @type {org.apache.royale.textLayout.property.FormatPropertyHandler}
 */
org.apache.royale.textLayout.property.PropertyFactory.sharedListMarkerFormatHandler;


org.apache.royale.textLayout.property.PropertyFactory.get__sharedListMarkerFormatHandler = function() {
  if (org.apache.royale.textLayout.property.PropertyFactory._sharedListMarkerFormatHandler == null) {
    org.apache.royale.textLayout.property.PropertyFactory._sharedListMarkerFormatHandler = new org.apache.royale.textLayout.property.FormatPropertyHandler();
    org.apache.royale.textLayout.property.PropertyFactory._sharedListMarkerFormatHandler.converter = org.apache.royale.textLayout.formats.ListMarkerFormat.createListMarkerFormat;
  }
  return org.apache.royale.textLayout.property.PropertyFactory._sharedListMarkerFormatHandler;
};


Object.defineProperties(org.apache.royale.textLayout.property.PropertyFactory, /** @lends {org.apache.royale.textLayout.property.PropertyFactory} */ {
/**
 * @type {org.apache.royale.textLayout.property.StringPropertyHandler}
 */
sharedStringHandler: {
get: org.apache.royale.textLayout.property.PropertyFactory.get__sharedStringHandler},
/**
 * @type {org.apache.royale.textLayout.property.EnumPropertyHandler}
 */
sharedInheritEnumHandler: {
get: org.apache.royale.textLayout.property.PropertyFactory.get__sharedInheritEnumHandler},
/**
 * @type {org.apache.royale.textLayout.property.UndefinedPropertyHandler}
 */
sharedUndefinedHandler: {
get: org.apache.royale.textLayout.property.PropertyFactory.get__sharedUndefinedHandler},
/**
 * @type {org.apache.royale.textLayout.property.UintPropertyHandler}
 */
sharedUintHandler: {
get: org.apache.royale.textLayout.property.PropertyFactory.get__sharedUintHandler},
/**
 * @type {org.apache.royale.textLayout.property.BooleanPropertyHandler}
 */
sharedBooleanHandler: {
get: org.apache.royale.textLayout.property.PropertyFactory.get__sharedBooleanHandler},
/**
 * @type {org.apache.royale.textLayout.property.FormatPropertyHandler}
 */
sharedTextLayoutFormatHandler: {
get: org.apache.royale.textLayout.property.PropertyFactory.get__sharedTextLayoutFormatHandler},
/**
 * @type {org.apache.royale.textLayout.property.FormatPropertyHandler}
 */
sharedListMarkerFormatHandler: {
get: org.apache.royale.textLayout.property.PropertyFactory.get__sharedListMarkerFormatHandler}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.textLayout.property.PropertyFactory.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'PropertyFactory', qName: 'org.apache.royale.textLayout.property.PropertyFactory', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.textLayout.property.PropertyFactory.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        '|sharedStringHandler': { type: 'org.apache.royale.textLayout.property.StringPropertyHandler', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.property.PropertyFactory'},
        '|sharedInheritEnumHandler': { type: 'org.apache.royale.textLayout.property.EnumPropertyHandler', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.property.PropertyFactory'},
        '|sharedUndefinedHandler': { type: 'org.apache.royale.textLayout.property.UndefinedPropertyHandler', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.property.PropertyFactory'},
        '|sharedUintHandler': { type: 'org.apache.royale.textLayout.property.UintPropertyHandler', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.property.PropertyFactory'},
        '|sharedBooleanHandler': { type: 'org.apache.royale.textLayout.property.BooleanPropertyHandler', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.property.PropertyFactory'},
        '|sharedTextLayoutFormatHandler': { type: 'org.apache.royale.textLayout.property.FormatPropertyHandler', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.property.PropertyFactory'},
        '|sharedListMarkerFormatHandler': { type: 'org.apache.royale.textLayout.property.FormatPropertyHandler', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.property.PropertyFactory'}
      };
    },
    methods: function () {
      return {
        '|bool': { type: 'org.apache.royale.textLayout.property.Property', declaredBy: 'org.apache.royale.textLayout.property.PropertyFactory', parameters: function () { return [ 'String', false ,'Boolean', false ,'Boolean', false ,'Vector.<String>', false ]; }},
        '|string': { type: 'org.apache.royale.textLayout.property.Property', declaredBy: 'org.apache.royale.textLayout.property.PropertyFactory', parameters: function () { return [ 'String', false ,'String', false ,'Boolean', false ,'Vector.<String>', false ]; }},
        '|uintProp': { type: 'org.apache.royale.textLayout.property.Property', declaredBy: 'org.apache.royale.textLayout.property.PropertyFactory', parameters: function () { return [ 'String', false ,'uint', false ,'Boolean', false ,'Vector.<String>', false ]; }},
        '|enumString': { type: 'org.apache.royale.textLayout.property.Property', declaredBy: 'org.apache.royale.textLayout.property.PropertyFactory', parameters: function () { return [ 'String', false ,'String', false ,'Boolean', false ,'Vector.<String>', false ,'Array', false ]; }},
        '|intOrEnum': { type: 'org.apache.royale.textLayout.property.Property', declaredBy: 'org.apache.royale.textLayout.property.PropertyFactory', parameters: function () { return [ 'String', false ,'Object', false ,'Boolean', false ,'Vector.<String>', false ,'int', false ,'int', false ,'Array', false ]; }},
        '|uintOrEnum': { type: 'org.apache.royale.textLayout.property.Property', declaredBy: 'org.apache.royale.textLayout.property.PropertyFactory', parameters: function () { return [ 'String', false ,'Object', false ,'Boolean', false ,'Vector.<String>', false ,'Array', false ]; }},
        '|number': { type: 'org.apache.royale.textLayout.property.Property', declaredBy: 'org.apache.royale.textLayout.property.PropertyFactory', parameters: function () { return [ 'String', false ,'Number', false ,'Boolean', false ,'Vector.<String>', false ,'Number', false ,'Number', false ]; }},
        '|numPercentEnum': { type: 'org.apache.royale.textLayout.property.Property', declaredBy: 'org.apache.royale.textLayout.property.PropertyFactory', parameters: function () { return [ 'String', false ,'Object', false ,'Boolean', false ,'Vector.<String>', false ,'Number', false ,'Number', false ,'String', false ,'String', false ,'Array', false ]; }},
        '|numPercent': { type: 'org.apache.royale.textLayout.property.Property', declaredBy: 'org.apache.royale.textLayout.property.PropertyFactory', parameters: function () { return [ 'String', false ,'Object', false ,'Boolean', false ,'Vector.<String>', false ,'Number', false ,'Number', false ,'String', false ,'String', false ]; }},
        '|numEnum': { type: 'org.apache.royale.textLayout.property.Property', declaredBy: 'org.apache.royale.textLayout.property.PropertyFactory', parameters: function () { return [ 'String', false ,'Object', false ,'Boolean', false ,'Vector.<String>', false ,'Number', false ,'Number', false ,'Array', false ]; }},
        '|tabStopsProp': { type: 'org.apache.royale.textLayout.property.Property', declaredBy: 'org.apache.royale.textLayout.property.PropertyFactory', parameters: function () { return [ 'String', false ,'Array', false ,'Boolean', false ,'Vector.<String>', false ]; }},
        '|spacingLimitProp': { type: 'org.apache.royale.textLayout.property.Property', declaredBy: 'org.apache.royale.textLayout.property.PropertyFactory', parameters: function () { return [ 'String', false ,'Object', false ,'Boolean', false ,'Vector.<String>', false ,'String', false ,'String', false ]; }},
        '|tlfProp': { type: 'org.apache.royale.textLayout.property.Property', declaredBy: 'org.apache.royale.textLayout.property.PropertyFactory', parameters: function () { return [ 'String', false ,'Object', false ,'Boolean', false ,'Vector.<String>', false ]; }},
        '|listMarkerFormatProp': { type: 'org.apache.royale.textLayout.property.Property', declaredBy: 'org.apache.royale.textLayout.property.PropertyFactory', parameters: function () { return [ 'String', false ,'Object', false ,'Boolean', false ,'Vector.<String>', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.textLayout.property.PropertyFactory.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./PropertyFactory.js.map
