/**
 * Generated by Apache Royale Compiler from org/apache/royale/textLayout/property/PercentPropertyHandler.as
 * org.apache.royale.textLayout.property.PercentPropertyHandler
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.textLayout.property.PercentPropertyHandler');
/* Royale Dependency List: org.apache.royale.textLayout.property.PropertyUtil,XML*/

goog.require('org.apache.royale.textLayout.property.PropertyHandler');



/**
 * @constructor
 * @extends {org.apache.royale.textLayout.property.PropertyHandler}
 * @param {string} minValue
 * @param {string} maxValue
 * @param {string=} limits
 */
org.apache.royale.textLayout.property.PercentPropertyHandler = function(minValue, maxValue, limits) {
  org.apache.royale.textLayout.property.PercentPropertyHandler.base(this, 'constructor');
  limits = typeof limits !== 'undefined' ? limits : this.org_apache_royale_textLayout_property_PercentPropertyHandler_ALL_LIMITS;
  this.org_apache_royale_textLayout_property_PercentPropertyHandler__minValue = org.apache.royale.textLayout.property.PropertyUtil.toNumberIfPercent(minValue);
  this.org_apache_royale_textLayout_property_PercentPropertyHandler__maxValue = org.apache.royale.textLayout.property.PropertyUtil.toNumberIfPercent(maxValue);
  this.org_apache_royale_textLayout_property_PercentPropertyHandler__limits = limits;
};
goog.inherits(org.apache.royale.textLayout.property.PercentPropertyHandler, org.apache.royale.textLayout.property.PropertyHandler);


/**
 * @private
 * @const
 * @type {string}
 */
org.apache.royale.textLayout.property.PercentPropertyHandler.prototype.org_apache_royale_textLayout_property_PercentPropertyHandler_ALL_LIMITS = "allLimits";


/**
 * @private
 * @const
 * @type {string}
 */
org.apache.royale.textLayout.property.PercentPropertyHandler.prototype.org_apache_royale_textLayout_property_PercentPropertyHandler_LOWER_LIMIT = "lowerLimit";


/**
 * @private
 * @const
 * @type {string}
 */
org.apache.royale.textLayout.property.PercentPropertyHandler.prototype.org_apache_royale_textLayout_property_PercentPropertyHandler_UPPER_LIMIT = "upperLimit";


/**
 * @private
 * @type {number}
 */
org.apache.royale.textLayout.property.PercentPropertyHandler.prototype.org_apache_royale_textLayout_property_PercentPropertyHandler__minValue;


/**
 * @private
 * @type {number}
 */
org.apache.royale.textLayout.property.PercentPropertyHandler.prototype.org_apache_royale_textLayout_property_PercentPropertyHandler__maxValue;


/**
 * @private
 * @type {string}
 */
org.apache.royale.textLayout.property.PercentPropertyHandler.prototype.org_apache_royale_textLayout_property_PercentPropertyHandler__limits;


/** not yet enabled.  @asprivate 
 * @return {boolean}
 */
org.apache.royale.textLayout.property.PercentPropertyHandler.prototype.checkLowerLimit = function() {
  return this.org_apache_royale_textLayout_property_PercentPropertyHandler__limits == this.org_apache_royale_textLayout_property_PercentPropertyHandler_ALL_LIMITS || this.org_apache_royale_textLayout_property_PercentPropertyHandler__limits == this.org_apache_royale_textLayout_property_PercentPropertyHandler_LOWER_LIMIT;
};


/** not yet enabled.  @asprivate 
 * @return {boolean}
 */
org.apache.royale.textLayout.property.PercentPropertyHandler.prototype.checkUpperLimit = function() {
  return this.org_apache_royale_textLayout_property_PercentPropertyHandler__limits == this.org_apache_royale_textLayout_property_PercentPropertyHandler_ALL_LIMITS || this.org_apache_royale_textLayout_property_PercentPropertyHandler__limits == this.org_apache_royale_textLayout_property_PercentPropertyHandler_UPPER_LIMIT;
};


/**
 * @override
 */
org.apache.royale.textLayout.property.PercentPropertyHandler.prototype.owningHandlerCheck = function(newVal) {
  var /** @type {number} */ newNumber = org.apache.royale.textLayout.property.PropertyUtil.toNumberIfPercent(newVal);
  if (isNaN(newNumber))
    return undefined;
  if (this.checkLowerLimit() && newNumber < this.org_apache_royale_textLayout_property_PercentPropertyHandler__minValue)
    return undefined;
  if (this.checkUpperLimit() && newNumber > this.org_apache_royale_textLayout_property_PercentPropertyHandler__maxValue)
    return undefined;
  return newVal;
};


org.apache.royale.textLayout.property.PercentPropertyHandler.prototype.get__className = function() {
  return "PercentPropertyHandler";
};


org.apache.royale.textLayout.property.PercentPropertyHandler.prototype.get__minValue = function() {
  return this.org_apache_royale_textLayout_property_PercentPropertyHandler__minValue;
};


org.apache.royale.textLayout.property.PercentPropertyHandler.prototype.get__maxValue = function() {
  return this.org_apache_royale_textLayout_property_PercentPropertyHandler__maxValue;
};


Object.defineProperties(org.apache.royale.textLayout.property.PercentPropertyHandler.prototype, /** @lends {org.apache.royale.textLayout.property.PercentPropertyHandler.prototype} */ {
/**
 * @type {string}
 */
className: {
get: org.apache.royale.textLayout.property.PercentPropertyHandler.prototype.get__className},
/**
 * @type {number}
 */
minValue: {
get: org.apache.royale.textLayout.property.PercentPropertyHandler.prototype.get__minValue},
/**
 * @type {number}
 */
maxValue: {
get: org.apache.royale.textLayout.property.PercentPropertyHandler.prototype.get__maxValue}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.textLayout.property.PercentPropertyHandler.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'PercentPropertyHandler', qName: 'org.apache.royale.textLayout.property.PercentPropertyHandler', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.textLayout.property.PercentPropertyHandler.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'className': { type: 'String', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.property.PercentPropertyHandler'},
        'minValue': { type: 'Number', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.property.PercentPropertyHandler'},
        'maxValue': { type: 'Number', access: 'readonly', declaredBy: 'org.apache.royale.textLayout.property.PercentPropertyHandler'}
      };
    },
    methods: function () {
      return {
        'PercentPropertyHandler': { type: '', declaredBy: 'org.apache.royale.textLayout.property.PercentPropertyHandler', parameters: function () { return [ 'String', false ,'String', false ,'String', true ]; }},
        'checkLowerLimit': { type: 'Boolean', declaredBy: 'org.apache.royale.textLayout.property.PercentPropertyHandler'},
        'checkUpperLimit': { type: 'Boolean', declaredBy: 'org.apache.royale.textLayout.property.PercentPropertyHandler'},
        'owningHandlerCheck': { type: '*', declaredBy: 'org.apache.royale.textLayout.property.PercentPropertyHandler', parameters: function () { return [ '*', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.textLayout.property.PercentPropertyHandler.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./PercentPropertyHandler.js.map
