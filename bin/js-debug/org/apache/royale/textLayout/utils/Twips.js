/**
 * Generated by Apache Royale Compiler from org/apache/royale/textLayout/utils/Twips.as
 * org.apache.royale.textLayout.utils.Twips
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.textLayout.utils.Twips');
/* Royale Dependency List: XML,org.apache.royale.utils.Language*/



/**
 * @constructor
 */
org.apache.royale.textLayout.utils.Twips = function() {
};


/**
 * @nocollapse
 * @const
 * @type {number}
 */
org.apache.royale.textLayout.utils.Twips.ONE_TWIP = .05;


/**
 * @nocollapse
 * @const
 * @type {number}
 */
org.apache.royale.textLayout.utils.Twips.TWIPS_PER_PIXEL = 20;


/**
 * @nocollapse
 * @const
 * @type {number}
 */
org.apache.royale.textLayout.utils.Twips.MAX_VALUE = 2147483647;


/**
 * @nocollapse
 * @const
 * @type {number}
 */
org.apache.royale.textLayout.utils.Twips.MIN_VALUE = -2147483647;


/** Convert Pixels to Twips (truncated). @asreturn twips 
 * @nocollapse
 * @param {number} n
 * @return {number}
 */
org.apache.royale.textLayout.utils.Twips.to = function(n) {
  return org.apache.royale.utils.Language._int(n * 20);
};


/** Convert Pixels to Twips (rounded). @asreturn twips 
 * @nocollapse
 * @param {number} n
 * @return {number}
 */
org.apache.royale.textLayout.utils.Twips.roundTo = function(n) {
  return org.apache.royale.utils.Language._int(Math.round(n) * 20);
};


/** Convert Twips to pixels. @asreturn pixels 
 * @nocollapse
 * @param {number} t
 * @return {number}
 */
org.apache.royale.textLayout.utils.Twips.from = function(t) {
  return Number(t) / 20;
};


/** ceil a number to the nearest twip. @asreturn pixels 
 * @nocollapse
 * @param {number} n
 * @return {number}
 */
org.apache.royale.textLayout.utils.Twips.ceil = function(n) {
  return Math.ceil(n * 20.0) / 20.0;
};


/** floor a number to the nearest twip. @asreturn pixels 
 * @nocollapse
 * @param {number} n
 * @return {number}
 */
org.apache.royale.textLayout.utils.Twips.floor = function(n) {
  return Math.floor(n * 20.0) / 20.0;
};


/** round a number to the nearest twip. @asreturn pixels 
 * @nocollapse
 * @param {number} n
 * @return {number}
 */
org.apache.royale.textLayout.utils.Twips.round = function(n) {
  return Math.round(n * 20.0) / 20.0;
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.textLayout.utils.Twips.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'Twips', qName: 'org.apache.royale.textLayout.utils.Twips', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.textLayout.utils.Twips.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    methods: function () {
      return {
        '|to': { type: 'int', declaredBy: 'org.apache.royale.textLayout.utils.Twips', parameters: function () { return [ 'Number', false ]; }},
        '|roundTo': { type: 'int', declaredBy: 'org.apache.royale.textLayout.utils.Twips', parameters: function () { return [ 'Number', false ]; }},
        '|from': { type: 'Number', declaredBy: 'org.apache.royale.textLayout.utils.Twips', parameters: function () { return [ 'int', false ]; }},
        '|ceil': { type: 'Number', declaredBy: 'org.apache.royale.textLayout.utils.Twips', parameters: function () { return [ 'Number', false ]; }},
        '|floor': { type: 'Number', declaredBy: 'org.apache.royale.textLayout.utils.Twips', parameters: function () { return [ 'Number', false ]; }},
        '|round': { type: 'Number', declaredBy: 'org.apache.royale.textLayout.utils.Twips', parameters: function () { return [ 'Number', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.textLayout.utils.Twips.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./Twips.js.map
