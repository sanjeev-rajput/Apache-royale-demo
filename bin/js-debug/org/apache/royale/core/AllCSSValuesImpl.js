/**
 * Generated by Apache Royale Compiler from org/apache/royale/core/AllCSSValuesImpl.as
 * org.apache.royale.core.AllCSSValuesImpl
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.core.AllCSSValuesImpl');
/* Royale Dependency List: org.apache.royale.utils.CSSUtils*/

goog.require('org.apache.royale.core.SimpleCSSValuesImpl');



/**
 *  Constructor.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @constructor
 * @extends {org.apache.royale.core.SimpleCSSValuesImpl}
 */
org.apache.royale.core.AllCSSValuesImpl = function() {
  
  this.lengthProps = ["width", "height", "top", "bottom", "margin", "padding", "borderWidth", "fontSize", "textShadow"];
  org.apache.royale.core.AllCSSValuesImpl.base(this, 'constructor');
};
goog.inherits(org.apache.royale.core.AllCSSValuesImpl, org.apache.royale.core.SimpleCSSValuesImpl);


/**
 * @private
 * @type {string}
 */
org.apache.royale.core.AllCSSValuesImpl.prototype.org_apache_royale_core_AllCSSValuesImpl__defaultLengthUnit = "px";


/**
 * @protected
 * @type {Array}
 */
org.apache.royale.core.AllCSSValuesImpl.prototype.lengthProps;


/**
 * @protected
 * @param {string} prop
 * @return {boolean}
 */
org.apache.royale.core.AllCSSValuesImpl.prototype.isLengthProp = function(prop) {
  if (this.lengthProps.indexOf(prop) != -1) {
    return true;
  }
  if (prop.indexOf("margin") == 0) {
    return true;
  }
  if (prop.indexOf("padding") == 0) {
    return true;
  }
  return false;
};


/**
 * @protected
 * @override
 */
org.apache.royale.core.AllCSSValuesImpl.prototype.processNumberStyle = function(prop, value) {
  if (this.colorStyles[prop])
    value = org.apache.royale.utils.CSSUtils.attributeFromColor((value) >>> 0);
  else if (this.isLengthProp(prop))
    return value + this.defaultLengthUnit;
  return value;
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
org.apache.royale.core.AllCSSValuesImpl.prototype.defaultLengthUnit;


org.apache.royale.core.AllCSSValuesImpl.prototype.get__defaultLengthUnit = function() {
  return this.org_apache_royale_core_AllCSSValuesImpl__defaultLengthUnit;
};


org.apache.royale.core.AllCSSValuesImpl.prototype.set__defaultLengthUnit = function(value) {
  this.org_apache_royale_core_AllCSSValuesImpl__defaultLengthUnit = value;
};


Object.defineProperties(org.apache.royale.core.AllCSSValuesImpl.prototype, /** @lends {org.apache.royale.core.AllCSSValuesImpl.prototype} */ {
/**
 * @type {string}
 */
defaultLengthUnit: {
get: org.apache.royale.core.AllCSSValuesImpl.prototype.get__defaultLengthUnit,
set: org.apache.royale.core.AllCSSValuesImpl.prototype.set__defaultLengthUnit}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.core.AllCSSValuesImpl.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'AllCSSValuesImpl', qName: 'org.apache.royale.core.AllCSSValuesImpl', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.core.AllCSSValuesImpl.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'defaultLengthUnit': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.royale.core.AllCSSValuesImpl'}
      };
    },
    methods: function () {
      return {
        'AllCSSValuesImpl': { type: '', declaredBy: 'org.apache.royale.core.AllCSSValuesImpl'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.core.AllCSSValuesImpl.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./AllCSSValuesImpl.js.map
