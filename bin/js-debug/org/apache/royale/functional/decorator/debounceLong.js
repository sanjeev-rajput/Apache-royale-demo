/**
 * Generated by Apache Royale Compiler from org/apache/royale/functional/decorator/debounceLong.as
 * org.apache.royale.functional.decorator.debounceLong
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.functional.decorator.debounceLong');
/* Royale Dependency List: */



/**
 * Returns a debounced function to run after a delay.
 * If the function is invoked again within the delay period, the latest
 * invocation of the function will be used and the delay will be reset to then.
 * 
 * @royalesuppressexport
 * @langversion 3.0
 * @productversion Royale 0.9.9
 * 
 * @param {Function} method
 * @param {number} delay
 * @return {Function}
 */
org.apache.royale.functional.decorator.debounceLong = function(method, delay) {
  var /** @type {*} */ timeoutRef;
  return function(args) {
    args = Array.prototype.slice.call(arguments, 0);
    function callback() {
      timeoutRef = null;
      method.apply(null, args);
    };
    if (timeoutRef)
      clearTimeout(Number(timeoutRef));
    timeoutRef = setTimeout(callback, delay);
  };
}
