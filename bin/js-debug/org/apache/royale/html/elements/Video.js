/**
 * Generated by Apache Royale Compiler from org/apache/royale/html/elements/Video.as
 * org.apache.royale.html.elements.Video
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.html.elements.Video');
/* Royale Dependency List: org.apache.royale.core.WrappedHTMLElement,org.apache.royale.html.util.addElementToWrapper*/

goog.require('org.apache.royale.html.NodeElementBase');



/**
 *  constructor.
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.9.8
 * @constructor
 * @extends {org.apache.royale.html.NodeElementBase}
 */
org.apache.royale.html.elements.Video = function() {
  org.apache.royale.html.elements.Video.base(this, 'constructor');
};
goog.inherits(org.apache.royale.html.elements.Video, org.apache.royale.html.NodeElementBase);


/**
 *  Start video
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.9.8
 */
org.apache.royale.html.elements.Video.prototype.play = function() {
  this.element.play();
};


/**
 *  Pause video
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.9.8
 */
org.apache.royale.html.elements.Video.prototype.pause = function() {
  this.element.pause();
};


/**
 *  Resets the media element to its initial state and begins the process of selecting
 *  a media source and loading the media in preparation for playback to begin at the beginning.
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.9.8
 */
org.apache.royale.html.elements.Video.prototype.load = function() {
  this.element.load();
};


/**
 * @protected
 * @override
 */
org.apache.royale.html.elements.Video.prototype.createElement = function() {
  return org.apache.royale.html.util.addElementToWrapper(this, 'video');
};


/**
 * @nocollapse
 * @export
 * @type {Object}
 */
org.apache.royale.html.elements.Video.prototype.source;


org.apache.royale.html.elements.Video.prototype.get__source = function() {
  
  return this.element["srcObject"];
};


org.apache.royale.html.elements.Video.prototype.set__source = function(value) {
  
  this.element["srcObject"] = value;
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
org.apache.royale.html.elements.Video.prototype.autoplay;


org.apache.royale.html.elements.Video.prototype.get__autoplay = function() {
  
  return this.element.autoplay;
};


org.apache.royale.html.elements.Video.prototype.set__autoplay = function(value) {
  
  this.element.autoplay = value;
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
org.apache.royale.html.elements.Video.prototype.paused;


org.apache.royale.html.elements.Video.prototype.get__paused = function() {
  
  return this.element.paused;
};


Object.defineProperties(org.apache.royale.html.elements.Video.prototype, /** @lends {org.apache.royale.html.elements.Video.prototype} */ {
/**
 * @type {Object}
 */
source: {
get: org.apache.royale.html.elements.Video.prototype.get__source,
set: org.apache.royale.html.elements.Video.prototype.set__source},
/**
 * @type {boolean}
 */
autoplay: {
get: org.apache.royale.html.elements.Video.prototype.get__autoplay,
set: org.apache.royale.html.elements.Video.prototype.set__autoplay},
/**
 * @type {boolean}
 */
paused: {
get: org.apache.royale.html.elements.Video.prototype.get__paused}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.html.elements.Video.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'Video', qName: 'org.apache.royale.html.elements.Video', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.html.elements.Video.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'source': { type: 'Object', access: 'readwrite', declaredBy: 'org.apache.royale.html.elements.Video'},
        'autoplay': { type: 'Boolean', access: 'readwrite', declaredBy: 'org.apache.royale.html.elements.Video'},
        'paused': { type: 'Boolean', access: 'readonly', declaredBy: 'org.apache.royale.html.elements.Video'}
      };
    },
    methods: function () {
      return {
        'Video': { type: '', declaredBy: 'org.apache.royale.html.elements.Video'},
        'play': { type: 'void', declaredBy: 'org.apache.royale.html.elements.Video'},
        'pause': { type: 'void', declaredBy: 'org.apache.royale.html.elements.Video'},
        'load': { type: 'void', declaredBy: 'org.apache.royale.html.elements.Video'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.html.elements.Video.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./Video.js.map
