/**
 * Generated by Apache Royale Compiler from org/apache/royale/html/elements/Iframe.as
 * org.apache.royale.html.elements.Iframe
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.html.elements.Iframe');
/* Royale Dependency List: org.apache.royale.core.WrappedHTMLElement,org.apache.royale.html.util.addElementToWrapper*/

goog.require('org.apache.royale.html.NodeElementBase');



/**
 * @constructor
 * @extends {org.apache.royale.html.NodeElementBase}
 */
org.apache.royale.html.elements.Iframe = function() {
  org.apache.royale.html.elements.Iframe.base(this, 'constructor');
};
goog.inherits(org.apache.royale.html.elements.Iframe, org.apache.royale.html.NodeElementBase);


/**
 * Convenience method for postMessage
 *  @langversion 3.0
 *  @productversion Royale 0.9.9
 * @param {Object} message
 * @param {string} targetOrigin
 * @param {Object=} transfer
 */
org.apache.royale.html.elements.Iframe.prototype.postMessage = function(message, targetOrigin, transfer) {
  transfer = typeof transfer !== 'undefined' ? transfer : null;
  transfer = transfer || undefined;
  this.contentWindow.postMessage(message, targetOrigin, transfer);
};


/**
 * Convenience method to attach message listener
 *  @langversion 3.0
 *  @productversion Royale 0.9.9
 * @param {Function} handler
 */
org.apache.royale.html.elements.Iframe.prototype.addMessageListener = function(handler) {
  this.contentWindow.addEventListener("message", handler);
};


/**
 * @protected
 * @override
 */
org.apache.royale.html.elements.Iframe.prototype.createElement = function() {
  return org.apache.royale.html.util.addElementToWrapper(this, 'iframe');
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
org.apache.royale.html.elements.Iframe.prototype.allow;


org.apache.royale.html.elements.Iframe.prototype.get__allow = function() {
  return this.getAttribute("allow");
};


org.apache.royale.html.elements.Iframe.prototype.set__allow = function(value) {
  this.setAttribute("allow", value);
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
org.apache.royale.html.elements.Iframe.prototype.csp;


org.apache.royale.html.elements.Iframe.prototype.get__csp = function() {
  return this.getAttribute("csp");
};


org.apache.royale.html.elements.Iframe.prototype.set__csp = function(value) {
  this.setAttribute("csp", value);
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
org.apache.royale.html.elements.Iframe.prototype.importance;


org.apache.royale.html.elements.Iframe.prototype.get__importance = function() {
  return this.getAttribute("importance");
};


org.apache.royale.html.elements.Iframe.prototype.set__importance = function(value) {
  this.setAttribute("importance", value);
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
org.apache.royale.html.elements.Iframe.prototype.loading;


org.apache.royale.html.elements.Iframe.prototype.get__loading = function() {
  return this.getAttribute("loading");
};


org.apache.royale.html.elements.Iframe.prototype.set__loading = function(value) {
  this.setAttribute("loading", value);
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
org.apache.royale.html.elements.Iframe.prototype.name;


org.apache.royale.html.elements.Iframe.prototype.get__name = function() {
  return this.org_apache_royale_html_elements_Iframe_iframe.name;
};


org.apache.royale.html.elements.Iframe.prototype.set__name = function(value) {
  this.org_apache_royale_html_elements_Iframe_iframe.name = value;
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
org.apache.royale.html.elements.Iframe.prototype.referrerpolicy;


org.apache.royale.html.elements.Iframe.prototype.get__referrerpolicy = function() {
  return this.getAttribute("referrerpolicy");
};


org.apache.royale.html.elements.Iframe.prototype.set__referrerpolicy = function(value) {
  this.setAttribute("referrerpolicy", value);
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
org.apache.royale.html.elements.Iframe.prototype.sandbox;


org.apache.royale.html.elements.Iframe.prototype.get__sandbox = function() {
  
  return this.org_apache_royale_html_elements_Iframe_iframe.sandbox;
};


org.apache.royale.html.elements.Iframe.prototype.set__sandbox = function(value) {
  
  this.org_apache_royale_html_elements_Iframe_iframe.sandbox = value;
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
org.apache.royale.html.elements.Iframe.prototype.src;


org.apache.royale.html.elements.Iframe.prototype.get__src = function() {
  
  return this.org_apache_royale_html_elements_Iframe_iframe.src;
};


org.apache.royale.html.elements.Iframe.prototype.set__src = function(value) {
  
  this.org_apache_royale_html_elements_Iframe_iframe.src = value;
};


/**
 * @nocollapse
 * @export
 * @type {Window}
 */
org.apache.royale.html.elements.Iframe.prototype.contentWindow;


org.apache.royale.html.elements.Iframe.prototype.get__contentWindow = function() {
  return this.element.contentWindow;
};


/**
 * @type {HTMLIFrameElement}
 */
org.apache.royale.html.elements.Iframe.prototype.org_apache_royale_html_elements_Iframe_iframe;


org.apache.royale.html.elements.Iframe.prototype.get__org_apache_royale_html_elements_Iframe_iframe = function() {
  return this.element;
};


Object.defineProperties(org.apache.royale.html.elements.Iframe.prototype, /** @lends {org.apache.royale.html.elements.Iframe.prototype} */ {
/**
 * @type {string}
 */
allow: {
get: org.apache.royale.html.elements.Iframe.prototype.get__allow,
set: org.apache.royale.html.elements.Iframe.prototype.set__allow},
/**
 * @type {string}
 */
csp: {
get: org.apache.royale.html.elements.Iframe.prototype.get__csp,
set: org.apache.royale.html.elements.Iframe.prototype.set__csp},
/**
 * @type {string}
 */
importance: {
get: org.apache.royale.html.elements.Iframe.prototype.get__importance,
set: org.apache.royale.html.elements.Iframe.prototype.set__importance},
/**
 * @type {string}
 */
loading: {
get: org.apache.royale.html.elements.Iframe.prototype.get__loading,
set: org.apache.royale.html.elements.Iframe.prototype.set__loading},
/**
 * @type {string}
 */
name: {
get: org.apache.royale.html.elements.Iframe.prototype.get__name,
set: org.apache.royale.html.elements.Iframe.prototype.set__name},
/**
 * @type {string}
 */
referrerpolicy: {
get: org.apache.royale.html.elements.Iframe.prototype.get__referrerpolicy,
set: org.apache.royale.html.elements.Iframe.prototype.set__referrerpolicy},
/**
 * @type {string}
 */
sandbox: {
get: org.apache.royale.html.elements.Iframe.prototype.get__sandbox,
set: org.apache.royale.html.elements.Iframe.prototype.set__sandbox},
/**
 * @type {string}
 */
src: {
get: org.apache.royale.html.elements.Iframe.prototype.get__src,
set: org.apache.royale.html.elements.Iframe.prototype.set__src},
/**
 * @type {Window}
 */
contentWindow: {
get: org.apache.royale.html.elements.Iframe.prototype.get__contentWindow},
/**
 * @type {HTMLIFrameElement}
 */
org_apache_royale_html_elements_Iframe_iframe: {
get: org.apache.royale.html.elements.Iframe.prototype.get__org_apache_royale_html_elements_Iframe_iframe}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.html.elements.Iframe.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'Iframe', qName: 'org.apache.royale.html.elements.Iframe', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.html.elements.Iframe.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'allow': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.royale.html.elements.Iframe'},
        'csp': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.royale.html.elements.Iframe'},
        'importance': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.royale.html.elements.Iframe'},
        'loading': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.royale.html.elements.Iframe'},
        'name': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.royale.html.elements.Iframe'},
        'referrerpolicy': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.royale.html.elements.Iframe'},
        'sandbox': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.royale.html.elements.Iframe'},
        'src': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.royale.html.elements.Iframe'},
        'contentWindow': { type: 'Window', access: 'readonly', declaredBy: 'org.apache.royale.html.elements.Iframe'}
      };
    },
    methods: function () {
      return {
        'Iframe': { type: '', declaredBy: 'org.apache.royale.html.elements.Iframe'},
        'postMessage': { type: 'void', declaredBy: 'org.apache.royale.html.elements.Iframe', parameters: function () { return [ 'Object', false ,'String', false ,'Object', true ]; }},
        'addMessageListener': { type: 'void', declaredBy: 'org.apache.royale.html.elements.Iframe', parameters: function () { return [ 'Function', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.html.elements.Iframe.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./Iframe.js.map
