/**
 * Generated by Apache Royale Compiler from org/apache/royale/html5/MediaElement.as
 * org.apache.royale.html5.MediaElement
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.html5.MediaElement');
/* Royale Dependency List: org.apache.royale.utils.Language*/

goog.require('org.apache.royale.core.StyledUIBase');



/**
 * @constructor
 * @extends {org.apache.royale.core.StyledUIBase}
 */
org.apache.royale.html5.MediaElement = function() {
  org.apache.royale.html5.MediaElement.base(this, 'constructor');
};
goog.inherits(org.apache.royale.html5.MediaElement, org.apache.royale.core.StyledUIBase);


/**
 * @nocollapse
 * @const
 * @type {number}
 */
org.apache.royale.html5.MediaElement.NETWORK_EMPTY = 0;


/**
 * @nocollapse
 * @const
 * @type {number}
 */
org.apache.royale.html5.MediaElement.NETWORK_IDLE = 1;


/**
 * @nocollapse
 * @const
 * @type {number}
 */
org.apache.royale.html5.MediaElement.NETWORK_LOADING = 2;


/**
 * @nocollapse
 * @const
 * @type {number}
 */
org.apache.royale.html5.MediaElement.NETWORK_NO_SOURCE = 3;


/**
 *  reports how likely it is that the current browser will be able
 *  to play media of a given MIME type
 *
 *  Return value :
 * 	A string indicating how likely it is that the media can be played.
 * 
 *  The string will be one of the following values:
 * 
 *  probably
 *  Media of the type indicated by the mediaType parameter is probably
 *  playable on this device.
 * 
 *  maybe
 *  Not enough information is available to determine for sure whether or not
 *  the media will play until playback is actually attempted.
 * 
 *  "" (empty string)
 *  Media of the given type definitely can't be played on the current device.
 * 
 *  @langversion 3.0
 *  @playerversion Flash 0.0
 *  @playerversion AIR 0.0
 *  @productversion Royale 0.0
 * @param {string} mediaType
 * @return {string}
 */
org.apache.royale.html5.MediaElement.prototype.canPlayType = function(mediaType) {
  return org.apache.royale.utils.Language.as(this.element, HTMLMediaElement).canPlayType(mediaType);
  
};


/**
 *  resets the media element to its initial state and begins the process
 *  of selecting a media source and loading the media in preparation for
 *  playback to begin at the beginning.  
 *
 *  @langversion 3.0
 *  @playerversion Flash 0.0
 *  @playerversion AIR 0.0
 *  @productversion Royale 0.0
 */
org.apache.royale.html5.MediaElement.prototype.load = function() {
  org.apache.royale.utils.Language.as(this.element, HTMLMediaElement).load();
};


/**
 *  pause playback of the media, if the media is already in a paused state this method will have no effect. 
 *
 *  @langversion 3.0
 *  @playerversion Flash 0.0
 *  @playerversion AIR 0.0
 *  @productversion Royale 0.0
 */
org.apache.royale.html5.MediaElement.prototype.pause = function() {
  org.apache.royale.utils.Language.as(this.element, HTMLMediaElement).pause();
};


/**
 *  attempts to begin playback of the media. May be block by browser policy if not called in a user gesture event
 *
 *  @langversion 3.0
 *  @playerversion Flash 0.0
 *  @playerversion AIR 0.0
 *  @productversion Royale 0.0
 */
org.apache.royale.html5.MediaElement.prototype.play = function() {
  org.apache.royale.utils.Language.as(this.element, HTMLMediaElement).play();
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
org.apache.royale.html5.MediaElement.prototype.autoplay;


org.apache.royale.html5.MediaElement.prototype.get__autoplay = function() {
  return org.apache.royale.utils.Language.as(this.element, HTMLMediaElement).autoplay;
  
};


org.apache.royale.html5.MediaElement.prototype.set__autoplay = function(value) {
  org.apache.royale.utils.Language.as(this.element, HTMLMediaElement).autoplay = value;
};


/**
 * @nocollapse
 * @export
 * @type {TimeRanges}
 */
org.apache.royale.html5.MediaElement.prototype.buffered;


org.apache.royale.html5.MediaElement.prototype.get__buffered = function() {
  return org.apache.royale.utils.Language.as(this.element, HTMLMediaElement).buffered;
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
org.apache.royale.html5.MediaElement.prototype.controls;


org.apache.royale.html5.MediaElement.prototype.get__controls = function() {
  return org.apache.royale.utils.Language.as(this.element, HTMLMediaElement).controls;
  
};


org.apache.royale.html5.MediaElement.prototype.set__controls = function(value) {
  org.apache.royale.utils.Language.as(this.element, HTMLMediaElement).controls = value;
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
org.apache.royale.html5.MediaElement.prototype.currentSrc;


org.apache.royale.html5.MediaElement.prototype.get__currentSrc = function() {
  return org.apache.royale.utils.Language.as(this.element, HTMLMediaElement).currentSrc;
  
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
org.apache.royale.html5.MediaElement.prototype.currentTime;


org.apache.royale.html5.MediaElement.prototype.get__currentTime = function() {
  return org.apache.royale.utils.Language.as(this.element, HTMLMediaElement).currentTime;
  
};


org.apache.royale.html5.MediaElement.prototype.set__currentTime = function(value) {
  org.apache.royale.utils.Language.as(this.element, HTMLMediaElement).currentTime = value;
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
org.apache.royale.html5.MediaElement.prototype.defaultPlaybackRate;


org.apache.royale.html5.MediaElement.prototype.get__defaultPlaybackRate = function() {
  return org.apache.royale.utils.Language.as(this.element, HTMLMediaElement).defaultPlaybackRate;
  
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
org.apache.royale.html5.MediaElement.prototype.duration;


org.apache.royale.html5.MediaElement.prototype.get__duration = function() {
  return org.apache.royale.utils.Language.as(this.element, HTMLMediaElement).duration;
  
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
org.apache.royale.html5.MediaElement.prototype.ended;


org.apache.royale.html5.MediaElement.prototype.get__ended = function() {
  return org.apache.royale.utils.Language.as(this.element, HTMLMediaElement).ended;
  
};


/**
 * @nocollapse
 * @export
 * @type {MediaError}
 */
org.apache.royale.html5.MediaElement.prototype.error;


org.apache.royale.html5.MediaElement.prototype.get__error = function() {
  return org.apache.royale.utils.Language.as(this.element, HTMLMediaElement).error;
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
org.apache.royale.html5.MediaElement.prototype.loop;


org.apache.royale.html5.MediaElement.prototype.get__loop = function() {
  return org.apache.royale.utils.Language.as(this.element, HTMLMediaElement).loop;
  
};


org.apache.royale.html5.MediaElement.prototype.set__loop = function(value) {
  org.apache.royale.utils.Language.as(this.element, HTMLMediaElement).loop = value;
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
org.apache.royale.html5.MediaElement.prototype.muted;


org.apache.royale.html5.MediaElement.prototype.get__muted = function() {
  return org.apache.royale.utils.Language.as(this.element, HTMLMediaElement).muted;
  
};


org.apache.royale.html5.MediaElement.prototype.set__muted = function(value) {
  org.apache.royale.utils.Language.as(this.element, HTMLMediaElement).muted = value;
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
org.apache.royale.html5.MediaElement.prototype.networkState;


org.apache.royale.html5.MediaElement.prototype.get__networkState = function() {
  return (org.apache.royale.utils.Language.as(this.element, HTMLMediaElement).networkState) >>> 0;
  
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
org.apache.royale.html5.MediaElement.prototype.paused;


org.apache.royale.html5.MediaElement.prototype.get__paused = function() {
  return org.apache.royale.utils.Language.as(this.element, HTMLMediaElement).paused;
  
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
org.apache.royale.html5.MediaElement.prototype.playbackRate;


org.apache.royale.html5.MediaElement.prototype.get__playbackRate = function() {
  return org.apache.royale.utils.Language.as(this.element, HTMLMediaElement).playbackRate;
  
};


org.apache.royale.html5.MediaElement.prototype.set__playbackRate = function(value) {
  org.apache.royale.utils.Language.as(this.element, HTMLMediaElement).playbackRate = value;
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
org.apache.royale.html5.MediaElement.prototype.readyState;


org.apache.royale.html5.MediaElement.prototype.get__readyState = function() {
  return (org.apache.royale.utils.Language.as(this.element, HTMLMediaElement).readyState) >>> 0;
  
};


/**
 * @nocollapse
 * @export
 * @type {TimeRanges}
 */
org.apache.royale.html5.MediaElement.prototype.seekable;


org.apache.royale.html5.MediaElement.prototype.get__seekable = function() {
  return org.apache.royale.utils.Language.as(this.element, HTMLMediaElement).seekable;
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
org.apache.royale.html5.MediaElement.prototype.sinkId;


org.apache.royale.html5.MediaElement.prototype.get__sinkId = function() {
  return org.apache.royale.utils.Language.as(this.element, HTMLMediaElement).sinkId;
  
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
org.apache.royale.html5.MediaElement.prototype.src;


org.apache.royale.html5.MediaElement.prototype.get__src = function() {
  return org.apache.royale.utils.Language.as(this.element, HTMLMediaElement).src;
  
};


org.apache.royale.html5.MediaElement.prototype.set__src = function(value) {
  org.apache.royale.utils.Language.as(this.element, HTMLMediaElement).src = value;
};


/**
 * @nocollapse
 * @export
 * @type {TextTrackList}
 */
org.apache.royale.html5.MediaElement.prototype.textTracks;


org.apache.royale.html5.MediaElement.prototype.get__textTracks = function() {
  return org.apache.royale.utils.Language.as(this.element, HTMLMediaElement).textTracks;
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
org.apache.royale.html5.MediaElement.prototype.volume;


org.apache.royale.html5.MediaElement.prototype.get__volume = function() {
  return org.apache.royale.utils.Language.as(this.element, HTMLMediaElement).volume;
  
};


org.apache.royale.html5.MediaElement.prototype.set__volume = function(value) {
  org.apache.royale.utils.Language.as(this.element, HTMLMediaElement).volume = value;
};


Object.defineProperties(org.apache.royale.html5.MediaElement.prototype, /** @lends {org.apache.royale.html5.MediaElement.prototype} */ {
/**
 * @type {boolean}
 */
autoplay: {
get: org.apache.royale.html5.MediaElement.prototype.get__autoplay,
set: org.apache.royale.html5.MediaElement.prototype.set__autoplay},
/**
 * @type {TimeRanges}
 */
buffered: {
get: org.apache.royale.html5.MediaElement.prototype.get__buffered},
/**
 * @type {boolean}
 */
controls: {
get: org.apache.royale.html5.MediaElement.prototype.get__controls,
set: org.apache.royale.html5.MediaElement.prototype.set__controls},
/**
 * @type {string}
 */
currentSrc: {
get: org.apache.royale.html5.MediaElement.prototype.get__currentSrc},
/**
 * @type {number}
 */
currentTime: {
get: org.apache.royale.html5.MediaElement.prototype.get__currentTime,
set: org.apache.royale.html5.MediaElement.prototype.set__currentTime},
/**
 * @type {number}
 */
defaultPlaybackRate: {
get: org.apache.royale.html5.MediaElement.prototype.get__defaultPlaybackRate},
/**
 * @type {number}
 */
duration: {
get: org.apache.royale.html5.MediaElement.prototype.get__duration},
/**
 * @type {boolean}
 */
ended: {
get: org.apache.royale.html5.MediaElement.prototype.get__ended},
/**
 * @type {MediaError}
 */
error: {
get: org.apache.royale.html5.MediaElement.prototype.get__error},
/**
 * @type {boolean}
 */
loop: {
get: org.apache.royale.html5.MediaElement.prototype.get__loop,
set: org.apache.royale.html5.MediaElement.prototype.set__loop},
/**
 * @type {boolean}
 */
muted: {
get: org.apache.royale.html5.MediaElement.prototype.get__muted,
set: org.apache.royale.html5.MediaElement.prototype.set__muted},
/**
 * @type {number}
 */
networkState: {
get: org.apache.royale.html5.MediaElement.prototype.get__networkState},
/**
 * @type {boolean}
 */
paused: {
get: org.apache.royale.html5.MediaElement.prototype.get__paused},
/**
 * @type {number}
 */
playbackRate: {
get: org.apache.royale.html5.MediaElement.prototype.get__playbackRate,
set: org.apache.royale.html5.MediaElement.prototype.set__playbackRate},
/**
 * @type {number}
 */
readyState: {
get: org.apache.royale.html5.MediaElement.prototype.get__readyState},
/**
 * @type {TimeRanges}
 */
seekable: {
get: org.apache.royale.html5.MediaElement.prototype.get__seekable},
/**
 * @type {string}
 */
sinkId: {
get: org.apache.royale.html5.MediaElement.prototype.get__sinkId},
/**
 * @type {string}
 */
src: {
get: org.apache.royale.html5.MediaElement.prototype.get__src,
set: org.apache.royale.html5.MediaElement.prototype.set__src},
/**
 * @type {TextTrackList}
 */
textTracks: {
get: org.apache.royale.html5.MediaElement.prototype.get__textTracks},
/**
 * @type {number}
 */
volume: {
get: org.apache.royale.html5.MediaElement.prototype.get__volume,
set: org.apache.royale.html5.MediaElement.prototype.set__volume}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.html5.MediaElement.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'MediaElement', qName: 'org.apache.royale.html5.MediaElement', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.html5.MediaElement.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'autoplay': { type: 'Boolean', access: 'readwrite', declaredBy: 'org.apache.royale.html5.MediaElement'},
        'buffered': { type: 'TimeRanges', access: 'readonly', declaredBy: 'org.apache.royale.html5.MediaElement'},
        'controls': { type: 'Boolean', access: 'readwrite', declaredBy: 'org.apache.royale.html5.MediaElement'},
        'currentSrc': { type: 'String', access: 'readonly', declaredBy: 'org.apache.royale.html5.MediaElement'},
        'currentTime': { type: 'Number', access: 'readwrite', declaredBy: 'org.apache.royale.html5.MediaElement'},
        'defaultPlaybackRate': { type: 'Number', access: 'readonly', declaredBy: 'org.apache.royale.html5.MediaElement'},
        'duration': { type: 'Number', access: 'readonly', declaredBy: 'org.apache.royale.html5.MediaElement'},
        'ended': { type: 'Boolean', access: 'readonly', declaredBy: 'org.apache.royale.html5.MediaElement'},
        'error': { type: 'MediaError', access: 'readonly', declaredBy: 'org.apache.royale.html5.MediaElement'},
        'loop': { type: 'Boolean', access: 'readwrite', declaredBy: 'org.apache.royale.html5.MediaElement'},
        'muted': { type: 'Boolean', access: 'readwrite', declaredBy: 'org.apache.royale.html5.MediaElement'},
        'networkState': { type: 'uint', access: 'readonly', declaredBy: 'org.apache.royale.html5.MediaElement'},
        'paused': { type: 'Boolean', access: 'readonly', declaredBy: 'org.apache.royale.html5.MediaElement'},
        'playbackRate': { type: 'Number', access: 'readwrite', declaredBy: 'org.apache.royale.html5.MediaElement'},
        'readyState': { type: 'uint', access: 'readonly', declaredBy: 'org.apache.royale.html5.MediaElement'},
        'seekable': { type: 'TimeRanges', access: 'readonly', declaredBy: 'org.apache.royale.html5.MediaElement'},
        'sinkId': { type: 'String', access: 'readonly', declaredBy: 'org.apache.royale.html5.MediaElement'},
        'src': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.royale.html5.MediaElement'},
        'textTracks': { type: 'TextTrackList', access: 'readonly', declaredBy: 'org.apache.royale.html5.MediaElement'},
        'volume': { type: 'Number', access: 'readwrite', declaredBy: 'org.apache.royale.html5.MediaElement'}
      };
    },
    methods: function () {
      return {
        'MediaElement': { type: '', declaredBy: 'org.apache.royale.html5.MediaElement'},
        'canPlayType': { type: 'String', declaredBy: 'org.apache.royale.html5.MediaElement', parameters: function () { return [ 'String', false ]; }},
        'load': { type: 'void', declaredBy: 'org.apache.royale.html5.MediaElement'},
        'pause': { type: 'void', declaredBy: 'org.apache.royale.html5.MediaElement'},
        'play': { type: 'void', declaredBy: 'org.apache.royale.html5.MediaElement'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.html5.MediaElement.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./MediaElement.js.map
