/**
 * Generated by Apache Royale Compiler from org/apache/royale/text/engine/GroupElement.as
 * org.apache.royale.text.engine.GroupElement
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.text.engine.GroupElement');
/* Royale Dependency List: org.apache.royale.events.EventDispatcher,org.apache.royale.text.engine.ElementFormat,org.apache.royale.text.engine.TextElement,org.apache.royale.utils.Language*/

goog.require('org.apache.royale.text.engine.ContentElement');



/**
 * @constructor
 * @extends {org.apache.royale.text.engine.ContentElement}
 * @param {Array.<ContentElement>=} elements
 * @param {org.apache.royale.text.engine.ElementFormat=} elementFormat
 * @param {org.apache.royale.events.EventDispatcher=} eventMirror
 * @param {string=} textRotation
 */
org.apache.royale.text.engine.GroupElement = function(elements, elementFormat, eventMirror, textRotation) {
  elements = typeof elements !== 'undefined' ? elements : null;
  elementFormat = typeof elementFormat !== 'undefined' ? elementFormat : null;
  eventMirror = typeof eventMirror !== 'undefined' ? eventMirror : null;
  textRotation = typeof textRotation !== 'undefined' ? textRotation : "rotate0";
  org.apache.royale.text.engine.GroupElement.base(this, 'constructor', elementFormat, eventMirror, textRotation);
  if (elements) {
    this.org_apache_royale_text_engine_GroupElement__elements = elements;
    this.org_apache_royale_text_engine_GroupElement_setElementsGroup(this);
  }
  else
    this.org_apache_royale_text_engine_GroupElement__elements = new (org.apache.royale.utils.Language.synthVector('org.apache.royale.text.engine.ContentElement'))();
};
goog.inherits(org.apache.royale.text.engine.GroupElement, org.apache.royale.text.engine.ContentElement);


/**
 * @private
 * @type {Array.<org.apache.royale.text.engine.ContentElement>}
 */
org.apache.royale.text.engine.GroupElement.prototype.org_apache_royale_text_engine_GroupElement__elements;


/**
 * @param {number} index
 * @return {org.apache.royale.text.engine.ContentElement}
 */
org.apache.royale.text.engine.GroupElement.prototype.getElementAt = function(index) {
  return this.org_apache_royale_text_engine_GroupElement__elements[index];
};


/**
 * @param {number} charIndex
 * @return {org.apache.royale.text.engine.ContentElement}
 */
org.apache.royale.text.engine.GroupElement.prototype.getElementAtCharIndex = function(charIndex) {
  var /** @type {number} */ curIdx = 0;
  var /** @type {number} */ len = this.elementCount;
  for (var /** @type {number} */ i = 0; i < len; i++) {
    curIdx += (this.org_apache_royale_text_engine_GroupElement__elements[i].rawText.length) >> 0;
    if (curIdx > charIndex)
      return this.org_apache_royale_text_engine_GroupElement__elements[i];
  }
  return null;
};


/**
 * @param {org.apache.royale.text.engine.ContentElement} element
 * @return {number}
 */
org.apache.royale.text.engine.GroupElement.prototype.getElementIndex = function(element) {
  return this.org_apache_royale_text_engine_GroupElement__elements.indexOf(element);
};


/**
 * @param {number} beginIndex
 * @param {number} endIndex
 * @return {org.apache.royale.text.engine.GroupElement}
 */
org.apache.royale.text.engine.GroupElement.prototype.groupElements = function(beginIndex, endIndex) {
  return null;
};


/**
 * @param {number} beginIndex
 * @param {number} endIndex
 * @return {org.apache.royale.text.engine.TextElement}
 */
org.apache.royale.text.engine.GroupElement.prototype.mergeTextElements = function(beginIndex, endIndex) {
  return null;
};


/**
 * @param {number} beginIndex
 * @param {number} endIndex
 * @param {Array.<ContentElement>} newElements
 * @return {Array.<ContentElement>}
 */
org.apache.royale.text.engine.GroupElement.prototype.replaceElements = function(beginIndex, endIndex, newElements) {
  this.org_apache_royale_text_engine_GroupElement_setElementsGroup(null);
  
  var /** @type {Array} */ args = [beginIndex, endIndex - beginIndex];
  if (newElements)
    args = args.concat(newElements);
  this.org_apache_royale_text_engine_GroupElement__elements.splice.apply(this.org_apache_royale_text_engine_GroupElement__elements, args);
  this.org_apache_royale_text_engine_GroupElement_setElementsGroup(this);
  return this.org_apache_royale_text_engine_GroupElement__elements;
};


/**
 * @param {Array.<ContentElement>} value
 */
org.apache.royale.text.engine.GroupElement.prototype.setElements = function(value) {
  this.org_apache_royale_text_engine_GroupElement__elements = value;
  this.org_apache_royale_text_engine_GroupElement_setElementsGroup(this);
};


/**
 * @private
 * @param {org.apache.royale.text.engine.GroupElement} group
 */
org.apache.royale.text.engine.GroupElement.prototype.org_apache_royale_text_engine_GroupElement_setElementsGroup = function(group) {
  for (var /** @type {number} */ i = 0; i < this.org_apache_royale_text_engine_GroupElement__elements.length; i++)
    this.org_apache_royale_text_engine_GroupElement__elements[i].groupElement = group;
};


/**
 * @param {number} elementIndex
 * @param {number} splitIndex
 * @return {org.apache.royale.text.engine.TextElement}
 */
org.apache.royale.text.engine.GroupElement.prototype.splitTextElement = function(elementIndex, splitIndex) {
  var /** @type {org.apache.royale.text.engine.ContentElement} */ elem = this.org_apache_royale_text_engine_GroupElement__elements[elementIndex];
  if (org.apache.royale.utils.Language.is(!elem, org.apache.royale.text.engine.TextElement))
    throw new Error("Specified element is not a TextElement");
  var /** @type {org.apache.royale.text.engine.TextElement} */ textElem = org.apache.royale.utils.Language.as(elem, org.apache.royale.text.engine.TextElement);
  if (splitIndex >= textElem.rawText.length)
    throw new Error("Split index is out of range");
  var /** @type {string} */ firstText = textElem.rawText.substr(0, splitIndex);
  var /** @type {string} */ nextText = textElem.rawText.substr(splitIndex);
  var /** @type {org.apache.royale.text.engine.TextElement} */ newElem = new org.apache.royale.text.engine.TextElement(nextText, textElem.elementFormat, textElem.eventMirror, textElem.textRotation);
  textElem.text = firstText;
  newElem.groupElement = this;
  this.org_apache_royale_text_engine_GroupElement__elements.splice((elementIndex + 1) >> 0, 0, newElem);
  return newElem;
};


/**
 * @param {number} groupIndex
 */
org.apache.royale.text.engine.GroupElement.prototype.ungroupElements = function(groupIndex) {
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
org.apache.royale.text.engine.GroupElement.prototype.elementCount;


org.apache.royale.text.engine.GroupElement.prototype.get__elementCount = function() {
  return (this.org_apache_royale_text_engine_GroupElement__elements.length) >> 0;
};


org.apache.royale.text.engine.GroupElement.prototype.get__rawText = function() {
  var /** @type {string} */ val = "";
  var /** @type {number} */ len = this.elementCount;
  for (var /** @type {number} */ i = 0; i < len; i++) {
    val += this.org_apache_royale_text_engine_GroupElement__elements[i].rawText;
  }
  return val;
};


Object.defineProperties(org.apache.royale.text.engine.GroupElement.prototype, /** @lends {org.apache.royale.text.engine.GroupElement.prototype} */ {
/**
 * @type {number}
 */
elementCount: {
get: org.apache.royale.text.engine.GroupElement.prototype.get__elementCount},
/**
 * @type {string}
 */
rawText: {
get: org.apache.royale.text.engine.GroupElement.prototype.get__rawText}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.text.engine.GroupElement.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'GroupElement', qName: 'org.apache.royale.text.engine.GroupElement', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.text.engine.GroupElement.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'elementCount': { type: 'int', access: 'readonly', declaredBy: 'org.apache.royale.text.engine.GroupElement'},
        'rawText': { type: 'String', access: 'readonly', declaredBy: 'org.apache.royale.text.engine.GroupElement'}
      };
    },
    methods: function () {
      return {
        'GroupElement': { type: '', declaredBy: 'org.apache.royale.text.engine.GroupElement', parameters: function () { return [ 'Vector.<org.apache.royale.text.engine.ContentElement>', true ,'org.apache.royale.text.engine.ElementFormat', true ,'org.apache.royale.events.EventDispatcher', true ,'String', true ]; }},
        'getElementAt': { type: 'org.apache.royale.text.engine.ContentElement', declaredBy: 'org.apache.royale.text.engine.GroupElement', parameters: function () { return [ 'int', false ]; }},
        'getElementAtCharIndex': { type: 'org.apache.royale.text.engine.ContentElement', declaredBy: 'org.apache.royale.text.engine.GroupElement', parameters: function () { return [ 'int', false ]; }},
        'getElementIndex': { type: 'int', declaredBy: 'org.apache.royale.text.engine.GroupElement', parameters: function () { return [ 'org.apache.royale.text.engine.ContentElement', false ]; }},
        'groupElements': { type: 'org.apache.royale.text.engine.GroupElement', declaredBy: 'org.apache.royale.text.engine.GroupElement', parameters: function () { return [ 'int', false ,'int', false ]; }},
        'mergeTextElements': { type: 'org.apache.royale.text.engine.TextElement', declaredBy: 'org.apache.royale.text.engine.GroupElement', parameters: function () { return [ 'int', false ,'int', false ]; }},
        'replaceElements': { type: 'Vector.<org.apache.royale.text.engine.ContentElement>', declaredBy: 'org.apache.royale.text.engine.GroupElement', parameters: function () { return [ 'int', false ,'int', false ,'Vector.<org.apache.royale.text.engine.ContentElement>', false ]; }},
        'setElements': { type: 'void', declaredBy: 'org.apache.royale.text.engine.GroupElement', parameters: function () { return [ 'Vector.<org.apache.royale.text.engine.ContentElement>', false ]; }},
        'splitTextElement': { type: 'org.apache.royale.text.engine.TextElement', declaredBy: 'org.apache.royale.text.engine.GroupElement', parameters: function () { return [ 'int', false ,'int', false ]; }},
        'ungroupElements': { type: 'void', declaredBy: 'org.apache.royale.text.engine.GroupElement', parameters: function () { return [ 'int', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.text.engine.GroupElement.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./GroupElement.js.map
