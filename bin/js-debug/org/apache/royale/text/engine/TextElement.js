/**
 * Generated by Apache Royale Compiler from org/apache/royale/text/engine/TextElement.as
 * org.apache.royale.text.engine.TextElement
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.text.engine.TextElement');
/* Royale Dependency List: org.apache.royale.events.EventDispatcher,org.apache.royale.text.engine.ElementFormat*/

goog.require('org.apache.royale.text.engine.ContentElement');



/**
 * @constructor
 * @extends {org.apache.royale.text.engine.ContentElement}
 * @param {string=} text
 * @param {org.apache.royale.text.engine.ElementFormat=} elementFormat
 * @param {org.apache.royale.events.EventDispatcher=} eventMirror
 * @param {string=} textRotation
 */
org.apache.royale.text.engine.TextElement = function(text, elementFormat, eventMirror, textRotation) {
  text = typeof text !== 'undefined' ? text : null;
  elementFormat = typeof elementFormat !== 'undefined' ? elementFormat : null;
  eventMirror = typeof eventMirror !== 'undefined' ? eventMirror : null;
  textRotation = typeof textRotation !== 'undefined' ? textRotation : "rotate0";
  this.text = text;
  org.apache.royale.text.engine.TextElement.base(this, 'constructor', elementFormat, eventMirror, textRotation);
};
goog.inherits(org.apache.royale.text.engine.TextElement, org.apache.royale.text.engine.ContentElement);


/**
 * @private
 * @type {string}
 */
org.apache.royale.text.engine.TextElement.prototype.org_apache_royale_text_engine_TextElement__text;


/**
 * @private
 */
org.apache.royale.text.engine.TextElement.prototype.org_apache_royale_text_engine_TextElement_resetGlyphs = function() {
  if (this.glyphs)
    this.glyphs = null;
  this.lastComposed = -1;
};


/**
 * @private
 */
org.apache.royale.text.engine.TextElement.prototype.org_apache_royale_text_engine_TextElement_resetText = function() {
  if (this.words)
    this.words = null;
};


/**
 * @param {number} beginIndex
 * @param {number} endIndex
 * @param {string} newText
 */
org.apache.royale.text.engine.TextElement.prototype.replaceText = function(beginIndex, endIndex, newText) {
  if (this.org_apache_royale_text_engine_TextElement__text == null)
    this.org_apache_royale_text_engine_TextElement__text = newText; else {
    var /** @type {string} */ b = this.org_apache_royale_text_engine_TextElement__text.substring(0, beginIndex);
    var /** @type {string} */ e = this.org_apache_royale_text_engine_TextElement__text.substring(endIndex);
    this.org_apache_royale_text_engine_TextElement__text = b + newText + e;
  }
  this.org_apache_royale_text_engine_TextElement_resetGlyphs();
  this.org_apache_royale_text_engine_TextElement_resetText();
};


/**
 * @type {Array}
 */
org.apache.royale.text.engine.TextElement.prototype.glyphs;


/**
 * @type {number}
 */
org.apache.royale.text.engine.TextElement.prototype.lastComposed = -1;


/**
 * @type {Array}
 */
org.apache.royale.text.engine.TextElement.prototype.words;


/**
 * @type {Array}
 */
org.apache.royale.text.engine.TextElement.prototype.wordWidths;


org.apache.royale.text.engine.TextElement.prototype.get__text = function() {
  return this.org_apache_royale_text_engine_TextElement__text;
};


org.apache.royale.text.engine.TextElement.prototype.set__text = function(value) {
  this.org_apache_royale_text_engine_TextElement__text = value;
  this.org_apache_royale_text_engine_TextElement_resetGlyphs();
  this.org_apache_royale_text_engine_TextElement_resetText();
};


org.apache.royale.text.engine.TextElement.prototype.get__rawText = function() {
  return this.org_apache_royale_text_engine_TextElement__text;
};


org.apache.royale.text.engine.TextElement.prototype.set__elementFormat = function(value) {
  org.apache.royale.text.engine.TextElement.superClass_.set__elementFormat.apply(this, [value]);
  this.org_apache_royale_text_engine_TextElement_resetGlyphs();
  this.org_apache_royale_text_engine_TextElement_resetText();
};


Object.defineProperties(org.apache.royale.text.engine.TextElement.prototype, /** @lends {org.apache.royale.text.engine.TextElement.prototype} */ {
/**
 * @type {string}
 */
text: {
get: org.apache.royale.text.engine.TextElement.prototype.get__text,
set: org.apache.royale.text.engine.TextElement.prototype.set__text},
/**
 * @type {string}
 */
rawText: {
get: org.apache.royale.text.engine.TextElement.prototype.get__rawText},
/**
 * @type {org.apache.royale.text.engine.ElementFormat}
 */
elementFormat: {
get: org.apache.royale.text.engine.ContentElement.prototype.get__elementFormat,
set: org.apache.royale.text.engine.TextElement.prototype.set__elementFormat}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.text.engine.TextElement.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'TextElement', qName: 'org.apache.royale.text.engine.TextElement', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.text.engine.TextElement.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'glyphs': { type: 'Array', get_set: function (/** org.apache.royale.text.engine.TextElement */ inst, /** * */ v) {return v !== undefined ? inst.glyphs = v : inst.glyphs;}},
        'lastComposed': { type: 'int', get_set: function (/** org.apache.royale.text.engine.TextElement */ inst, /** * */ v) {return v !== undefined ? inst.lastComposed = v : inst.lastComposed;}},
        'words': { type: 'Array', get_set: function (/** org.apache.royale.text.engine.TextElement */ inst, /** * */ v) {return v !== undefined ? inst.words = v : inst.words;}},
        'wordWidths': { type: 'Array', get_set: function (/** org.apache.royale.text.engine.TextElement */ inst, /** * */ v) {return v !== undefined ? inst.wordWidths = v : inst.wordWidths;}}
      };
    },
    accessors: function () {
      return {
        'text': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.royale.text.engine.TextElement'},
        'rawText': { type: 'String', access: 'readonly', declaredBy: 'org.apache.royale.text.engine.TextElement'},
        'elementFormat': { type: 'org.apache.royale.text.engine.ElementFormat', access: 'writeonly', declaredBy: 'org.apache.royale.text.engine.TextElement'}
      };
    },
    methods: function () {
      return {
        'TextElement': { type: '', declaredBy: 'org.apache.royale.text.engine.TextElement', parameters: function () { return [ 'String', true ,'org.apache.royale.text.engine.ElementFormat', true ,'org.apache.royale.events.EventDispatcher', true ,'String', true ]; }},
        'replaceText': { type: 'void', declaredBy: 'org.apache.royale.text.engine.TextElement', parameters: function () { return [ 'int', false ,'int', false ,'String', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.text.engine.TextElement.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./TextElement.js.map
