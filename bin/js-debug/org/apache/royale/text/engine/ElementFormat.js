/**
 * Generated by Apache Royale Compiler from org/apache/royale/text/engine/ElementFormat.as
 * org.apache.royale.text.engine.ElementFormat
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.text.engine.ElementFormat');
/* Royale Dependency List: org.apache.royale.debugging.assert,org.apache.royale.geom.Rectangle,org.apache.royale.text.engine.FontDescription,org.apache.royale.text.engine.FontMetrics*/




/**
 * @constructor
 */
org.apache.royale.text.engine.ElementFormat = function() {
};


/**
 * @type {string}
 */
org.apache.royale.text.engine.ElementFormat.prototype.alignmentBaseline = "useDominantBaseline";


/**
 * @type {number}
 */
org.apache.royale.text.engine.ElementFormat.prototype.alpha = 1;


/**
 * @type {number}
 */
org.apache.royale.text.engine.ElementFormat.prototype.baselineShift = 0;


/**
 * @type {string}
 */
org.apache.royale.text.engine.ElementFormat.prototype.breakOpportunity = "auto";


/**
 * @type {number}
 */
org.apache.royale.text.engine.ElementFormat.prototype.color = 0;


/**
 * @type {number}
 */
org.apache.royale.text.engine.ElementFormat.prototype.strokeColor = 0;


/**
 * @type {number}
 */
org.apache.royale.text.engine.ElementFormat.prototype.strokeWeight = 0;


/**
 * @type {number}
 */
org.apache.royale.text.engine.ElementFormat.prototype.strokeAlpha = 1;


/**
 * @type {string}
 */
org.apache.royale.text.engine.ElementFormat.prototype.digitCase = "default";


/**
 * @type {string}
 */
org.apache.royale.text.engine.ElementFormat.prototype.digitWidth = "default";


/**
 * @type {string}
 */
org.apache.royale.text.engine.ElementFormat.prototype.dominantBaseline = "roman";


/**
 * @type {org.apache.royale.text.engine.FontDescription}
 */
org.apache.royale.text.engine.ElementFormat.prototype.fontDescription;


/**
 * @type {number}
 */
org.apache.royale.text.engine.ElementFormat.prototype.fontSize = 12;


/**
 * @type {string}
 */
org.apache.royale.text.engine.ElementFormat.prototype.kerning = "on";


/**
 * @type {string}
 */
org.apache.royale.text.engine.ElementFormat.prototype.ligatureLevel = "common";


/**
 * @type {string}
 */
org.apache.royale.text.engine.ElementFormat.prototype.locale = "en";


/**
 * @type {boolean}
 */
org.apache.royale.text.engine.ElementFormat.prototype.locked;


/**
 * @type {string}
 */
org.apache.royale.text.engine.ElementFormat.prototype.textRotation = "auto";


/**
 * @type {number}
 */
org.apache.royale.text.engine.ElementFormat.prototype.trackingLeft = 0;


/**
 * @type {number}
 */
org.apache.royale.text.engine.ElementFormat.prototype.trackingRight = 0;


/**
 * @type {string}
 */
org.apache.royale.text.engine.ElementFormat.prototype.typographicCase = "default";


/**
 * @type {number}
 */
org.apache.royale.text.engine.ElementFormat.prototype.xScale = 1;


/**
 * @type {number}
 */
org.apache.royale.text.engine.ElementFormat.prototype.yScale = 1;


/**
 * @return {org.apache.royale.text.engine.ElementFormat}
 */
org.apache.royale.text.engine.ElementFormat.prototype.clone = function() {
  var /** @type {org.apache.royale.text.engine.ElementFormat} */ val = new org.apache.royale.text.engine.ElementFormat();
  val.alignmentBaseline = this.alignmentBaseline;
  val.alpha = this.alpha;
  val.baselineShift = this.baselineShift;
  val.breakOpportunity = this.breakOpportunity;
  val.color = this.color;
  val.strokeColor = this.strokeColor;
  val.strokeWeight = this.strokeWeight;
  val.strokeAlpha = this.strokeAlpha;
  val.digitCase = this.digitCase;
  val.digitWidth = this.digitWidth;
  val.dominantBaseline = this.dominantBaseline;
  val.fontDescription = this.fontDescription;
  val.fontSize = this.fontSize;
  val.kerning = this.kerning;
  val.ligatureLevel = this.ligatureLevel;
  val.locale = this.locale;
  val.locked = this.locked;
  val.textRotation = this.textRotation;
  val.trackingLeft = this.trackingLeft;
  val.trackingRight = this.trackingRight;
  val.typographicCase = this.typographicCase;
  val.xScale = this.xScale;
  val.yScale = this.yScale;
  return val;
};


/**
 * @return {org.apache.royale.text.engine.FontMetrics}
 */
org.apache.royale.text.engine.ElementFormat.prototype.getFontMetrics = function() {
  org.apache.royale.debugging.assert(this.fontDescription != null, "fontDescription not assigned!");
  if (this.fontDescription.fontLoader)
    return this.fontDescription.fontLoader.getFont(this.fontDescription.fontName, this.fontDescription.fontStyle).fontMetrics.clone(); else {
    var /** @type {org.apache.royale.text.engine.FontMetrics} */ fm = new org.apache.royale.text.engine.FontMetrics();
    fm.emBox = new org.apache.royale.geom.Rectangle(0, 1.2 - this.fontSize, this.fontSize, 1.2);
    return fm;
  }
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.text.engine.ElementFormat.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'ElementFormat', qName: 'org.apache.royale.text.engine.ElementFormat', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.text.engine.ElementFormat.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'alignmentBaseline': { type: 'String', get_set: function (/** org.apache.royale.text.engine.ElementFormat */ inst, /** * */ v) {return v !== undefined ? inst.alignmentBaseline = v : inst.alignmentBaseline;}},
        'alpha': { type: 'Number', get_set: function (/** org.apache.royale.text.engine.ElementFormat */ inst, /** * */ v) {return v !== undefined ? inst.alpha = v : inst.alpha;}},
        'baselineShift': { type: 'Number', get_set: function (/** org.apache.royale.text.engine.ElementFormat */ inst, /** * */ v) {return v !== undefined ? inst.baselineShift = v : inst.baselineShift;}},
        'breakOpportunity': { type: 'String', get_set: function (/** org.apache.royale.text.engine.ElementFormat */ inst, /** * */ v) {return v !== undefined ? inst.breakOpportunity = v : inst.breakOpportunity;}},
        'color': { type: 'uint', get_set: function (/** org.apache.royale.text.engine.ElementFormat */ inst, /** * */ v) {return v !== undefined ? inst.color = v : inst.color;}},
        'strokeColor': { type: 'uint', get_set: function (/** org.apache.royale.text.engine.ElementFormat */ inst, /** * */ v) {return v !== undefined ? inst.strokeColor = v : inst.strokeColor;}},
        'strokeWeight': { type: 'Number', get_set: function (/** org.apache.royale.text.engine.ElementFormat */ inst, /** * */ v) {return v !== undefined ? inst.strokeWeight = v : inst.strokeWeight;}},
        'strokeAlpha': { type: 'Number', get_set: function (/** org.apache.royale.text.engine.ElementFormat */ inst, /** * */ v) {return v !== undefined ? inst.strokeAlpha = v : inst.strokeAlpha;}},
        'digitCase': { type: 'String', get_set: function (/** org.apache.royale.text.engine.ElementFormat */ inst, /** * */ v) {return v !== undefined ? inst.digitCase = v : inst.digitCase;}},
        'digitWidth': { type: 'String', get_set: function (/** org.apache.royale.text.engine.ElementFormat */ inst, /** * */ v) {return v !== undefined ? inst.digitWidth = v : inst.digitWidth;}},
        'dominantBaseline': { type: 'String', get_set: function (/** org.apache.royale.text.engine.ElementFormat */ inst, /** * */ v) {return v !== undefined ? inst.dominantBaseline = v : inst.dominantBaseline;}},
        'fontDescription': { type: 'org.apache.royale.text.engine.FontDescription', get_set: function (/** org.apache.royale.text.engine.ElementFormat */ inst, /** * */ v) {return v !== undefined ? inst.fontDescription = v : inst.fontDescription;}},
        'fontSize': { type: 'Number', get_set: function (/** org.apache.royale.text.engine.ElementFormat */ inst, /** * */ v) {return v !== undefined ? inst.fontSize = v : inst.fontSize;}},
        'kerning': { type: 'String', get_set: function (/** org.apache.royale.text.engine.ElementFormat */ inst, /** * */ v) {return v !== undefined ? inst.kerning = v : inst.kerning;}},
        'ligatureLevel': { type: 'String', get_set: function (/** org.apache.royale.text.engine.ElementFormat */ inst, /** * */ v) {return v !== undefined ? inst.ligatureLevel = v : inst.ligatureLevel;}},
        'locale': { type: 'String', get_set: function (/** org.apache.royale.text.engine.ElementFormat */ inst, /** * */ v) {return v !== undefined ? inst.locale = v : inst.locale;}},
        'locked': { type: 'Boolean', get_set: function (/** org.apache.royale.text.engine.ElementFormat */ inst, /** * */ v) {return v !== undefined ? inst.locked = v : inst.locked;}},
        'textRotation': { type: 'String', get_set: function (/** org.apache.royale.text.engine.ElementFormat */ inst, /** * */ v) {return v !== undefined ? inst.textRotation = v : inst.textRotation;}},
        'trackingLeft': { type: 'Number', get_set: function (/** org.apache.royale.text.engine.ElementFormat */ inst, /** * */ v) {return v !== undefined ? inst.trackingLeft = v : inst.trackingLeft;}},
        'trackingRight': { type: 'Number', get_set: function (/** org.apache.royale.text.engine.ElementFormat */ inst, /** * */ v) {return v !== undefined ? inst.trackingRight = v : inst.trackingRight;}},
        'typographicCase': { type: 'String', get_set: function (/** org.apache.royale.text.engine.ElementFormat */ inst, /** * */ v) {return v !== undefined ? inst.typographicCase = v : inst.typographicCase;}},
        'xScale': { type: 'Number', get_set: function (/** org.apache.royale.text.engine.ElementFormat */ inst, /** * */ v) {return v !== undefined ? inst.xScale = v : inst.xScale;}},
        'yScale': { type: 'Number', get_set: function (/** org.apache.royale.text.engine.ElementFormat */ inst, /** * */ v) {return v !== undefined ? inst.yScale = v : inst.yScale;}}
      };
    },
    methods: function () {
      return {
        'ElementFormat': { type: '', declaredBy: 'org.apache.royale.text.engine.ElementFormat'},
        'clone': { type: 'org.apache.royale.text.engine.ElementFormat', declaredBy: 'org.apache.royale.text.engine.ElementFormat'},
        'getFontMetrics': { type: 'org.apache.royale.text.engine.FontMetrics', declaredBy: 'org.apache.royale.text.engine.ElementFormat'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.text.engine.ElementFormat.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./ElementFormat.js.map
