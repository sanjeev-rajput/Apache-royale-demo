/**
 * Generated by Apache Royale Compiler from org/apache/royale/text/events/TextEvent.as
 * org.apache.royale.text.events.TextEvent
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.text.events.TextEvent');
/* Royale Dependency List: org.apache.royale.events.IRoyaleEvent*/

goog.require('org.apache.royale.events.Event');



/**
 * @constructor
 * @extends {org.apache.royale.events.Event}
 * @param {string} type
 * @param {boolean=} bubbles
 * @param {boolean=} cancelable
 * @param {string=} text
 */
org.apache.royale.text.events.TextEvent = function(type, bubbles, cancelable, text) {
  bubbles = typeof bubbles !== 'undefined' ? bubbles : false;
  cancelable = typeof cancelable !== 'undefined' ? cancelable : false;
  text = typeof text !== 'undefined' ? text : "";
  this.text = text;
  org.apache.royale.text.events.TextEvent.base(this, 'constructor', type, bubbles, cancelable);
};
goog.inherits(org.apache.royale.text.events.TextEvent, org.apache.royale.events.Event);


/**
 * @nocollapse
 * @const
 * @type {string}
 */
org.apache.royale.text.events.TextEvent.LINK = "link";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
org.apache.royale.text.events.TextEvent.TEXT_INPUT = "textInput";


/**
 * @type {string}
 */
org.apache.royale.text.events.TextEvent.prototype.text;


/** @asprivate 
 * @override
 */
org.apache.royale.text.events.TextEvent.prototype.cloneEvent = function() {
  return new org.apache.royale.text.events.TextEvent(this.type, this.bubbles, this.cancelable, this.text);
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.text.events.TextEvent.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'TextEvent', qName: 'org.apache.royale.text.events.TextEvent', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.text.events.TextEvent.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'text': { type: 'String', get_set: function (/** org.apache.royale.text.events.TextEvent */ inst, /** * */ v) {return v !== undefined ? inst.text = v : inst.text;}}
      };
    },
    methods: function () {
      return {
        'TextEvent': { type: '', declaredBy: 'org.apache.royale.text.events.TextEvent', parameters: function () { return [ 'String', false ,'Boolean', true ,'Boolean', true ,'String', true ]; }},
        'cloneEvent': { type: 'org.apache.royale.events.IRoyaleEvent', declaredBy: 'org.apache.royale.text.events.TextEvent'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.text.events.TextEvent.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./TextEvent.js.map
