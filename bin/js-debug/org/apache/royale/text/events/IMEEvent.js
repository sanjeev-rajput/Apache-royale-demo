/**
 * Generated by Apache Royale Compiler from org/apache/royale/text/events/IMEEvent.as
 * org.apache.royale.text.events.IMEEvent
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.text.events.IMEEvent');
/* Royale Dependency List: org.apache.royale.events.IRoyaleEvent,org.apache.royale.text.ime.IIMEClient*/

goog.require('org.apache.royale.events.Event');



/**
 * @constructor
 * @extends {org.apache.royale.events.Event}
 * @param {string} type
 * @param {boolean=} bubbles
 * @param {boolean=} cancelable
 * @param {string=} text
 * @param {org.apache.royale.text.ime.IIMEClient=} imeClient
 */
org.apache.royale.text.events.IMEEvent = function(type, bubbles, cancelable, text, imeClient) {
  bubbles = typeof bubbles !== 'undefined' ? bubbles : false;
  cancelable = typeof cancelable !== 'undefined' ? cancelable : false;
  text = typeof text !== 'undefined' ? text : "";
  imeClient = typeof imeClient !== 'undefined' ? imeClient : null;
  this.text = text;
  this.imeClient = imeClient;
  org.apache.royale.text.events.IMEEvent.base(this, 'constructor', type, bubbles, cancelable);
};
goog.inherits(org.apache.royale.text.events.IMEEvent, org.apache.royale.events.Event);


/**
 * @nocollapse
 * @const
 * @type {string}
 */
org.apache.royale.text.events.IMEEvent.IME_COMPOSITION = "imeComposition";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
org.apache.royale.text.events.IMEEvent.IME_START_COMPOSITION = "imeStartComposition";


/**
 * @type {string}
 */
org.apache.royale.text.events.IMEEvent.prototype.text;


/**
 * @type {org.apache.royale.text.ime.IIMEClient}
 */
org.apache.royale.text.events.IMEEvent.prototype.imeClient;


/**
 * Create a copy/clone of the Event object.
 *
 * @langversion 3.0
 * @playerversion Flash 10.2
 * @playerversion AIR 2.6
 * @productversion Royale 0.0
 * @override
 */
org.apache.royale.text.events.IMEEvent.prototype.cloneEvent = function() {
  return new org.apache.royale.text.events.IMEEvent(this.type, this.bubbles, this.cancelable, this.text, this.imeClient);
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.text.events.IMEEvent.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'IMEEvent', qName: 'org.apache.royale.text.events.IMEEvent', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.text.events.IMEEvent.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'text': { type: 'String', get_set: function (/** org.apache.royale.text.events.IMEEvent */ inst, /** * */ v) {return v !== undefined ? inst.text = v : inst.text;}},
        'imeClient': { type: 'org.apache.royale.text.ime.IIMEClient', get_set: function (/** org.apache.royale.text.events.IMEEvent */ inst, /** * */ v) {return v !== undefined ? inst.imeClient = v : inst.imeClient;}}
      };
    },
    methods: function () {
      return {
        'IMEEvent': { type: '', declaredBy: 'org.apache.royale.text.events.IMEEvent', parameters: function () { return [ 'String', false ,'Boolean', true ,'Boolean', true ,'String', true ,'org.apache.royale.text.ime.IIMEClient', true ]; }},
        'cloneEvent': { type: 'org.apache.royale.events.IRoyaleEvent', declaredBy: 'org.apache.royale.text.events.IMEEvent'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.text.events.IMEEvent.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./IMEEvent.js.map
