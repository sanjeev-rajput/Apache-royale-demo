/**
 * Generated by Apache Royale Compiler from views/actionitemviews/keybordgame/Controller.as
 * views.actionitemviews.keybordgame.Controller
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('views.actionitemviews.keybordgame.Controller');

goog.require('org.apache.royale.events.KeyboardEvent');
goog.require('org.apache.royale.html.elements.Div');
goog.require('org.apache.royale.jewel.Container');
goog.require('org.apache.royale.utils.Language');
goog.require('XML');



/**
 * @constructor
 * @param {org.apache.royale.jewel.Container} area
 * @param {org.apache.royale.html.elements.Div} b
 */
views.actionitemviews.keybordgame.Controller = function(area, b) {
  this.views_actionitemviews_keybordgame_Controller_brick = b;
  this.views_actionitemviews_keybordgame_Controller_gameArea = area;
  document.addEventListener(org.apache.royale.events.KeyboardEvent.KEY_DOWN, org.apache.royale.utils.Language.closure(this.views_actionitemviews_keybordgame_Controller_onKeyDown, this, 'views_actionitemviews_keybordgame_Controller_onKeyDown'));
};


/**
 * @private
 * @type {org.apache.royale.html.elements.Div}
 */
views.actionitemviews.keybordgame.Controller.prototype.views_actionitemviews_keybordgame_Controller_brick = null;


/**
 * @private
 * @type {org.apache.royale.jewel.Container}
 */
views.actionitemviews.keybordgame.Controller.prototype.views_actionitemviews_keybordgame_Controller_gameArea = null;


/**
 * @private
 * @type {number}
 */
views.actionitemviews.keybordgame.Controller.prototype.views_actionitemviews_keybordgame_Controller_step = 10;


/**
 * @private
 * @param {org.apache.royale.events.KeyboardEvent} event
 */
views.actionitemviews.keybordgame.Controller.prototype.views_actionitemviews_keybordgame_Controller_onKeyDown = function(event) {
  org.apache.royale.utils.Language.trace(event.code, event.key);
  org.apache.royale.utils.Language.trace(this.views_actionitemviews_keybordgame_Controller_gameArea.width, this.views_actionitemviews_keybordgame_Controller_gameArea.height, this.views_actionitemviews_keybordgame_Controller_brick.width, this.views_actionitemviews_keybordgame_Controller_brick.height);
  switch (event.code) {
    case 'ArrowLeft':
      this.views_actionitemviews_keybordgame_Controller_brick.x = Math.max(this.views_actionitemviews_keybordgame_Controller_gameArea.x, this.views_actionitemviews_keybordgame_Controller_brick.x - this.views_actionitemviews_keybordgame_Controller_step);
      break;
    case 'ArrowRight':
      this.views_actionitemviews_keybordgame_Controller_brick.x = Math.min(this.views_actionitemviews_keybordgame_Controller_gameArea.width - this.views_actionitemviews_keybordgame_Controller_brick.width, this.views_actionitemviews_keybordgame_Controller_brick.x + this.views_actionitemviews_keybordgame_Controller_step);
      break;
    case 'ArrowUp':
      this.views_actionitemviews_keybordgame_Controller_brick.y = Math.max(this.views_actionitemviews_keybordgame_Controller_gameArea.y, this.views_actionitemviews_keybordgame_Controller_brick.y - this.views_actionitemviews_keybordgame_Controller_step);
      break;
    case 'ArrowDown':
      this.views_actionitemviews_keybordgame_Controller_brick.y = Math.min(this.views_actionitemviews_keybordgame_Controller_gameArea.height - this.views_actionitemviews_keybordgame_Controller_brick.height, this.views_actionitemviews_keybordgame_Controller_brick.y + this.views_actionitemviews_keybordgame_Controller_step);
      break;
  }
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
views.actionitemviews.keybordgame.Controller.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'Controller', qName: 'views.actionitemviews.keybordgame.Controller', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
views.actionitemviews.keybordgame.Controller.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    methods: function () {
      return {
        'Controller': { type: '', declaredBy: 'views.actionitemviews.keybordgame.Controller', parameters: function () { return [ 'org.apache.royale.jewel.Container', false ,'org.apache.royale.html.elements.Div', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
views.actionitemviews.keybordgame.Controller.prototype.ROYALE_COMPILE_FLAGS = 9;