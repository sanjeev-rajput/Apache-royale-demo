/**
 * Generated by Apache Royale Compiler from views/actionitemviews/websocket/WikiSocketMain.mxml
 * views.actionitemviews.websocket.WikiSocketMain
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('views.actionitemviews.websocket.WikiSocketMain');
/* Royale Dependency List: com.unhurdle.spectrum.Switch,org.apache.royale.jewel.supportClasses.scrollbar.ScrollingViewport,org.apache.royale.events.Event,org.apache.royale.events.MouseEvent,views.actionitemviews.websocket.SocketEventUi,views.actionitemviews.websocket.SocketService,XML*/

goog.require('org.apache.royale.jewel.VGroup');



/**
 * @constructor
 * @extends {org.apache.royale.jewel.VGroup}
 */
views.actionitemviews.websocket.WikiSocketMain = function() {
  views.actionitemviews.websocket.WikiSocketMain.base(this, 'constructor');
  
  /**
   * @private
   * @type {com.unhurdle.spectrum.Switch}
   */
  this.switchBtn_;
  
  /**
   * @private
   * @type {org.apache.royale.jewel.VGroup}
   */
  this.ctr_;
  
  /**
   * @private
   * @type {org.apache.royale.jewel.supportClasses.scrollbar.ScrollingViewport}
   */
  this.scrollViewport_;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldd;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldp;

  this.generateMXMLAttributes([
    3,
    'percentWidth',
    true,
    100.0,
    'percentHeight',
    true,
    100.0,
    'itemsHorizontalAlign',
    true,
    'itemsCenter',
    0,
    1,
    'initComplete',
    this.$EH_13_0
  ]);
  
};
goog.inherits(views.actionitemviews.websocket.WikiSocketMain, org.apache.royale.jewel.VGroup);




/**
 * @private
 * @type {views.actionitemviews.websocket.SocketService}
 */
views.actionitemviews.websocket.WikiSocketMain.prototype.views_actionitemviews_websocket_WikiSocketMain__socketService = null;


/**
 * @private
 * @type {number}
 */
views.actionitemviews.websocket.WikiSocketMain.prototype.views_actionitemviews_websocket_WikiSocketMain__maxItems = 100;


/**
 * @private
 * @type {number}
 */
views.actionitemviews.websocket.WikiSocketMain.prototype.views_actionitemviews_websocket_WikiSocketMain_counter = 0;


/**
 * @private
 */
views.actionitemviews.websocket.WikiSocketMain.prototype.views_actionitemviews_websocket_WikiSocketMain_init = function() {
  this.views_actionitemviews_websocket_WikiSocketMain__socketService = new views.actionitemviews.websocket.SocketService();
  this.views_actionitemviews_websocket_WikiSocketMain__socketService.addCAllBackFunction(org.apache.royale.utils.Language.closure(this.views_actionitemviews_websocket_WikiSocketMain_onSocketData, this, 'views_actionitemviews_websocket_WikiSocketMain_onSocketData'));
};


/**
 * @private
 */
views.actionitemviews.websocket.WikiSocketMain.prototype.views_actionitemviews_websocket_WikiSocketMain_switchEventHandler = function() {
  if (this.switchBtn.checked) {
    this.views_actionitemviews_websocket_WikiSocketMain__socketService.connectWebSocket(views.actionitemviews.websocket.SocketService.SUBSCRIBE_WIKI);
  } else {
    this.views_actionitemviews_websocket_WikiSocketMain__socketService.disconnectWebSocket();
  }
};


/**
 * @private
 * @param {Object} data
 */
views.actionitemviews.websocket.WikiSocketMain.prototype.views_actionitemviews_websocket_WikiSocketMain_onSocketData = function(data) {
  var /** @type {Object} */ changeData = data;
  var /** @type {views.actionitemviews.websocket.SocketEventUi} */ eventUi = new views.actionitemviews.websocket.SocketEventUi();
  eventUi.id = "eventUi" + this.views_actionitemviews_websocket_WikiSocketMain_counter++;
  eventUi.change = changeData;
  this.ctr.addElementAt(eventUi, 0);
  if (this.ctr.numElements > this.views_actionitemviews_websocket_WikiSocketMain__maxItems) {
    this.ctr.removeElement(this.ctr.getElementAt((this.ctr.numElements - 1) >> 0));
  }
  this.ctr.element.scrollTop = this.ctr.element.scrollHeight;
};


/**
 * @export
 * @param {org.apache.royale.events.Event} event
 */
views.actionitemviews.websocket.WikiSocketMain.prototype.$EH_13_0 = function(event)
{
  this.views_actionitemviews_websocket_WikiSocketMain_init();
};


/**
 * @export
 * @param {org.apache.royale.events.MouseEvent} event
 */
views.actionitemviews.websocket.WikiSocketMain.prototype.$EH_13_1 = function(event)
{
  this.views_actionitemviews_websocket_WikiSocketMain_switchEventHandler();
};


Object.defineProperties(views.actionitemviews.websocket.WikiSocketMain.prototype, /** @lends {views.actionitemviews.websocket.WikiSocketMain.prototype} */ {
  switchBtn: {
    /** @this {views.actionitemviews.websocket.WikiSocketMain} */
    get: function() {
      return this.switchBtn_;
    },
    /** @this {views.actionitemviews.websocket.WikiSocketMain} */
    set: function(value) {
      if (value != this.switchBtn_) {
        this.switchBtn_ = value;
        this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(this, 'switchBtn', null, value));
      }
    }
  },
  ctr: {
    /** @this {views.actionitemviews.websocket.WikiSocketMain} */
    get: function() {
      return this.ctr_;
    },
    /** @this {views.actionitemviews.websocket.WikiSocketMain} */
    set: function(value) {
      if (value != this.ctr_) {
        this.ctr_ = value;
        this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(this, 'ctr', null, value));
      }
    }
  },
  scrollViewport: {
    /** @this {views.actionitemviews.websocket.WikiSocketMain} */
    get: function() {
      return this.scrollViewport_;
    },
    /** @this {views.actionitemviews.websocket.WikiSocketMain} */
    set: function(value) {
      if (value != this.scrollViewport_) {
        this.scrollViewport_ = value;
        this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(this, 'scrollViewport', null, value));
      }
    }
  },
  'MXMLDescriptor': {
    /** @this {views.actionitemviews.websocket.WikiSocketMain} */
    get: function() {
      if (this.mxmldd == undefined)
      {
        /** @type {Array} */
        var arr = views.actionitemviews.websocket.WikiSocketMain.superClass_.get__MXMLDescriptor.apply(this);
        /** @type {Array} */
        var mxmldd = [
          com.unhurdle.spectrum.Switch,
          3,
          'id',
          true,
          'switchBtn',
          'leftLabel',
          true,
          'Disconnect',
          'rightLabel',
          true,
          'Connect to event source',
          0,
          1,
          'click',
          this.$EH_13_1,
          null,
          org.apache.royale.jewel.VGroup,
          6,
          'id',
          true,
          'ctr',
          'percentWidth',
          true,
          100.0,
          'height',
          true,
          600,
          'gap',
          true,
          5,
          'className',
          true,
          'socketEventItemContainer',
          'beads',
          null,
          [
            org.apache.royale.jewel.supportClasses.scrollbar.ScrollingViewport,
            1,
            'id',
            true,
            'scrollViewport',
            0,
            0,
            null
          ],
          0,
          0,
          null
        ];
        if (arr)
          this.mxmldd = arr.concat(mxmldd);
        else
          this.mxmldd = mxmldd;
      }
      return this.mxmldd;
    }
  }
});
/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
views.actionitemviews.websocket.WikiSocketMain.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'WikiSocketMain', qName: 'views.actionitemviews.websocket.WikiSocketMain', kind: 'class'  }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
views.actionitemviews.websocket.WikiSocketMain.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'switchBtn': { type: 'com.unhurdle.spectrum.Switch', access: 'readwrite', declaredBy: 'views.actionitemviews.websocket.WikiSocketMain'},
        'ctr': { type: 'org.apache.royale.jewel.VGroup', access: 'readwrite', declaredBy: 'views.actionitemviews.websocket.WikiSocketMain'},
        'scrollViewport': { type: 'org.apache.royale.jewel.supportClasses.scrollbar.ScrollingViewport', access: 'readwrite', declaredBy: 'views.actionitemviews.websocket.WikiSocketMain'}
      };
    },
    methods: function () {
      return {
        'WikiSocketMain': { type: '', declaredBy: 'views.actionitemviews.websocket.WikiSocketMain'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
views.actionitemviews.websocket.WikiSocketMain.prototype.ROYALE_COMPILE_FLAGS = 9;



//# sourceMappingURL=./WikiSocketMain.js.map
