/**
 * Generated by Apache Royale Compiler from views/actionitemviews/basicdrawing/shapes/FreehandShape.as
 * views.actionitemviews.basicdrawing.shapes.FreehandShape
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('views.actionitemviews.basicdrawing.shapes.FreehandShape');
/* Royale Dependency List: org.apache.royale.core.IChild,org.apache.royale.svg.elements.Path,XML*/

goog.require('views.actionitemviews.basicdrawing.shapes.IDrawableShape');



/**
 * @constructor
 * @implements {views.actionitemviews.basicdrawing.shapes.IDrawableShape}
 */
views.actionitemviews.basicdrawing.shapes.FreehandShape = function() {
};


/**
 * @private
 * @type {org.apache.royale.svg.elements.Path}
 */
views.actionitemviews.basicdrawing.shapes.FreehandShape.prototype.views_actionitemviews_basicdrawing_shapes_FreehandShape__shape = null;


/**
 * @private
 * @type {string}
 */
views.actionitemviews.basicdrawing.shapes.FreehandShape.prototype.views_actionitemviews_basicdrawing_shapes_FreehandShape__pathData = null;


/**
 * @private
 * @type {number}
 */
views.actionitemviews.basicdrawing.shapes.FreehandShape.prototype.views_actionitemviews_basicdrawing_shapes_FreehandShape__lastX = NaN;


/**
 * @private
 * @type {number}
 */
views.actionitemviews.basicdrawing.shapes.FreehandShape.prototype.views_actionitemviews_basicdrawing_shapes_FreehandShape__lastY = NaN;


/**
 * @param {number} startX
 * @param {number} startY
 * @param {number} endX
 * @param {number} endY
 * @param {string} color
 * @return {org.apache.royale.core.IChild}
 */
views.actionitemviews.basicdrawing.shapes.FreehandShape.prototype.create = function(startX, startY, endX, endY, color) {
  this.views_actionitemviews_basicdrawing_shapes_FreehandShape__shape = new org.apache.royale.svg.elements.Path();
  this.views_actionitemviews_basicdrawing_shapes_FreehandShape__pathData = "M " + startX + " " + startY;
  this.views_actionitemviews_basicdrawing_shapes_FreehandShape__lastX = startX;
  this.views_actionitemviews_basicdrawing_shapes_FreehandShape__lastY = startY;
  this.views_actionitemviews_basicdrawing_shapes_FreehandShape__shape.d = this.views_actionitemviews_basicdrawing_shapes_FreehandShape__pathData;
  this.views_actionitemviews_basicdrawing_shapes_FreehandShape__shape.stroke = color;
  this.views_actionitemviews_basicdrawing_shapes_FreehandShape__shape.strokeWidth = "2";
  this.views_actionitemviews_basicdrawing_shapes_FreehandShape__shape.fill = "none";
  return this.views_actionitemviews_basicdrawing_shapes_FreehandShape__shape;
};


/**
 * @param {number} endX
 * @param {number} endY
 */
views.actionitemviews.basicdrawing.shapes.FreehandShape.prototype.update = function(endX, endY) {
  this.extendPath(endX, endY);
};


/**
 * @param {number} x
 * @param {number} y
 */
views.actionitemviews.basicdrawing.shapes.FreehandShape.prototype.extendPath = function(x, y) {
  this.views_actionitemviews_basicdrawing_shapes_FreehandShape__pathData += " L " + x + " " + y;
  this.views_actionitemviews_basicdrawing_shapes_FreehandShape__shape.d = this.views_actionitemviews_basicdrawing_shapes_FreehandShape__pathData;
  this.views_actionitemviews_basicdrawing_shapes_FreehandShape__lastX = x;
  this.views_actionitemviews_basicdrawing_shapes_FreehandShape__lastY = y;
};


/**
 * @param {number} x
 * @param {number} y
 * @return {boolean}
 */
views.actionitemviews.basicdrawing.shapes.FreehandShape.prototype.hitTest = function(x, y) {
  return false;
};


/**
 * @param {number} dx
 * @param {number} dy
 */
views.actionitemviews.basicdrawing.shapes.FreehandShape.prototype.move = function(dx, dy) {
};


/**
 * @param {string} color
 */
views.actionitemviews.basicdrawing.shapes.FreehandShape.prototype.setColor = function(color) {
};


/**
 * @nocollapse
 * @export
 * @type {org.apache.royale.core.IChild}
 */
views.actionitemviews.basicdrawing.shapes.FreehandShape.prototype.shape;


views.actionitemviews.basicdrawing.shapes.FreehandShape.prototype.get__shape = function() {
  return this.views_actionitemviews_basicdrawing_shapes_FreehandShape__shape;
};


Object.defineProperties(views.actionitemviews.basicdrawing.shapes.FreehandShape.prototype, /** @lends {views.actionitemviews.basicdrawing.shapes.FreehandShape.prototype} */ {
/**
 * @type {org.apache.royale.core.IChild}
 */
shape: {
get: views.actionitemviews.basicdrawing.shapes.FreehandShape.prototype.get__shape}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
views.actionitemviews.basicdrawing.shapes.FreehandShape.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'FreehandShape', qName: 'views.actionitemviews.basicdrawing.shapes.FreehandShape', kind: 'class' }], interfaces: [views.actionitemviews.basicdrawing.shapes.IDrawableShape] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
views.actionitemviews.basicdrawing.shapes.FreehandShape.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'shape': { type: 'org.apache.royale.core.IChild', access: 'readonly', declaredBy: 'views.actionitemviews.basicdrawing.shapes.FreehandShape'}
      };
    },
    methods: function () {
      return {
        'create': { type: 'org.apache.royale.core.IChild', declaredBy: 'views.actionitemviews.basicdrawing.shapes.FreehandShape', parameters: function () { return [ 'Number', false ,'Number', false ,'Number', false ,'Number', false ,'String', false ]; }},
        'update': { type: 'void', declaredBy: 'views.actionitemviews.basicdrawing.shapes.FreehandShape', parameters: function () { return [ 'Number', false ,'Number', false ]; }},
        'extendPath': { type: 'void', declaredBy: 'views.actionitemviews.basicdrawing.shapes.FreehandShape', parameters: function () { return [ 'Number', false ,'Number', false ]; }},
        'hitTest': { type: 'Boolean', declaredBy: 'views.actionitemviews.basicdrawing.shapes.FreehandShape', parameters: function () { return [ 'Number', false ,'Number', false ]; }},
        'move': { type: 'void', declaredBy: 'views.actionitemviews.basicdrawing.shapes.FreehandShape', parameters: function () { return [ 'Number', false ,'Number', false ]; }},
        'setColor': { type: 'void', declaredBy: 'views.actionitemviews.basicdrawing.shapes.FreehandShape', parameters: function () { return [ 'String', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
views.actionitemviews.basicdrawing.shapes.FreehandShape.prototype.ROYALE_COMPILE_FLAGS = 9;
