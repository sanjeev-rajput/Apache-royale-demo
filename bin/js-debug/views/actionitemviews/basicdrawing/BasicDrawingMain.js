/**
 * Generated by Apache Royale Compiler from views/actionitemviews/basicdrawing/BasicDrawingMain.mxml
 * views.actionitemviews.basicdrawing.BasicDrawingMain
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('views.actionitemviews.basicdrawing.BasicDrawingMain');
/* Royale Dependency List: org.apache.royale.jewel.HGroup,com.unhurdle.spectrum.Picker,com.unhurdle.spectrum.colorpicker.ColorPicker,com.unhurdle.spectrum.Switch,org.apache.royale.jewel.ImageIcon,com.unhurdle.spectrum.Container,org.apache.royale.events.Event,org.apache.royale.events.MouseEvent,views.actionitemviews.basicdrawing.DrawingManager,views.actionitemviews.basicdrawing.ExportHelper,XML*/

goog.require('org.apache.royale.jewel.VGroup');



/**
 * @constructor
 * @extends {org.apache.royale.jewel.VGroup}
 */
views.actionitemviews.basicdrawing.BasicDrawingMain = function() {
  views.actionitemviews.basicdrawing.BasicDrawingMain.base(this, 'constructor');
  
  this.views_actionitemviews_basicdrawing_BasicDrawingMain_cbDp = new Array('Rectangle', 'Circle', 'Line', 'Freehand');
  /**
   * @private
   * @type {org.apache.royale.jewel.HGroup}
   */
  this.$ID_13_2;
  
  /**
   * @private
   * @type {com.unhurdle.spectrum.Picker}
   */
  this.cbList_;
  
  /**
   * @private
   * @type {com.unhurdle.spectrum.colorpicker.ColorPicker}
   */
  this.clrPkr_;
  
  /**
   * @private
   * @type {com.unhurdle.spectrum.Switch}
   */
  this.drawAndMoveBtn_;
  
  /**
   * @private
   * @type {org.apache.royale.jewel.ImageIcon}
   */
  this.$ID_13_0;
  
  /**
   * @private
   * @type {org.apache.royale.jewel.ImageIcon}
   */
  this.$ID_13_1;
  
  /**
   * @private
   * @type {com.unhurdle.spectrum.Container}
   */
  this.drawingCtr_;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldd;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldp;

  this.generateMXMLAttributes([
    5,
    'itemsHorizontalAlign',
    true,
    'itemsCenter',
    'itemsVerticalAlign',
    true,
    'itemsCenter',
    'percentHeight',
    true,
    100.0,
    'percentWidth',
    true,
    100.0,
    'gap',
    true,
    5,
    0,
    1,
    'initComplete',
    this.$EH_13_0
  ]);
  
};
goog.inherits(views.actionitemviews.basicdrawing.BasicDrawingMain, org.apache.royale.jewel.VGroup);




/**
 * @private
 * @type {Array}
 */
views.actionitemviews.basicdrawing.BasicDrawingMain.prototype.views_actionitemviews_basicdrawing_BasicDrawingMain_cbDp = null;


/**
 * @private
 * @type {views.actionitemviews.basicdrawing.DrawingManager}
 */
views.actionitemviews.basicdrawing.BasicDrawingMain.prototype.views_actionitemviews_basicdrawing_BasicDrawingMain_drawingmanager = null;


/**
 * @private
 */
views.actionitemviews.basicdrawing.BasicDrawingMain.prototype.views_actionitemviews_basicdrawing_BasicDrawingMain_init = function() {
  this.cbList.dataProvider = this.views_actionitemviews_basicdrawing_BasicDrawingMain_cbDp;
  this.cbList.selectedIndex = 0;
  this.clrPkr.colorValue = 0xffcc99;
  this.views_actionitemviews_basicdrawing_BasicDrawingMain_drawingmanager = new views.actionitemviews.basicdrawing.DrawingManager(this.drawingCtr);
  this.views_actionitemviews_basicdrawing_BasicDrawingMain_drawingmanager.drawingMode = views.actionitemviews.basicdrawing.DrawingManager.DRAW;
};


/**
 * @private
 */
views.actionitemviews.basicdrawing.BasicDrawingMain.prototype.views_actionitemviews_basicdrawing_BasicDrawingMain_clrPkrEventHandler = function() {
  this.views_actionitemviews_basicdrawing_BasicDrawingMain_drawingmanager.color = this.clrPkr.appliedColor.hexString;
};


/**
 * @private
 */
views.actionitemviews.basicdrawing.BasicDrawingMain.prototype.views_actionitemviews_basicdrawing_BasicDrawingMain_clrBtnEventHandler = function() {
  this.views_actionitemviews_basicdrawing_BasicDrawingMain_drawingmanager.initCanvas();
};


/**
 * @private
 */
views.actionitemviews.basicdrawing.BasicDrawingMain.prototype.views_actionitemviews_basicdrawing_BasicDrawingMain_listEventChangeHandler = function() {
  var /** @type {com.unhurdle.spectrum.data.MenuItem} */ mItem = this.cbList.selectedItem;
  this.views_actionitemviews_basicdrawing_BasicDrawingMain_drawingmanager.shapeType = mItem.label;
  this.drawAndMoveBtn.checked = true;
  this.views_actionitemviews_basicdrawing_BasicDrawingMain_drawingmanager.drawingMode = views.actionitemviews.basicdrawing.DrawingManager.DRAW;
};


/**
 * @private
 */
views.actionitemviews.basicdrawing.BasicDrawingMain.prototype.views_actionitemviews_basicdrawing_BasicDrawingMain_moveAndDrawEventHandler = function() {
  var /** @type {boolean} */ flag = this.drawAndMoveBtn.checked;
  if (!flag)
    this.views_actionitemviews_basicdrawing_BasicDrawingMain_drawingmanager.drawingMode = views.actionitemviews.basicdrawing.DrawingManager.SELECT;
  if (flag)
    this.views_actionitemviews_basicdrawing_BasicDrawingMain_drawingmanager.drawingMode = views.actionitemviews.basicdrawing.DrawingManager.DRAW;
};


/**
 * @private
 */
views.actionitemviews.basicdrawing.BasicDrawingMain.prototype.views_actionitemviews_basicdrawing_BasicDrawingMain_exportImgEventHandler = function() {
  views.actionitemviews.basicdrawing.ExportHelper.exportSVGAsPNG(this.views_actionitemviews_basicdrawing_BasicDrawingMain_drawingmanager.canvas);
};


/**
 * @export
 * @param {org.apache.royale.events.Event} event
 */
views.actionitemviews.basicdrawing.BasicDrawingMain.prototype.$EH_13_0 = function(event)
{
  this.views_actionitemviews_basicdrawing_BasicDrawingMain_init();
};


/**
 * @export
 * @param {org.apache.royale.events.Event} event
 */
views.actionitemviews.basicdrawing.BasicDrawingMain.prototype.$EH_13_1 = function(event)
{
  this.views_actionitemviews_basicdrawing_BasicDrawingMain_listEventChangeHandler();
};


/**
 * @export
 * @param {org.apache.royale.events.Event} event
 */
views.actionitemviews.basicdrawing.BasicDrawingMain.prototype.$EH_13_2 = function(event)
{
  this.views_actionitemviews_basicdrawing_BasicDrawingMain_clrPkrEventHandler();
};


/**
 * @export
 * @param {org.apache.royale.events.MouseEvent} event
 */
views.actionitemviews.basicdrawing.BasicDrawingMain.prototype.$EH_13_3 = function(event)
{
  this.views_actionitemviews_basicdrawing_BasicDrawingMain_moveAndDrawEventHandler();
};


/**
 * @export
 * @param {org.apache.royale.events.MouseEvent} event
 */
views.actionitemviews.basicdrawing.BasicDrawingMain.prototype.$EH_13_4 = function(event)
{
  this.views_actionitemviews_basicdrawing_BasicDrawingMain_exportImgEventHandler();
};


/**
 * @export
 * @param {org.apache.royale.events.MouseEvent} event
 */
views.actionitemviews.basicdrawing.BasicDrawingMain.prototype.$EH_13_5 = function(event)
{
  this.views_actionitemviews_basicdrawing_BasicDrawingMain_clrBtnEventHandler();
};


Object.defineProperties(views.actionitemviews.basicdrawing.BasicDrawingMain.prototype, /** @lends {views.actionitemviews.basicdrawing.BasicDrawingMain.prototype} */ {
  cbList: {
    /** @this {views.actionitemviews.basicdrawing.BasicDrawingMain} */
    get: function() {
      return this.cbList_;
    },
    /** @this {views.actionitemviews.basicdrawing.BasicDrawingMain} */
    set: function(value) {
      if (value != this.cbList_) {
        this.cbList_ = value;
        this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(this, 'cbList', null, value));
      }
    }
  },
  clrPkr: {
    /** @this {views.actionitemviews.basicdrawing.BasicDrawingMain} */
    get: function() {
      return this.clrPkr_;
    },
    /** @this {views.actionitemviews.basicdrawing.BasicDrawingMain} */
    set: function(value) {
      if (value != this.clrPkr_) {
        this.clrPkr_ = value;
        this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(this, 'clrPkr', null, value));
      }
    }
  },
  drawAndMoveBtn: {
    /** @this {views.actionitemviews.basicdrawing.BasicDrawingMain} */
    get: function() {
      return this.drawAndMoveBtn_;
    },
    /** @this {views.actionitemviews.basicdrawing.BasicDrawingMain} */
    set: function(value) {
      if (value != this.drawAndMoveBtn_) {
        this.drawAndMoveBtn_ = value;
        this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(this, 'drawAndMoveBtn', null, value));
      }
    }
  },
  drawingCtr: {
    /** @this {views.actionitemviews.basicdrawing.BasicDrawingMain} */
    get: function() {
      return this.drawingCtr_;
    },
    /** @this {views.actionitemviews.basicdrawing.BasicDrawingMain} */
    set: function(value) {
      if (value != this.drawingCtr_) {
        this.drawingCtr_ = value;
        this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(this, 'drawingCtr', null, value));
      }
    }
  },
  'MXMLDescriptor': {
    /** @this {views.actionitemviews.basicdrawing.BasicDrawingMain} */
    get: function() {
      if (this.mxmldd == undefined)
      {
        /** @type {Array} */
        var arr = views.actionitemviews.basicdrawing.BasicDrawingMain.superClass_.get__MXMLDescriptor.apply(this);
        /** @type {Array} */
        var mxmldd = [
          org.apache.royale.jewel.HGroup,
          3,
          '_id',
          true,
          '$ID_13_2',
          'gap',
          true,
          10,
          'itemsVerticalAlign',
          true,
          'itemsCenter',
          0,
          0,
          [
            com.unhurdle.spectrum.Picker,
            3,
            'id',
            true,
            'cbList',
            'quiet',
            true,
            true,
            'width',
            true,
            120,
            0,
            1,
            'change',
            this.$EH_13_1,
            null,
            com.unhurdle.spectrum.colorpicker.ColorPicker,
            2,
            'id',
            true,
            'clrPkr',
            'showAlphaControls',
            true,
            false,
            0,
            1,
            'openChanged',
            this.$EH_13_2,
            null,
            com.unhurdle.spectrum.Switch,
            4,
            'id',
            true,
            'drawAndMoveBtn',
            'leftLabel',
            true,
            'Move',
            'rightLabel',
            true,
            'Draw',
            'checked',
            true,
            true,
            0,
            1,
            'click',
            this.$EH_13_3,
            null,
            org.apache.royale.jewel.ImageIcon,
            2,
            '_id',
            true,
            '$ID_13_0',
            'src',
            true,
            'img/export-drawing.png',
            0,
            1,
            'click',
            this.$EH_13_4,
            null,
            org.apache.royale.jewel.ImageIcon,
            2,
            '_id',
            true,
            '$ID_13_1',
            'src',
            true,
            'img/drawing-clean.png',
            0,
            1,
            'click',
            this.$EH_13_5,
            null
          ],
          com.unhurdle.spectrum.Container,
          4,
          'id',
          true,
          'drawingCtr',
          'width',
          true,
          800,
          'height',
          true,
          600,
          'className',
          true,
          'drawingCanvas',
          0,
          0,
          null
        ];
        if (arr)
          this.mxmldd = arr.concat(mxmldd);
        else
          this.mxmldd = mxmldd;
      }
      return this.mxmldd;
    }
  }
});
/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
views.actionitemviews.basicdrawing.BasicDrawingMain.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'BasicDrawingMain', qName: 'views.actionitemviews.basicdrawing.BasicDrawingMain', kind: 'class'  }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
views.actionitemviews.basicdrawing.BasicDrawingMain.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'cbList': { type: 'com.unhurdle.spectrum.Picker', access: 'readwrite', declaredBy: 'views.actionitemviews.basicdrawing.BasicDrawingMain'},
        'clrPkr': { type: 'com.unhurdle.spectrum.colorpicker.ColorPicker', access: 'readwrite', declaredBy: 'views.actionitemviews.basicdrawing.BasicDrawingMain'},
        'drawAndMoveBtn': { type: 'com.unhurdle.spectrum.Switch', access: 'readwrite', declaredBy: 'views.actionitemviews.basicdrawing.BasicDrawingMain'},
        'drawingCtr': { type: 'com.unhurdle.spectrum.Container', access: 'readwrite', declaredBy: 'views.actionitemviews.basicdrawing.BasicDrawingMain'}
      };
    },
    methods: function () {
      return {
        'BasicDrawingMain': { type: '', declaredBy: 'views.actionitemviews.basicdrawing.BasicDrawingMain'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
views.actionitemviews.basicdrawing.BasicDrawingMain.prototype.ROYALE_COMPILE_FLAGS = 9;



//# sourceMappingURL=./BasicDrawingMain.js.map
