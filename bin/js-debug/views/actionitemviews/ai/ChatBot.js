/**
 * Generated by Apache Royale Compiler from views/actionitemviews/ai/ChatBot.mxml
 * views.actionitemviews.ai.ChatBot
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('views.actionitemviews.ai.ChatBot');
/* Royale Dependency List: org.apache.royale.html.elements.Span,org.apache.royale.html.elements.Pre,org.apache.royale.events.Event,XML*/

goog.require('org.apache.royale.jewel.VGroup');



/**
 * @constructor
 * @extends {org.apache.royale.jewel.VGroup}
 */
views.actionitemviews.ai.ChatBot = function() {
  views.actionitemviews.ai.ChatBot.base(this, 'constructor');
  
  /**
   * @private
   * @type {org.apache.royale.html.elements.Span}
   */
  this.query_;
  
  /**
   * @private
   * @type {org.apache.royale.html.elements.Pre}
   */
  this.response_;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldd;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldp;

  this.generateMXMLAttributes([
    2,
    'className',
    true,
    'chatBoatChatUi',
    'percentWidth',
    true,
    100.0,
    0,
    1,
    'initComplete',
    this.$EH_13_0
  ]);
  
};
goog.inherits(views.actionitemviews.ai.ChatBot, org.apache.royale.jewel.VGroup);




/**
 * @private
 * @type {string}
 */
views.actionitemviews.ai.ChatBot.prototype.views_actionitemviews_ai_ChatBot__aiQuery = null;


/**
 * @private
 * @type {string}
 */
views.actionitemviews.ai.ChatBot.prototype.views_actionitemviews_ai_ChatBot__aiResponse = null;


/**
 * @private
 */
views.actionitemviews.ai.ChatBot.prototype.views_actionitemviews_ai_ChatBot_init = function() {
  this.query.innerHTML = this.views_actionitemviews_ai_ChatBot__aiQuery;
  this.response.innerText = this.views_actionitemviews_ai_ChatBot__aiResponse;
};


;


;





/**
 * @nocollapse
 * @export
 * @type {string}
 */
views.actionitemviews.ai.ChatBot.prototype.aiQuery;


views.actionitemviews.ai.ChatBot.prototype.set__aiQuery = function(q) {
  this.views_actionitemviews_ai_ChatBot__aiQuery = q;
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
views.actionitemviews.ai.ChatBot.prototype.aiResponse;


views.actionitemviews.ai.ChatBot.prototype.set__aiResponse = function(r) {
  this.views_actionitemviews_ai_ChatBot__aiResponse = r;
  if (this.response) {
    this.response.innerText = this.views_actionitemviews_ai_ChatBot__aiResponse;
  }
};


Object.defineProperties(views.actionitemviews.ai.ChatBot.prototype, /** @lends {views.actionitemviews.ai.ChatBot.prototype} */ {
/**
 * @type {string}
 */
aiQuery: {
set: views.actionitemviews.ai.ChatBot.prototype.set__aiQuery},
/**
 * @type {string}
 */
aiResponse: {
set: views.actionitemviews.ai.ChatBot.prototype.set__aiResponse}}
);/**
 * @export
 * @param {org.apache.royale.events.Event} event
 */
views.actionitemviews.ai.ChatBot.prototype.$EH_13_0 = function(event)
{
  this.views_actionitemviews_ai_ChatBot_init();
};


Object.defineProperties(views.actionitemviews.ai.ChatBot.prototype, /** @lends {views.actionitemviews.ai.ChatBot.prototype} */ {
  query: {
    /** @this {views.actionitemviews.ai.ChatBot} */
    get: function() {
      return this.query_;
    },
    /** @this {views.actionitemviews.ai.ChatBot} */
    set: function(value) {
      if (value != this.query_) {
        this.query_ = value;
        this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(this, 'query', null, value));
      }
    }
  },
  response: {
    /** @this {views.actionitemviews.ai.ChatBot} */
    get: function() {
      return this.response_;
    },
    /** @this {views.actionitemviews.ai.ChatBot} */
    set: function(value) {
      if (value != this.response_) {
        this.response_ = value;
        this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(this, 'response', null, value));
      }
    }
  },
  'MXMLDescriptor': {
    /** @this {views.actionitemviews.ai.ChatBot} */
    get: function() {
      if (this.mxmldd == undefined)
      {
        /** @type {Array} */
        var arr = views.actionitemviews.ai.ChatBot.superClass_.get__MXMLDescriptor.apply(this);
        /** @type {Array} */
        var mxmldd = [
          org.apache.royale.html.elements.Span,
          3,
          'id',
          true,
          'query',
          'percentWidth',
          true,
          100.0,
          'class',
          true,
          'chatBotQuery',
          0,
          0,
          null,
          org.apache.royale.html.elements.Pre,
          4,
          'id',
          true,
          'response',
          'percentWidth',
          true,
          100.0,
          'class',
          true,
          'chatBotAns',
          'text',
          true,
          '...',
          0,
          0,
          null
        ];
        if (arr)
          this.mxmldd = arr.concat(mxmldd);
        else
          this.mxmldd = mxmldd;
      }
      return this.mxmldd;
    }
  }
});
/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
views.actionitemviews.ai.ChatBot.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'ChatBot', qName: 'views.actionitemviews.ai.ChatBot', kind: 'class'  }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
views.actionitemviews.ai.ChatBot.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'aiQuery': { type: 'String', access: 'writeonly', declaredBy: 'views.actionitemviews.ai.ChatBot'},
        'aiResponse': { type: 'String', access: 'writeonly', declaredBy: 'views.actionitemviews.ai.ChatBot'},
        'query': { type: 'org.apache.royale.html.elements.Span', access: 'readwrite', declaredBy: 'views.actionitemviews.ai.ChatBot'},
        'response': { type: 'org.apache.royale.html.elements.Pre', access: 'readwrite', declaredBy: 'views.actionitemviews.ai.ChatBot'}
      };
    },
    methods: function () {
      return {
        'ChatBot': { type: '', declaredBy: 'views.actionitemviews.ai.ChatBot'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
views.actionitemviews.ai.ChatBot.prototype.ROYALE_COMPILE_FLAGS = 9;
