/**
 * Generated by Apache Royale Compiler from views/actionitemviews/shoppingcart/CartItem.mxml
 * views.actionitemviews.shoppingcart.CartItem
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('views.actionitemviews.shoppingcart.CartItem');
/* Royale Dependency List: org.apache.royale.jewel.supportClasses.card.CardHeader,org.apache.royale.jewel.supportClasses.bar.BarSection,org.apache.royale.jewel.Label,org.apache.royale.html.elements.I,org.apache.royale.jewel.Image,com.unhurdle.spectrum.Stepper,org.apache.royale.events.Event,org.apache.royale.events.MouseEvent,XML*/

goog.require('org.apache.royale.jewel.Card');



/**
 * @constructor
 * @extends {org.apache.royale.jewel.Card}
 */
views.actionitemviews.shoppingcart.CartItem = function() {
  views.actionitemviews.shoppingcart.CartItem.base(this, 'constructor');
  
  /**
   * @private
   * @type {org.apache.royale.jewel.supportClasses.card.CardHeader}
   */
  this.$ID_15_3;
  
  /**
   * @private
   * @type {org.apache.royale.jewel.supportClasses.bar.BarSection}
   */
  this.$ID_15_0;
  
  /**
   * @private
   * @type {org.apache.royale.jewel.Label}
   */
  this.name_;
  
  /**
   * @private
   * @type {org.apache.royale.jewel.supportClasses.bar.BarSection}
   */
  this.$ID_15_2;
  
  /**
   * @private
   * @type {org.apache.royale.html.elements.I}
   */
  this.$ID_15_1;
  
  /**
   * @private
   * @type {org.apache.royale.jewel.Image}
   */
  this.img_;
  
  /**
   * @private
   * @type {org.apache.royale.jewel.Label}
   */
  this.price_;
  
  /**
   * @private
   * @type {com.unhurdle.spectrum.Stepper}
   */
  this.qt_;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldd;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldp;

  this.generateMXMLAttributes([
    2,
    'itemsHorizontalAlign',
    true,
    'itemsCenter',
    'className',
    true,
    'shoppingCartItem',
    0,
    1,
    'initComplete',
    this.$EH_15_0
  ]);
  
};
goog.inherits(views.actionitemviews.shoppingcart.CartItem, org.apache.royale.jewel.Card);




/**
 * @private
 * @type {Object}
 */
views.actionitemviews.shoppingcart.CartItem.prototype.views_actionitemviews_shoppingcart_CartItem__data = null;


/**
 * @private
 * @type {boolean}
 */
views.actionitemviews.shoppingcart.CartItem.prototype.views_actionitemviews_shoppingcart_CartItem__initialized = false;


/**
 * @nocollapse
 * @const
 * @type {string}
 */
views.actionitemviews.shoppingcart.CartItem.ITEM_REMOVED = "itemRemoved";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
views.actionitemviews.shoppingcart.CartItem.ITEM_QTY_CHANGED = "itemQtyChanged";


/**
 * @private
 */
views.actionitemviews.shoppingcart.CartItem.prototype.views_actionitemviews_shoppingcart_CartItem_init = function() {
  if (!this.views_actionitemviews_shoppingcart_CartItem__data)
    return;
  this.views_actionitemviews_shoppingcart_CartItem__initialized = true;
  this.name.text = org.apache.royale.utils.Language.string(this.views_actionitemviews_shoppingcart_CartItem__data["title"]);
  this.qt.value = +this.views_actionitemviews_shoppingcart_CartItem__data["qty"];
  this.price.text = "$" + this.views_actionitemviews_shoppingcart_CartItem__data["price"];
  this.img.src = 'img/shopping/' + this.views_actionitemviews_shoppingcart_CartItem__data["img"];
  document.querySelector('.spectrum-Stepper-input').setAttribute('readonly', true);
  this.qt.max = Number(this.views_actionitemviews_shoppingcart_CartItem__data["maxQty"]);
};


;


/**
 * @private
 * @param {string} action
 */
views.actionitemviews.shoppingcart.CartItem.prototype.views_actionitemviews_shoppingcart_CartItem_cartItemQtyHandler = function(action) {
  var /** @type {Object} */ obj = new Object();
  obj["type"] = action;
  obj["item"] = this;
  this.dispatchEvent(obj);
};





/**
 * @nocollapse
 * @export
 * @type {Object}
 */
views.actionitemviews.shoppingcart.CartItem.prototype.data;


views.actionitemviews.shoppingcart.CartItem.prototype.set__data = function(d) {
  this.views_actionitemviews_shoppingcart_CartItem__data = d;
  this.id = org.apache.royale.utils.Language.string(d["id"]);
  if (this.views_actionitemviews_shoppingcart_CartItem__initialized) {
    this.views_actionitemviews_shoppingcart_CartItem_init();
  }
};


Object.defineProperties(views.actionitemviews.shoppingcart.CartItem.prototype, /** @lends {views.actionitemviews.shoppingcart.CartItem.prototype} */ {
/**
 * @type {Object}
 */
data: {
set: views.actionitemviews.shoppingcart.CartItem.prototype.set__data}}
);/**
 * @export
 * @param {org.apache.royale.events.Event} event
 */
views.actionitemviews.shoppingcart.CartItem.prototype.$EH_15_0 = function(event)
{
  this.views_actionitemviews_shoppingcart_CartItem_init();
};


/**
 * @export
 * @param {org.apache.royale.events.MouseEvent} event
 */
views.actionitemviews.shoppingcart.CartItem.prototype.$EH_15_1 = function(event)
{
  this.views_actionitemviews_shoppingcart_CartItem_cartItemQtyHandler(views.actionitemviews.shoppingcart.CartItem.ITEM_REMOVED);
};


/**
 * @export
 * @param {org.apache.royale.events.Event} event
 */
views.actionitemviews.shoppingcart.CartItem.prototype.$EH_15_2 = function(event)
{
  this.views_actionitemviews_shoppingcart_CartItem_cartItemQtyHandler(views.actionitemviews.shoppingcart.CartItem.ITEM_QTY_CHANGED);
};


Object.defineProperties(views.actionitemviews.shoppingcart.CartItem.prototype, /** @lends {views.actionitemviews.shoppingcart.CartItem.prototype} */ {
  name: {
    /** @this {views.actionitemviews.shoppingcart.CartItem} */
    get: function() {
      return this.name_;
    },
    /** @this {views.actionitemviews.shoppingcart.CartItem} */
    set: function(value) {
      if (value != this.name_) {
        this.name_ = value;
        this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(this, 'name', null, value));
      }
    }
  },
  img: {
    /** @this {views.actionitemviews.shoppingcart.CartItem} */
    get: function() {
      return this.img_;
    },
    /** @this {views.actionitemviews.shoppingcart.CartItem} */
    set: function(value) {
      if (value != this.img_) {
        this.img_ = value;
        this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(this, 'img', null, value));
      }
    }
  },
  price: {
    /** @this {views.actionitemviews.shoppingcart.CartItem} */
    get: function() {
      return this.price_;
    },
    /** @this {views.actionitemviews.shoppingcart.CartItem} */
    set: function(value) {
      if (value != this.price_) {
        this.price_ = value;
        this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(this, 'price', null, value));
      }
    }
  },
  qt: {
    /** @this {views.actionitemviews.shoppingcart.CartItem} */
    get: function() {
      return this.qt_;
    },
    /** @this {views.actionitemviews.shoppingcart.CartItem} */
    set: function(value) {
      if (value != this.qt_) {
        this.qt_ = value;
        this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(this, 'qt', null, value));
      }
    }
  },
  'MXMLDescriptor': {
    /** @this {views.actionitemviews.shoppingcart.CartItem} */
    get: function() {
      if (this.mxmldd == undefined)
      {
        /** @type {Array} */
        var arr = views.actionitemviews.shoppingcart.CartItem.superClass_.get__MXMLDescriptor.apply(this);
        /** @type {Array} */
        var mxmldd = [
          org.apache.royale.jewel.supportClasses.card.CardHeader,
          2,
          '_id',
          true,
          '$ID_15_3',
          'itemsVerticalAlign',
          true,
          'itemsCenter',
          0,
          0,
          [
            org.apache.royale.jewel.supportClasses.bar.BarSection,
            2,
            '_id',
            true,
            '$ID_15_0',
            'itemsHorizontalAlign',
            true,
            'itemsLeft',
            0,
            0,
            [
              org.apache.royale.jewel.Label,
              2,
              'id',
              true,
              'name',
              'text',
              true,
              'Jewel Simple Card',
              0,
              0,
              null
            ],
            org.apache.royale.jewel.supportClasses.bar.BarSection,
            2,
            '_id',
            true,
            '$ID_15_2',
            'itemsHorizontalAlign',
            true,
            'itemsRight',
            0,
            0,
            [
              org.apache.royale.html.elements.I,
              2,
              '_id',
              true,
              '$ID_15_1',
              'class',
              true,
              'fa-solid fa-xmark',
              0,
              1,
              'click',
              this.$EH_15_1,
              null
            ]
          ],
          org.apache.royale.jewel.Image,
          3,
          'id',
          true,
          'img',
          'height',
          true,
          100,
          'className',
          true,
          'shoppingProductImg',
          0,
          0,
          null,
          org.apache.royale.jewel.Label,
          2,
          'id',
          true,
          'price',
          'text',
          true,
          'Jewel Simple Card',
          0,
          0,
          null,
          com.unhurdle.spectrum.Stepper,
          3,
          'id',
          true,
          'qt',
          'keyboardFocused',
          true,
          false,
          'min',
          true,
          0,
          0,
          1,
          'change',
          this.$EH_15_2,
          null
        ];
        if (arr)
          this.mxmldd = arr.concat(mxmldd);
        else
          this.mxmldd = mxmldd;
      }
      return this.mxmldd;
    }
  }
});
/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
views.actionitemviews.shoppingcart.CartItem.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'CartItem', qName: 'views.actionitemviews.shoppingcart.CartItem', kind: 'class'  }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
views.actionitemviews.shoppingcart.CartItem.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'data': { type: 'Object', access: 'writeonly', declaredBy: 'views.actionitemviews.shoppingcart.CartItem'},
        'name': { type: 'org.apache.royale.jewel.Label', access: 'readwrite', declaredBy: 'views.actionitemviews.shoppingcart.CartItem'},
        'img': { type: 'org.apache.royale.jewel.Image', access: 'readwrite', declaredBy: 'views.actionitemviews.shoppingcart.CartItem'},
        'price': { type: 'org.apache.royale.jewel.Label', access: 'readwrite', declaredBy: 'views.actionitemviews.shoppingcart.CartItem'},
        'qt': { type: 'com.unhurdle.spectrum.Stepper', access: 'readwrite', declaredBy: 'views.actionitemviews.shoppingcart.CartItem'}
      };
    },
    methods: function () {
      return {
        'CartItem': { type: '', declaredBy: 'views.actionitemviews.shoppingcart.CartItem'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
views.actionitemviews.shoppingcart.CartItem.prototype.ROYALE_COMPILE_FLAGS = 9;
/**
 * Provide reflection support for distinguishing dynamic fields on class object (static)
 * @const
 * @type {Array<string>}
 */
views.actionitemviews.shoppingcart.CartItem.prototype.ROYALE_INITIAL_STATICS = Object.keys(views.actionitemviews.shoppingcart.CartItem);



//# sourceMappingURL=./CartItem.js.map
