/**
 * Generated by Apache Royale Compiler from views/actionitemviews/shoppingcart/Controller.as
 * views.actionitemviews.shoppingcart.Controller
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('views.actionitemviews.shoppingcart.Controller');
/* Royale Dependency List: com.model.ServiceLoader,com.unhurdle.spectrum.Toast,org.apache.royale.debugging.throwError,org.apache.royale.events.ValueChangeEvent,views.actionitemviews.shoppingcart.CartItem,views.actionitemviews.shoppingcart.Product,views.actionitemviews.shoppingcart.ShoppingMain,org.apache.royale.utils.Language,XML*/

goog.require('org.apache.royale.events.EventDispatcher');



/**
 * @constructor
 * @extends {org.apache.royale.events.EventDispatcher}
 * @param {views.actionitemviews.shoppingcart.ShoppingMain} view
 */
views.actionitemviews.shoppingcart.Controller = function(view) {
  // Compiler generated Binding support implementation:
  views.actionitemviews.shoppingcart.Controller.base(this, 'constructor');
  
  
  this.views_actionitemviews_shoppingcart_Controller_cartItems = [];
  this.views_actionitemviews_shoppingcart_Controller__view = view;
  this.views_actionitemviews_shoppingcart_Controller__view.cartArea.height -= this.views_actionitemviews_shoppingcart_Controller__view.checkoutArea.height;
  this.views_actionitemviews_shoppingcart_Controller_loadData();
  this.views_actionitemviews_shoppingcart_Controller_setupCartDropTarget();
};
// Compiler generated Binding support implementation:
goog.inherits(views.actionitemviews.shoppingcart.Controller, org.apache.royale.events.EventDispatcher);


/**
 * @private
 * @type {views.actionitemviews.shoppingcart.ShoppingMain}
 */
views.actionitemviews.shoppingcart.Controller.prototype.views_actionitemviews_shoppingcart_Controller__view = null;


/**
 * @private
 * @type {Array}
 */
views.actionitemviews.shoppingcart.Controller.prototype.views_actionitemviews_shoppingcart_Controller_cartItems = null;


/**
 * @type {JSON}
 */
views.actionitemviews.shoppingcart.Controller.prototype.products_ = null;


/**
 * @private
 * @type {number}
 */
views.actionitemviews.shoppingcart.Controller.prototype.views_actionitemviews_shoppingcart_Controller_pIdx = 0;


/**
 * @private
 */
views.actionitemviews.shoppingcart.Controller.prototype.views_actionitemviews_shoppingcart_Controller_loadData = function() {
  var /** @type {com.model.ServiceLoader} */ sldr = new com.model.ServiceLoader();
  sldr.loadJData("config/ShoppingProduct.json", org.apache.royale.utils.Language.closure(this.views_actionitemviews_shoppingcart_Controller_loadHandler, this, 'views_actionitemviews_shoppingcart_Controller_loadHandler'), com.model.ServiceLoader.DATA_TYPE_JSON, org.apache.royale.utils.Language.closure(this.views_actionitemviews_shoppingcart_Controller_errorHandler, this, 'views_actionitemviews_shoppingcart_Controller_errorHandler'), false);
};


/**
 * @private
 * @param {JSON} d
 */
views.actionitemviews.shoppingcart.Controller.prototype.views_actionitemviews_shoppingcart_Controller_loadHandler = function(d) {
  this.products = d;
  this.views_actionitemviews_shoppingcart_Controller_addPid();
  this.views_actionitemviews_shoppingcart_Controller_renderProductList();
};


/**
 * @private
 */
views.actionitemviews.shoppingcart.Controller.prototype.views_actionitemviews_shoppingcart_Controller_addPid = function() {
  var foreachiter0_target = this.products;
  for (var foreachiter0 in foreachiter0_target) 
  {
  var product = foreachiter0_target[foreachiter0];
  {
    product.id = this.views_actionitemviews_shoppingcart_Controller_pIdx.toString();
    this.views_actionitemviews_shoppingcart_Controller_pIdx++;
  }}
  
};


/**
 * @private
 */
views.actionitemviews.shoppingcart.Controller.prototype.views_actionitemviews_shoppingcart_Controller_errorHandler = function() {
  org.apache.royale.debugging.throwError("failed to load shopping data");
};


/**
 * @private
 */
views.actionitemviews.shoppingcart.Controller.prototype.views_actionitemviews_shoppingcart_Controller_renderProductList = function() {
  var foreachiter1_target = this.products;
  for (var foreachiter1 in foreachiter1_target) 
  {
  var product = foreachiter1_target[foreachiter1];
  {
    var /** @type {views.actionitemviews.shoppingcart.Product} */ p = new views.actionitemviews.shoppingcart.Product();
    p.data = product;
    this.views_actionitemviews_shoppingcart_Controller__view.productList.addElement(p);
  }}
  
};


/**
 * @private
 */
views.actionitemviews.shoppingcart.Controller.prototype.views_actionitemviews_shoppingcart_Controller_setupCartDropTarget = function() {
  var self = this;
  this.views_actionitemviews_shoppingcart_Controller__view.cartArea.element.addEventListener("dragover", function(e) {
    e.preventDefault();
  });
  this.views_actionitemviews_shoppingcart_Controller__view.cartArea.element.addEventListener("drop", function(e) {
    var /** @type {string} */ id = org.apache.royale.utils.Language.string(e.dataTransfer.getData("text/plain"));
    self.views_actionitemviews_shoppingcart_Controller_addToCart(id);
  });
};


/**
 * @private
 * @param {string} id
 */
views.actionitemviews.shoppingcart.Controller.prototype.views_actionitemviews_shoppingcart_Controller_addToCart = function(id) {
  var self = this;
  var /** @type {Object} */ existing = this.views_actionitemviews_shoppingcart_Controller_cartItems.find(function(item, index, arr) {
    return item.id == id;
  });
  var /** @type {views.actionitemviews.shoppingcart.Product} */ p = this.views_actionitemviews_shoppingcart_Controller_findProductById(id);
  if (parseInt(p.qt.text, 0) == 0) {
    p.alpha = 0.5;
    var /** @type {com.unhurdle.spectrum.Toast} */ snk = new com.unhurdle.spectrum.Toast();
    snk.flavor = com.unhurdle.spectrum.Toast.INFO;
    snk.text = "No more items left in stock";
    snk.autoClose = 2000;
    snk.show();
    return;
  }
  var /** @type {number} */ qty = (parseInt(p.qt.text, 0)) >> 0;
  p.qt.text = (qty - 1).toString();
  if (existing) {
    existing.qty++;
  } else {
    var foreachiter2_target = this.products;
    for (var foreachiter2 in foreachiter2_target) 
    {
    var product = foreachiter2_target[foreachiter2];
    {
      if (product.id == id) {
        var /** @type {Object} */ item = {id:product.id, name:product.title, price:product.price, img:product.filename, qty:1};
        this.views_actionitemviews_shoppingcart_Controller_cartItems.push(item);
        break;
      }
    }}
    
  }
  this.views_actionitemviews_shoppingcart_Controller_updateCartUI();
};


/**
 * @private
 */
views.actionitemviews.shoppingcart.Controller.prototype.views_actionitemviews_shoppingcart_Controller_updateCartUI = function() {
  while (this.views_actionitemviews_shoppingcart_Controller__view.cartArea.numElements > 0) {
    this.views_actionitemviews_shoppingcart_Controller__view.cartArea.removeElement(this.views_actionitemviews_shoppingcart_Controller__view.cartArea.getElementAt(0));
  }
  var /** @type {number} */ total = 0;
  for (var /** @type {number} */ i = 0; i < this.views_actionitemviews_shoppingcart_Controller_cartItems.length; i++) {
    var /** @type {Object} */ item = this.views_actionitemviews_shoppingcart_Controller_cartItems[i];
    total += item.price * item.qty;
    var /** @type {views.actionitemviews.shoppingcart.CartItem} */ cItem = new views.actionitemviews.shoppingcart.CartItem();
    item.removeFunc = org.apache.royale.utils.Language.closure(this.views_actionitemviews_shoppingcart_Controller_removeItemFromCart, this, 'views_actionitemviews_shoppingcart_Controller_removeItemFromCart');
    cItem.data = item;
    this.views_actionitemviews_shoppingcart_Controller__view.cartArea.addElement(cItem);
  }
  this.views_actionitemviews_shoppingcart_Controller__view.totalLabel.text = "Total: $" + total.toFixed(2);
};


/**
 * @private
 * @param {string} id
 */
views.actionitemviews.shoppingcart.Controller.prototype.views_actionitemviews_shoppingcart_Controller_removeItemFromCart = function(id) {
  var self = this;
  this.views_actionitemviews_shoppingcart_Controller_cartItems = this.views_actionitemviews_shoppingcart_Controller_cartItems.filter(function(item, index, arr) {
    return item.id != id;
  });
  this.views_actionitemviews_shoppingcart_Controller_updateCartUI();
};


/**
 * @private
 * @param {string} id
 * @return {views.actionitemviews.shoppingcart.Product}
 */
views.actionitemviews.shoppingcart.Controller.prototype.views_actionitemviews_shoppingcart_Controller_findProductById = function(id) {
  var /** @type {number} */ items = this.views_actionitemviews_shoppingcart_Controller__view.productList.numElements;
  for (var /** @type {number} */ i = 0; i < items; i++) {
    var /** @type {views.actionitemviews.shoppingcart.Product} */ product = this.views_actionitemviews_shoppingcart_Controller__view.productList.getElementAt(i);
    if (product.id == id) {
      return product;
    }
  }
  return null;
};Object.defineProperties(views.actionitemviews.shoppingcart.Controller.prototype, /** @lends {views.actionitemviews.shoppingcart.Controller.prototype} */ {
/**
 * @type {JSON}
 */
products: {
/** @this {views.actionitemviews.shoppingcart.Controller} */
  get: function() {
  return this.products_;
  },

/** @this {views.actionitemviews.shoppingcart.Controller} */
set: function(value) {
if (value != this.products_) {
    var oldValue = this.products_;
    this.products_ = value;
    this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(
         this, "products", oldValue, value));
}
}}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
views.actionitemviews.shoppingcart.Controller.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'Controller', qName: 'views.actionitemviews.shoppingcart.Controller', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
views.actionitemviews.shoppingcart.Controller.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'products': { type: 'JSON', access: 'readwrite', declaredBy: 'views.actionitemviews.shoppingcart.Controller'}
      };
    },
    methods: function () {
      return {
        'Controller': { type: '', declaredBy: 'views.actionitemviews.shoppingcart.Controller', parameters: function () { return [ 'views.actionitemviews.shoppingcart.ShoppingMain', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
views.actionitemviews.shoppingcart.Controller.prototype.ROYALE_COMPILE_FLAGS = 9;
