/**
 * Generated by Apache Royale Compiler from views/actionitemviews/games/keybordgame/KeyGame.mxml
 * views.actionitemviews.games.keybordgame.KeyGame
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('views.actionitemviews.games.keybordgame.KeyGame');
/* Royale Dependency List: org.apache.royale.svg.elements.Svg,org.apache.royale.svg.elements.Rect,org.apache.royale.jewel.Label,org.apache.royale.jewel.Button,org.apache.royale.events.Event,views.actionitemviews.games.keybordgame.Controller,XML*/

goog.require('org.apache.royale.jewel.View');



/**
 * @constructor
 * @extends {org.apache.royale.jewel.View}
 */
views.actionitemviews.games.keybordgame.KeyGame = function() {
  views.actionitemviews.games.keybordgame.KeyGame.base(this, 'constructor');
  
  /**
   * @private
   * @type {org.apache.royale.svg.elements.Svg}
   */
  this.$ID_11_0;
  
  /**
   * @private
   * @type {org.apache.royale.svg.elements.Rect}
   */
  this.warningArea_;
  
  /**
   * @private
   * @type {org.apache.royale.jewel.Label}
   */
  this.gmOvr_;
  
  /**
   * @private
   * @type {org.apache.royale.jewel.Label}
   */
  this.scoreLabel_;
  
  /**
   * @private
   * @type {org.apache.royale.jewel.Button}
   */
  this.resetBtn_;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldd;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldp;

  this.generateMXMLAttributes([
    2,
    'width',
    true,
    800,
    'height',
    true,
    600,
    0,
    1,
    'initComplete',
    this.$EH_11_0
  ]);
  
};
goog.inherits(views.actionitemviews.games.keybordgame.KeyGame, org.apache.royale.jewel.View);




/**
 * @private
 * @type {views.actionitemviews.games.keybordgame.Controller}
 */
views.actionitemviews.games.keybordgame.KeyGame.prototype.views_actionitemviews_games_keybordgame_KeyGame_gController = null;


/**
 * @private
 */
views.actionitemviews.games.keybordgame.KeyGame.prototype.views_actionitemviews_games_keybordgame_KeyGame_init = function() {
  this.views_actionitemviews_games_keybordgame_KeyGame_gController = new views.actionitemviews.games.keybordgame.Controller(this);
};


/**
 */
views.actionitemviews.games.keybordgame.KeyGame.prototype.disposeMe = function() {
  this.views_actionitemviews_games_keybordgame_KeyGame_gController.disposeGame();
};


/**
 * @export
 * @param {org.apache.royale.events.Event} event
 */
views.actionitemviews.games.keybordgame.KeyGame.prototype.$EH_11_0 = function(event)
{
  this.views_actionitemviews_games_keybordgame_KeyGame_init();
};


Object.defineProperties(views.actionitemviews.games.keybordgame.KeyGame.prototype, /** @lends {views.actionitemviews.games.keybordgame.KeyGame.prototype} */ {
  warningArea: {
    /** @this {views.actionitemviews.games.keybordgame.KeyGame} */
    get: function() {
      return this.warningArea_;
    },
    /** @this {views.actionitemviews.games.keybordgame.KeyGame} */
    set: function(value) {
      if (value != this.warningArea_) {
        this.warningArea_ = value;
        this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(this, 'warningArea', null, value));
      }
    }
  },
  gmOvr: {
    /** @this {views.actionitemviews.games.keybordgame.KeyGame} */
    get: function() {
      return this.gmOvr_;
    },
    /** @this {views.actionitemviews.games.keybordgame.KeyGame} */
    set: function(value) {
      if (value != this.gmOvr_) {
        this.gmOvr_ = value;
        this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(this, 'gmOvr', null, value));
      }
    }
  },
  scoreLabel: {
    /** @this {views.actionitemviews.games.keybordgame.KeyGame} */
    get: function() {
      return this.scoreLabel_;
    },
    /** @this {views.actionitemviews.games.keybordgame.KeyGame} */
    set: function(value) {
      if (value != this.scoreLabel_) {
        this.scoreLabel_ = value;
        this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(this, 'scoreLabel', null, value));
      }
    }
  },
  resetBtn: {
    /** @this {views.actionitemviews.games.keybordgame.KeyGame} */
    get: function() {
      return this.resetBtn_;
    },
    /** @this {views.actionitemviews.games.keybordgame.KeyGame} */
    set: function(value) {
      if (value != this.resetBtn_) {
        this.resetBtn_ = value;
        this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(this, 'resetBtn', null, value));
      }
    }
  },
  'MXMLDescriptor': {
    /** @this {views.actionitemviews.games.keybordgame.KeyGame} */
    get: function() {
      if (this.mxmldd == undefined)
      {
        /** @type {Array} */
        var arr = views.actionitemviews.games.keybordgame.KeyGame.superClass_.get__MXMLDescriptor.apply(this);
        /** @type {Array} */
        var mxmldd = [
          org.apache.royale.svg.elements.Svg,
          3,
          '_id',
          true,
          '$ID_11_0',
          'percentWidth',
          true,
          100,
          'percentHeight',
          true,
          100,
          0,
          0,
          [
            org.apache.royale.svg.elements.Rect,
            6,
            'id',
            true,
            'warningArea',
            'percentWidth',
            true,
            100,
            'height',
            true,
            10,
            'x',
            true,
            0,
            'y',
            true,
            600,
            'fill',
            true,
            'green',
            0,
            0,
            null
          ],
          org.apache.royale.jewel.Label,
          4,
          'id',
          true,
          'gmOvr',
          'text',
          true,
          'GAME OVER',
          'className',
          true,
          'gameOverLbl',
          'visible',
          true,
          false,
          0,
          0,
          null,
          org.apache.royale.jewel.Label,
          3,
          'id',
          true,
          'scoreLabel',
          'text',
          true,
          'Score: 00',
          'className',
          true,
          'scoreLbl',
          0,
          0,
          null,
          org.apache.royale.jewel.Button,
          4,
          'id',
          true,
          'resetBtn',
          'text',
          true,
          'Start Again !!!',
          'visible',
          true,
          false,
          'className',
          true,
          'gameResetBtn',
          0,
          0,
          null
        ];
        if (arr)
          this.mxmldd = arr.concat(mxmldd);
        else
          this.mxmldd = mxmldd;
      }
      return this.mxmldd;
    }
  }
});
/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
views.actionitemviews.games.keybordgame.KeyGame.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'KeyGame', qName: 'views.actionitemviews.games.keybordgame.KeyGame', kind: 'class'  }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
views.actionitemviews.games.keybordgame.KeyGame.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'warningArea': { type: 'org.apache.royale.svg.elements.Rect', access: 'readwrite', declaredBy: 'views.actionitemviews.games.keybordgame.KeyGame'},
        'gmOvr': { type: 'org.apache.royale.jewel.Label', access: 'readwrite', declaredBy: 'views.actionitemviews.games.keybordgame.KeyGame'},
        'scoreLabel': { type: 'org.apache.royale.jewel.Label', access: 'readwrite', declaredBy: 'views.actionitemviews.games.keybordgame.KeyGame'},
        'resetBtn': { type: 'org.apache.royale.jewel.Button', access: 'readwrite', declaredBy: 'views.actionitemviews.games.keybordgame.KeyGame'}
      };
    },
    methods: function () {
      return {
        'disposeMe': { type: 'void', declaredBy: 'views.actionitemviews.games.keybordgame.KeyGame'},
        'KeyGame': { type: '', declaredBy: 'views.actionitemviews.games.keybordgame.KeyGame'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
views.actionitemviews.games.keybordgame.KeyGame.prototype.ROYALE_COMPILE_FLAGS = 9;
