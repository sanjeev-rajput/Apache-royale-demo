/**
 * Generated by Apache Royale Compiler from views/actionitemviews/games/Game.mxml
 * views.actionitemviews.games.Game
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('views.actionitemviews.games.Game');
/* Royale Dependency List: com.unhurdle.spectrum.ActionGroup,com.unhurdle.spectrum.ActionButton,org.apache.royale.jewel.Container,org.apache.royale.events.MouseEvent,views.actionitemviews.games.keybordgame.KeyGame,views.actionitemviews.games.mousegame.MouseGame,XML*/

goog.require('org.apache.royale.jewel.VGroup');



/**
 * @constructor
 * @extends {org.apache.royale.jewel.VGroup}
 */
views.actionitemviews.games.Game = function() {
  views.actionitemviews.games.Game.base(this, 'constructor');
  
  /**
   * @private
   * @type {com.unhurdle.spectrum.ActionGroup}
   */
  this.actionBtnGrp_;
  
  /**
   * @private
   * @type {com.unhurdle.spectrum.ActionButton}
   */
  this.kbdGame_;
  
  /**
   * @private
   * @type {com.unhurdle.spectrum.ActionButton}
   */
  this.mGame_;
  
  /**
   * @private
   * @type {org.apache.royale.jewel.Container}
   */
  this.gameCtr_;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldd;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldp;

  this.generateMXMLAttributes([
    3,
    'itemsHorizontalAlign',
    true,
    'itemsCenter',
    'percentHeight',
    true,
    100.0,
    'percentWidth',
    true,
    100.0,
    0,
    0
  ]);
  
};
goog.inherits(views.actionitemviews.games.Game, org.apache.royale.jewel.VGroup);




/**
 * @private
 * @type {org.apache.royale.jewel.View}
 */
views.actionitemviews.games.Game.prototype.views_actionitemviews_games_Game_currentGame = null;


/**
 * @private
 * @type {com.unhurdle.spectrum.ActionButton}
 */
views.actionitemviews.games.Game.prototype.views_actionitemviews_games_Game_actionBtn = null;


/**
 * @private
 */
views.actionitemviews.games.Game.prototype.views_actionitemviews_games_Game_init = function() {
};


/**
 * @private
 * @param {org.apache.royale.events.MouseEvent} e
 */
views.actionitemviews.games.Game.prototype.views_actionitemviews_games_Game_actionBtnEventHandler = function(e) {
  if (this.views_actionitemviews_games_Game_actionBtn)
    this.views_actionitemviews_games_Game_actionBtn.selected = false;
  this.views_actionitemviews_games_Game_actionBtn = org.apache.royale.utils.Language.as(e.target, com.unhurdle.spectrum.ActionButton, true);
  this.views_actionitemviews_games_Game_actionBtn.selected = true;
  if (this.views_actionitemviews_games_Game_currentGame) {
    this.disposeMe();
    this.gameCtr.removeElement(this.views_actionitemviews_games_Game_currentGame);
  }
  if (this.views_actionitemviews_games_Game_actionBtn == this.kbdGame) {
    this.views_actionitemviews_games_Game_currentGame = new views.actionitemviews.games.keybordgame.KeyGame();
  } else if (this.views_actionitemviews_games_Game_actionBtn == this.mGame) {
    this.views_actionitemviews_games_Game_currentGame = new views.actionitemviews.games.mousegame.MouseGame();
  }
  this.gameCtr.addElement(this.views_actionitemviews_games_Game_currentGame);
};


/**
 */
views.actionitemviews.games.Game.prototype.disposeMe = function() {
  if (org.apache.royale.utils.Language.is(this.views_actionitemviews_games_Game_currentGame, views.actionitemviews.games.keybordgame.KeyGame))
    org.apache.royale.utils.Language.as(this.views_actionitemviews_games_Game_currentGame, views.actionitemviews.games.keybordgame.KeyGame, true).disposeMe();
  if (org.apache.royale.utils.Language.is(this.views_actionitemviews_games_Game_currentGame, views.actionitemviews.games.mousegame.MouseGame))
    org.apache.royale.utils.Language.as(this.views_actionitemviews_games_Game_currentGame, views.actionitemviews.games.mousegame.MouseGame, true).disposeMe();
};


/**
 * @export
 * @param {org.apache.royale.events.MouseEvent} event
 */
views.actionitemviews.games.Game.prototype.$EH_13_0 = function(event)
{
  this.views_actionitemviews_games_Game_actionBtnEventHandler(event);
};


/**
 * @export
 * @param {org.apache.royale.events.MouseEvent} event
 */
views.actionitemviews.games.Game.prototype.$EH_13_1 = function(event)
{
  this.views_actionitemviews_games_Game_actionBtnEventHandler(event);
};


Object.defineProperties(views.actionitemviews.games.Game.prototype, /** @lends {views.actionitemviews.games.Game.prototype} */ {
  actionBtnGrp: {
    /** @this {views.actionitemviews.games.Game} */
    get: function() {
      return this.actionBtnGrp_;
    },
    /** @this {views.actionitemviews.games.Game} */
    set: function(value) {
      if (value != this.actionBtnGrp_) {
        this.actionBtnGrp_ = value;
        this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(this, 'actionBtnGrp', null, value));
      }
    }
  },
  kbdGame: {
    /** @this {views.actionitemviews.games.Game} */
    get: function() {
      return this.kbdGame_;
    },
    /** @this {views.actionitemviews.games.Game} */
    set: function(value) {
      if (value != this.kbdGame_) {
        this.kbdGame_ = value;
        this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(this, 'kbdGame', null, value));
      }
    }
  },
  mGame: {
    /** @this {views.actionitemviews.games.Game} */
    get: function() {
      return this.mGame_;
    },
    /** @this {views.actionitemviews.games.Game} */
    set: function(value) {
      if (value != this.mGame_) {
        this.mGame_ = value;
        this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(this, 'mGame', null, value));
      }
    }
  },
  gameCtr: {
    /** @this {views.actionitemviews.games.Game} */
    get: function() {
      return this.gameCtr_;
    },
    /** @this {views.actionitemviews.games.Game} */
    set: function(value) {
      if (value != this.gameCtr_) {
        this.gameCtr_ = value;
        this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(this, 'gameCtr', null, value));
      }
    }
  },
  'MXMLDescriptor': {
    /** @this {views.actionitemviews.games.Game} */
    get: function() {
      if (this.mxmldd == undefined)
      {
        /** @type {Array} */
        var arr = views.actionitemviews.games.Game.superClass_.get__MXMLDescriptor.apply(this);
        /** @type {Array} */
        var mxmldd = [
          com.unhurdle.spectrum.ActionGroup,
          2,
          'id',
          true,
          'actionBtnGrp',
          'compact',
          true,
          true,
          0,
          0,
          [
            com.unhurdle.spectrum.ActionButton,
            2,
            'id',
            true,
            'kbdGame',
            'text',
            true,
            'Ply by keyboard',
            0,
            1,
            'click',
            this.$EH_13_0,
            null,
            com.unhurdle.spectrum.ActionButton,
            2,
            'id',
            true,
            'mGame',
            'text',
            true,
            'Play by mouse',
            0,
            1,
            'click',
            this.$EH_13_1,
            null
          ],
          org.apache.royale.jewel.Container,
          4,
          'id',
          true,
          'gameCtr',
          'width',
          true,
          800,
          'height',
          true,
          620,
          'className',
          true,
          'gameArea',
          0,
          0,
          null
        ];
        if (arr)
          this.mxmldd = arr.concat(mxmldd);
        else
          this.mxmldd = mxmldd;
      }
      return this.mxmldd;
    }
  }
});
/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
views.actionitemviews.games.Game.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'Game', qName: 'views.actionitemviews.games.Game', kind: 'class'  }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
views.actionitemviews.games.Game.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'actionBtnGrp': { type: 'com.unhurdle.spectrum.ActionGroup', access: 'readwrite', declaredBy: 'views.actionitemviews.games.Game'},
        'kbdGame': { type: 'com.unhurdle.spectrum.ActionButton', access: 'readwrite', declaredBy: 'views.actionitemviews.games.Game'},
        'mGame': { type: 'com.unhurdle.spectrum.ActionButton', access: 'readwrite', declaredBy: 'views.actionitemviews.games.Game'},
        'gameCtr': { type: 'org.apache.royale.jewel.Container', access: 'readwrite', declaredBy: 'views.actionitemviews.games.Game'}
      };
    },
    methods: function () {
      return {
        'disposeMe': { type: 'void', declaredBy: 'views.actionitemviews.games.Game'},
        'Game': { type: '', declaredBy: 'views.actionitemviews.games.Game'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
views.actionitemviews.games.Game.prototype.ROYALE_COMPILE_FLAGS = 9;



//# sourceMappingURL=./Game.js.map
