/**
 * Generated by Apache Royale Compiler from com/extjavascript/cryp/CryptoJS.as
 * com.extjavascript.cryp.CryptoJS
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('com.extjavascript.cryp.CryptoJS');
/* Royale Dependency List: XML*/



/** 
 * <inject_script>
 * var script = document.createElement("script");
 * script.setAttribute("src", "com/extjavascript/cryp/aes.js");
 * document.head.appendChild(script);
 * </inject_script>
 * @constructor
 */
com.extjavascript.cryp.CryptoJS = function() {
};


/**
 * @nocollapse
 * @param {string} txt
 * @param {string} key
 * @return {string}
 */
com.extjavascript.cryp.CryptoJS.encrypt = function(txt, key) {
  return com.extjavascript.cryp.CryptoJS.cryptoObj['AES']["encrypt"](txt, key)["toString"]();
};


/**
 * @nocollapse
 * @param {string} txt
 * @param {string} key
 * @return {string}
 */
com.extjavascript.cryp.CryptoJS.decrypt = function(txt, key) {
  return com.extjavascript.cryp.CryptoJS.cryptoObj['AES']["decrypt"](txt, key)["toString"](com.extjavascript.cryp.CryptoJS.cryptoObj['enc']['Utf8']);
};


/**
 * @nocollapse
 * @type {Object}
 */
com.extjavascript.cryp.CryptoJS.cryptoObj;


com.extjavascript.cryp.CryptoJS.get__cryptoObj = function() {
  return window["CryptoJS"];
};


Object.defineProperties(com.extjavascript.cryp.CryptoJS, /** @lends {com.extjavascript.cryp.CryptoJS} */ {
/**
 * @type {Object}
 */
cryptoObj: {
get: com.extjavascript.cryp.CryptoJS.get__cryptoObj}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
com.extjavascript.cryp.CryptoJS.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'CryptoJS', qName: 'com.extjavascript.cryp.CryptoJS', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
com.extjavascript.cryp.CryptoJS.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    methods: function () {
      return {
        '|encrypt': { type: 'String', declaredBy: 'com.extjavascript.cryp.CryptoJS', parameters: function () { return [ 'String', false ,'String', false ]; }},
        '|decrypt': { type: 'String', declaredBy: 'com.extjavascript.cryp.CryptoJS', parameters: function () { return [ 'String', false ,'String', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
com.extjavascript.cryp.CryptoJS.prototype.ROYALE_COMPILE_FLAGS = 9;
/**
 * Provide reflection support for distinguishing dynamic fields on class object (static)
 * @const
 * @type {Array<string>}
 */
com.extjavascript.cryp.CryptoJS.prototype.ROYALE_INITIAL_STATICS = Object.keys(com.extjavascript.cryp.CryptoJS);

//# sourceMappingURL=./CryptoJS.js.map
