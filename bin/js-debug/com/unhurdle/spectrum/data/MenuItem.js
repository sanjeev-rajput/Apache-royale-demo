/**
 * Generated by Apache Royale Compiler from com/unhurdle/spectrum/data/MenuItem.as
 * com.unhurdle.spectrum.data.MenuItem
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('com.unhurdle.spectrum.data.MenuItem');
/* Royale Dependency List: */

goog.require('com.unhurdle.spectrum.data.ListItem');
goog.require('com.unhurdle.spectrum.data.IMenuItem');



/**
 * @constructor
 * @extends {com.unhurdle.spectrum.data.ListItem}
 * @implements {com.unhurdle.spectrum.data.IMenuItem}
 * @param {string=} text
 */
com.unhurdle.spectrum.data.MenuItem = function(text) {
  text = typeof text !== 'undefined' ? text : null;
  com.unhurdle.spectrum.data.MenuItem.base(this, 'constructor', text);
};
goog.inherits(com.unhurdle.spectrum.data.MenuItem, com.unhurdle.spectrum.data.ListItem);


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.data.MenuItem.prototype.com_unhurdle_spectrum_data_MenuItem__isDivider = false;


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.data.MenuItem.prototype.com_unhurdle_spectrum_data_MenuItem__isOpen = false;


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.data.MenuItem.prototype.com_unhurdle_spectrum_data_MenuItem__isHeading = false;


/**
 * @private
 * @type {Array}
 */
com.unhurdle.spectrum.data.MenuItem.prototype.com_unhurdle_spectrum_data_MenuItem__subMenu = null;


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.data.MenuItem.prototype.isDivider;


com.unhurdle.spectrum.data.MenuItem.prototype.get__isDivider = function() {
  return this.com_unhurdle_spectrum_data_MenuItem__isDivider;
};


com.unhurdle.spectrum.data.MenuItem.prototype.set__isDivider = function(value) {
  this.com_unhurdle_spectrum_data_MenuItem__isDivider = value;
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.data.MenuItem.prototype.isOpen;


com.unhurdle.spectrum.data.MenuItem.prototype.get__isOpen = function() {
  return this.com_unhurdle_spectrum_data_MenuItem__isOpen;
};


com.unhurdle.spectrum.data.MenuItem.prototype.set__isOpen = function(value) {
  this.com_unhurdle_spectrum_data_MenuItem__isOpen = value;
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.data.MenuItem.prototype.isHeading;


com.unhurdle.spectrum.data.MenuItem.prototype.get__isHeading = function() {
  return this.com_unhurdle_spectrum_data_MenuItem__isHeading;
};


com.unhurdle.spectrum.data.MenuItem.prototype.set__isHeading = function(value) {
  this.com_unhurdle_spectrum_data_MenuItem__isHeading = value;
};


/**
 * @nocollapse
 * @export
 * @type {Array}
 */
com.unhurdle.spectrum.data.MenuItem.prototype.subMenu;


com.unhurdle.spectrum.data.MenuItem.prototype.get__subMenu = function() {
  return this.com_unhurdle_spectrum_data_MenuItem__subMenu;
};


com.unhurdle.spectrum.data.MenuItem.prototype.set__subMenu = function(value) {
  this.com_unhurdle_spectrum_data_MenuItem__subMenu = value;
};


Object.defineProperties(com.unhurdle.spectrum.data.MenuItem.prototype, /** @lends {com.unhurdle.spectrum.data.MenuItem.prototype} */ {
/**
 * @type {boolean}
 */
isDivider: {
get: com.unhurdle.spectrum.data.MenuItem.prototype.get__isDivider,
set: com.unhurdle.spectrum.data.MenuItem.prototype.set__isDivider},
/**
 * @type {boolean}
 */
isOpen: {
get: com.unhurdle.spectrum.data.MenuItem.prototype.get__isOpen,
set: com.unhurdle.spectrum.data.MenuItem.prototype.set__isOpen},
/**
 * @type {boolean}
 */
isHeading: {
get: com.unhurdle.spectrum.data.MenuItem.prototype.get__isHeading,
set: com.unhurdle.spectrum.data.MenuItem.prototype.set__isHeading},
/**
 * @type {Array}
 */
subMenu: {
get: com.unhurdle.spectrum.data.MenuItem.prototype.get__subMenu,
set: com.unhurdle.spectrum.data.MenuItem.prototype.set__subMenu}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
com.unhurdle.spectrum.data.MenuItem.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'MenuItem', qName: 'com.unhurdle.spectrum.data.MenuItem', kind: 'class' }], interfaces: [com.unhurdle.spectrum.data.IMenuItem] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
com.unhurdle.spectrum.data.MenuItem.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'isDivider': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.data.MenuItem'},
        'isOpen': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.data.MenuItem'},
        'isHeading': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.data.MenuItem'},
        'subMenu': { type: 'Array', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.data.MenuItem'}
      };
    },
    methods: function () {
      return {
        'MenuItem': { type: '', declaredBy: 'com.unhurdle.spectrum.data.MenuItem', parameters: function () { return [ 'String', true ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
com.unhurdle.spectrum.data.MenuItem.prototype.ROYALE_COMPILE_FLAGS = 11;
