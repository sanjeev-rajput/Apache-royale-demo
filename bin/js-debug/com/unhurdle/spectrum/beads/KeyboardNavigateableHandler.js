/**
 * Generated by Apache Royale Compiler from com/unhurdle/spectrum/beads/KeyboardNavigateableHandler.as
 * com.unhurdle.spectrum.beads.KeyboardNavigateableHandler
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('com.unhurdle.spectrum.beads.KeyboardNavigateableHandler');
/* Royale Dependency List: com.unhurdle.spectrum.ListModel,com.unhurdle.spectrum.data.IMenuItem,com.unhurdle.spectrum.interfaces.IKeyboardNavigateable,com.unhurdle.spectrum.renderers.DataItemRenderer,org.apache.royale.core.IParent,org.apache.royale.core.IStrand,org.apache.royale.core.UIBase,org.apache.royale.debugging.assert,org.apache.royale.events.Event,org.apache.royale.events.KeyboardEvent,org.apache.royale.events.utils.NavigationKeys,org.apache.royale.events.utils.WhitespaceKeys,org.apache.royale.html.beads.DataContainerView,org.apache.royale.html.beads.IListView,org.apache.royale.utils.sendStrandEvent,org.apache.royale.utils.Language*/

goog.require('org.apache.royale.core.Bead');
goog.require('com.unhurdle.spectrum.interfaces.IKeyboardHandler');
goog.require('org.apache.royale.core.IBead');



/**
 * @constructor
 * @extends {org.apache.royale.core.Bead}
 * @implements {org.apache.royale.core.IBead}
 * @implements {com.unhurdle.spectrum.interfaces.IKeyboardHandler}
 */
com.unhurdle.spectrum.beads.KeyboardNavigateableHandler = function() {
  com.unhurdle.spectrum.beads.KeyboardNavigateableHandler.base(this, 'constructor');
};
goog.inherits(com.unhurdle.spectrum.beads.KeyboardNavigateableHandler, org.apache.royale.core.Bead);


/**
 * @protected
 * @type {com.unhurdle.spectrum.ListModel}
 */
com.unhurdle.spectrum.beads.KeyboardNavigateableHandler.prototype.listModel = null;


/**
 * @protected
 * @type {org.apache.royale.html.beads.IListView}
 */
com.unhurdle.spectrum.beads.KeyboardNavigateableHandler.prototype.listView = null;


/**
 * @royaleignorecoercion org.apache.royale.events.IEventDispatcher
 * @protected
 * @param {com.unhurdle.spectrum.renderers.DataItemRenderer} renderer
 * @return {number}
 */
com.unhurdle.spectrum.beads.KeyboardNavigateableHandler.prototype.getRendererIndex = function(renderer) {
  if (!renderer) {
    return -1;
  }
  return this.listView.contentView.getElementIndex(renderer);
};


/**
 * @private
 * @param {number} index
 * @return {com.unhurdle.spectrum.renderers.DataItemRenderer}
 */
com.unhurdle.spectrum.beads.KeyboardNavigateableHandler.prototype.com_unhurdle_spectrum_beads_KeyboardNavigateableHandler_getRendererForIndex = function(index) {
  return this.listView.dataGroup.getItemRendererForIndex(index);
};


/**
 * @protected
 * @type {com.unhurdle.spectrum.renderers.DataItemRenderer}
 */
com.unhurdle.spectrum.beads.KeyboardNavigateableHandler.prototype.focusableItemRenderer = null;


/**
 * @protected
 * @param {org.apache.royale.events.Event} event
 */
com.unhurdle.spectrum.beads.KeyboardNavigateableHandler.prototype.handleItemsCreated = function(event) {
  if (this.focusableItemRenderer) {
    this.focusableItemRenderer.keyboardFocused = false;
    this.focusableItemRenderer.tabFocusable = false;
  }
  var /** @type {com.unhurdle.spectrum.renderers.DataItemRenderer} */ ir = this.focusableItemRenderer;
  if (!ir) {
    ir = this.com_unhurdle_spectrum_beads_KeyboardNavigateableHandler_findFirstFocusable();
  }
  if (ir) {
    ir.tabFocusable = true;
    this.focusableItemRenderer = ir;
  } else {
    this.focusableItemRenderer = null;
  }
};


/**
 * @protected
 * @param {org.apache.royale.events.Event} ev
 */
com.unhurdle.spectrum.beads.KeyboardNavigateableHandler.prototype.clickHandler = function(ev) {
};


/**
 * @protected
 * @param {org.apache.royale.events.KeyboardEvent} event
 */
com.unhurdle.spectrum.beads.KeyboardNavigateableHandler.prototype.changeValue = function(event) {
  var /** @type {number} */ index = 0;
  var /** @type {string} */ key = event.key;
  //var /** @type {number} */ index = 0;
  switch (key) {
    case org.apache.royale.events.utils.WhitespaceKeys.ENTER:
      this.listModel.selectedIndex = this.getRendererIndex(this.focusableItemRenderer);
      org.apache.royale.utils.sendStrandEvent(this._strand, "change");
      break;
    case org.apache.royale.events.utils.NavigationKeys.RIGHT:
      break;
    case org.apache.royale.events.utils.NavigationKeys.LEFT:
      break;
    case org.apache.royale.events.utils.NavigationKeys.DOWN:
      event.preventDefault();
      this.focusNext();
      break;
    case org.apache.royale.events.utils.NavigationKeys.UP:
      event.preventDefault();
      this.focusPrevious();
      break;
    default:
      if (key.length > 1) {
        return;
      }
      this.updateValue(key);
      break;
  }
};


/**
 * @protected
 * @param {org.apache.royale.events.Event} event
 */
com.unhurdle.spectrum.beads.KeyboardNavigateableHandler.prototype.handleChange = function(event) {
  var /** @type {com.unhurdle.spectrum.renderers.DataItemRenderer} */ ir = this.com_unhurdle_spectrum_beads_KeyboardNavigateableHandler_getRendererForIndex(this.listModel.selectedIndex);
  if (ir != this.focusableItemRenderer) {
    if (this.focusableItemRenderer) {
      this.focusableItemRenderer.keyboardFocused = false;
      this.focusableItemRenderer.tabFocusable = false;
    }
    if (ir) {
      ir.tabFocusable = true;
    }
    this.focusableItemRenderer = ir;
  }
  this.focusItem();
};


/**
 * @protected
 */
com.unhurdle.spectrum.beads.KeyboardNavigateableHandler.prototype.focusItem = function() {
  if (this.focusableItemRenderer) {
    this.focusableItemRenderer.pauseFocusEvents = true;
    this.focusableItemRenderer.focus();
    this.focusableItemRenderer.pauseFocusEvents = false;
  } else if (this.listModel.selectedIndex >= 0) {
    this.focusableItemRenderer = this.com_unhurdle_spectrum_beads_KeyboardNavigateableHandler_getRendererForIndex(this.listModel.selectedIndex);
    if (this.focusableItemRenderer) {
      this.focusableItemRenderer.tabFocusable = true;
      this.focusableItemRenderer.pauseFocusEvents = true;
      this.focusableItemRenderer.focus();
      this.focusableItemRenderer.pauseFocusEvents = false;
    }
  } else {
  }
};


/**
 * @protected
 */
com.unhurdle.spectrum.beads.KeyboardNavigateableHandler.prototype.focusNext = function() {
  var /** @type {number} */ startIndex = this.getRendererIndex(this.focusableItemRenderer);
  if (startIndex > -1) {
    if (!this.focusableItemRenderer.keyboardFocused) {
      startIndex--;
    }
  } else if (this.listModel.selectedIndex > -1) {
    startIndex = (this.listModel.selectedIndex - 1) >> 0;
  }
  var /** @type {number} */ index = (startIndex + 1) >> 0;
  while (index < this.listView.dataGroup.numItemRenderers && !this.canGetFocus(index)) {
    index++;
  }
  if (index >= this.listView.dataGroup.numItemRenderers) {
    index = 0;
    while (index < startIndex && !this.canGetFocus(index)) {
      index++;
    }
  }
  if (index != startIndex) {
    this.changeFocus(index);
  }
};


/**
 * @protected
 */
com.unhurdle.spectrum.beads.KeyboardNavigateableHandler.prototype.focusPrevious = function() {
  var /** @type {number} */ startIndex = this.getRendererIndex(this.focusableItemRenderer);
  if (startIndex > -1) {
    if (!this.focusableItemRenderer.keyboardFocused) {
      startIndex--;
    }
  } else if (this.listModel.selectedIndex > -1) {
    startIndex = (this.listModel.selectedIndex + 1) >> 0;
  }
  var /** @type {number} */ index = (startIndex - 1) >> 0;
  while (index > -1 && !this.canGetFocus(index)) {
    index--;
  }
  if (index < 0) {
    index = (this.listView.dataGroup.numItemRenderers - 1) >> 0;
    while (index > startIndex && !this.canGetFocus(index)) {
      index--;
    }
  }
  if (index != startIndex) {
    this.changeFocus(index);
  }
};


/**
 * @protected
 * @param {number} index
 */
com.unhurdle.spectrum.beads.KeyboardNavigateableHandler.prototype.changeFocus = function(index) {
  var /** @type {com.unhurdle.spectrum.renderers.DataItemRenderer} */ ir = this.com_unhurdle_spectrum_beads_KeyboardNavigateableHandler_getRendererForIndex(index);
  if (ir && ir == this.focusableItemRenderer) {
    this.focusableItemRenderer.keyboardFocused = true;
    return;
  }
  if (this.focusableItemRenderer) {
    this.focusableItemRenderer.keyboardFocused = false;
    this.focusableItemRenderer.tabFocusable = false;
  }
  if (ir) {
    ir.keyboardFocused = true;
    this.focusableItemRenderer = ir;
  } else {
    this.focusableItemRenderer = this.com_unhurdle_spectrum_beads_KeyboardNavigateableHandler_findFirstFocusable();
    if (this.focusableItemRenderer) {
      this.focusableItemRenderer.tabFocusable = true;
    }
  }
};


/**
 * @private
 * @return {com.unhurdle.spectrum.renderers.DataItemRenderer}
 */
com.unhurdle.spectrum.beads.KeyboardNavigateableHandler.prototype.com_unhurdle_spectrum_beads_KeyboardNavigateableHandler_findFirstFocusable = function() {
  var /** @type {number} */ idx = 0;
  while (idx < this.listView.dataGroup.numItemRenderers) {
    if (this.canGetFocus(idx)) {
      return this.com_unhurdle_spectrum_beads_KeyboardNavigateableHandler_getRendererForIndex(idx);
    }
    idx++;
  }
  return null;
};


/**
 * @protected
 * @param {number} index
 * @return {boolean}
 */
com.unhurdle.spectrum.beads.KeyboardNavigateableHandler.prototype.canGetFocus = function(index) {
  var /** @type {Object} */ item = this.com_unhurdle_spectrum_beads_KeyboardNavigateableHandler_getRendererForIndex(index).data;
  if (!item) {
    return false;
  }
  if (item["disabled"]) {
    return false;
  }
  if (org.apache.royale.utils.Language.is(item, com.unhurdle.spectrum.data.IMenuItem)) {
    return !item.isDivider && !item.isHeading;
  }
  return true;
};


/**
 * @protected
 * @type {number}
 */
com.unhurdle.spectrum.beads.KeyboardNavigateableHandler.prototype.timeStamp = 0;


/**
 * @protected
 * @type {string}
 */
com.unhurdle.spectrum.beads.KeyboardNavigateableHandler.prototype.valueToFocus = "";


/**
 * @protected
 * @param {string} text
 */
com.unhurdle.spectrum.beads.KeyboardNavigateableHandler.prototype.updateValue = function(text) {
  var /** @type {number} */ current = new Date().getTime();
  if (!this.timeStamp) {
    this.timeStamp = current;
  }
  if (current - this.timeStamp < 250) {
    this.valueToFocus += text;
  } else {
    this.valueToFocus = text;
  }
  this.timeStamp = current;
  var /** @type {string} */ txt = this.listModel.getLabelForIndex(this.getRendererIndex(this.focusableItemRenderer));
  if (!txt || txt.toLowerCase().indexOf(this.valueToFocus.toLowerCase()) != 0) {
    var /** @type {number} */ len = (this.listModel.dataProvider["length"]) >> 0;
    for (var /** @type {number} */ index = 0; index < len; index++) {
      var /** @type {string} */ t = this.listModel.getLabelForIndex(index);
      if (t && t.toLowerCase().indexOf(this.valueToFocus.toLowerCase()) == 0) {
        this.changeFocus(index);
        return;
      }
    }
  }
};


/**
 * @private
 */
com.unhurdle.spectrum.beads.KeyboardNavigateableHandler.prototype.com_unhurdle_spectrum_beads_KeyboardNavigateableHandler_changeMenu = function() {
  if (!this.focusableItemRenderer) {
    return;
  }
  var /** @type {Object} */ data = this.focusableItemRenderer.data;
  if (!org.apache.royale.utils.Language.is(data, com.unhurdle.spectrum.data.IMenuItem)) {
    return;
  }
  var /** @type {com.unhurdle.spectrum.data.IMenuItem} */ menu = data;
  if (menu.subMenu) {
    menu.isOpen = true;
    menu.subMenu[0]["keyboardFocused"] = true;
  }
};


/**
 * @private
 * @type {number}
 */
com.unhurdle.spectrum.beads.KeyboardNavigateableHandler.prototype.com_unhurdle_spectrum_beads_KeyboardNavigateableHandler_ind = 0;


/**
 * @nocollapse
 * @type {com.unhurdle.spectrum.interfaces.IKeyboardNavigateable}
 */
com.unhurdle.spectrum.beads.KeyboardNavigateableHandler.prototype.host;


com.unhurdle.spectrum.beads.KeyboardNavigateableHandler.prototype.get__host = function() {
  org.apache.royale.debugging.assert(org.apache.royale.utils.Language.is(this._strand, com.unhurdle.spectrum.interfaces.IKeyboardNavigateable), "The strand must be an IKeyboardNavigateable!");
  return this._strand;
};


com.unhurdle.spectrum.beads.KeyboardNavigateableHandler.prototype.set__strand = function(value) {
  com.unhurdle.spectrum.beads.KeyboardNavigateableHandler.superClass_.set__strand.apply(this, [value]);
  var /** @type {org.apache.royale.core.UIBase} */ listHost = value;
  this.listModel = listHost.model;
  this.listView = listHost.view;
  this.host.focusParent.addEventListener(org.apache.royale.events.KeyboardEvent.KEY_DOWN, org.apache.royale.utils.Language.closure(this.changeValue, this, 'changeValue'));
  this.host.focusParent.addEventListener("click", org.apache.royale.utils.Language.closure(this.clickHandler, this, 'clickHandler'));
  this.listenOnStrand("itemsCreated", org.apache.royale.utils.Language.closure(this.handleItemsCreated, this, 'handleItemsCreated'));
  this.listenOnStrand("focusIn", org.apache.royale.utils.Language.closure(this.focusItem, this, 'focusItem'));
  this.listenOnStrand("change", org.apache.royale.utils.Language.closure(this.handleChange, this, 'handleChange'));
};


Object.defineProperties(com.unhurdle.spectrum.beads.KeyboardNavigateableHandler.prototype, /** @lends {com.unhurdle.spectrum.beads.KeyboardNavigateableHandler.prototype} */ {
/**
 * @type {com.unhurdle.spectrum.interfaces.IKeyboardNavigateable}
 */
host: {
get: com.unhurdle.spectrum.beads.KeyboardNavigateableHandler.prototype.get__host},
/**
 * @type {org.apache.royale.core.IStrand}
 */
strand: {
set: com.unhurdle.spectrum.beads.KeyboardNavigateableHandler.prototype.set__strand}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
com.unhurdle.spectrum.beads.KeyboardNavigateableHandler.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'KeyboardNavigateableHandler', qName: 'com.unhurdle.spectrum.beads.KeyboardNavigateableHandler', kind: 'class' }], interfaces: [org.apache.royale.core.IBead, com.unhurdle.spectrum.interfaces.IKeyboardHandler] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
com.unhurdle.spectrum.beads.KeyboardNavigateableHandler.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'strand': { type: 'org.apache.royale.core.IStrand', access: 'writeonly', declaredBy: 'com.unhurdle.spectrum.beads.KeyboardNavigateableHandler'}
      };
    },
    methods: function () {
      return {
        'KeyboardNavigateableHandler': { type: '', declaredBy: 'com.unhurdle.spectrum.beads.KeyboardNavigateableHandler'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
com.unhurdle.spectrum.beads.KeyboardNavigateableHandler.prototype.ROYALE_COMPILE_FLAGS = 11;
