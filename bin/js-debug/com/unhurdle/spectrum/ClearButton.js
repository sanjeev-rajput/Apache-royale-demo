/**
 * Generated by Apache Royale Compiler from com/unhurdle/spectrum/ClearButton.as
 * com.unhurdle.spectrum.ClearButton
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('com.unhurdle.spectrum.ClearButton');
/* Royale Dependency List: com.unhurdle.spectrum.Icon,com.unhurdle.spectrum.const.IconType,org.apache.royale.core.WrappedHTMLElement*/

goog.require('com.unhurdle.spectrum.SpectrumBase');



/**
 * @constructor
 * @extends {com.unhurdle.spectrum.SpectrumBase}
 */
com.unhurdle.spectrum.ClearButton = function() {
  com.unhurdle.spectrum.ClearButton.base(this, 'constructor');
};
goog.inherits(com.unhurdle.spectrum.ClearButton, com.unhurdle.spectrum.SpectrumBase);


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.ClearButton.prototype.getSelector = function() {
  return "spectrum-ClearButton";
};


/**
 * @private
 * @type {com.unhurdle.spectrum.Icon}
 */
com.unhurdle.spectrum.ClearButton.prototype.com_unhurdle_spectrum_ClearButton_icon = null;


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.ClearButton.prototype.getTag = function() {
  return "button";
};


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.ClearButton.prototype.createElement = function() {
  var self = this;
  this.button = com.unhurdle.spectrum.ClearButton.superClass_.createElement.apply(this);
  this.button.type = "reset";
  var /** @type {string} */ type = com.unhurdle.spectrum.const.IconType.CROSS_SMALL;
  this.com_unhurdle_spectrum_ClearButton_icon = new com.unhurdle.spectrum.Icon(com.unhurdle.spectrum.Icon.getCSSTypeSelector(type));
  this.com_unhurdle_spectrum_ClearButton_icon.type = type;
  this.button.appendChild(this.com_unhurdle_spectrum_ClearButton_icon.element);
  this.button.onclick = function() {
    self.dispatchEvent("clear");
  };
  return this.element;
};


/**
 * @type {HTMLButtonElement}
 */
com.unhurdle.spectrum.ClearButton.prototype.button = null;


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.ClearButton.prototype.com_unhurdle_spectrum_ClearButton__disabled = false;


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.ClearButton.prototype.com_unhurdle_spectrum_ClearButton__small = false;


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.ClearButton.prototype.com_unhurdle_spectrum_ClearButton__overBackground = false;


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.ClearButton.prototype.disabled;


com.unhurdle.spectrum.ClearButton.prototype.get__disabled = function() {
  return this.com_unhurdle_spectrum_ClearButton__disabled;
};


com.unhurdle.spectrum.ClearButton.prototype.set__disabled = function(value) {
  if (value != !!this.com_unhurdle_spectrum_ClearButton__disabled) {
    this.button.disabled = value;
  }
  this.com_unhurdle_spectrum_ClearButton__disabled = value;
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.ClearButton.prototype.small;


com.unhurdle.spectrum.ClearButton.prototype.get__small = function() {
  return this.com_unhurdle_spectrum_ClearButton__small;
};


com.unhurdle.spectrum.ClearButton.prototype.set__small = function(value) {
  if (value != this.com_unhurdle_spectrum_ClearButton__small) {
    this.toggle(this.valueToSelector("small"), value);
    this.com_unhurdle_spectrum_ClearButton__small = value;
  }
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.ClearButton.prototype.overBackground;


com.unhurdle.spectrum.ClearButton.prototype.get__overBackground = function() {
  return this.com_unhurdle_spectrum_ClearButton__overBackground;
};


com.unhurdle.spectrum.ClearButton.prototype.set__overBackground = function(value) {
  this.toggle(this.valueToSelector("overBackground"), value);
  this.com_unhurdle_spectrum_ClearButton__overBackground = value;
};


Object.defineProperties(com.unhurdle.spectrum.ClearButton.prototype, /** @lends {com.unhurdle.spectrum.ClearButton.prototype} */ {
/**
 * @type {boolean}
 */
disabled: {
get: com.unhurdle.spectrum.ClearButton.prototype.get__disabled,
set: com.unhurdle.spectrum.ClearButton.prototype.set__disabled},
/**
 * @type {boolean}
 */
small: {
get: com.unhurdle.spectrum.ClearButton.prototype.get__small,
set: com.unhurdle.spectrum.ClearButton.prototype.set__small},
/**
 * @type {boolean}
 */
overBackground: {
get: com.unhurdle.spectrum.ClearButton.prototype.get__overBackground,
set: com.unhurdle.spectrum.ClearButton.prototype.set__overBackground}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
com.unhurdle.spectrum.ClearButton.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'ClearButton', qName: 'com.unhurdle.spectrum.ClearButton', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
com.unhurdle.spectrum.ClearButton.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'button': { type: 'HTMLButtonElement', get_set: function (/** com.unhurdle.spectrum.ClearButton */ inst, /** * */ v) {return v !== undefined ? inst.button = v : inst.button;}}
      };
    },
    accessors: function () {
      return {
        'disabled': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.ClearButton'},
        'small': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.ClearButton'},
        'overBackground': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.ClearButton'}
      };
    },
    methods: function () {
      return {
        'ClearButton': { type: '', declaredBy: 'com.unhurdle.spectrum.ClearButton'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
com.unhurdle.spectrum.ClearButton.prototype.ROYALE_COMPILE_FLAGS = 11;
