/**
 * Generated by Apache Royale Compiler from com/unhurdle/spectrum/AlphaColorSlider.as
 * com.unhurdle.spectrum.AlphaColorSlider
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('com.unhurdle.spectrum.AlphaColorSlider');
/* Royale Dependency List: com.unhurdle.spectrum.data.RGBColor,com.unhurdle.spectrum.interfaces.IRGBA,org.apache.royale.events.MouseEvent,org.apache.royale.events.ValueEvent,org.apache.royale.utils.number.pinValue*/

goog.require('com.unhurdle.spectrum.ColorSlider');



/**
 * @constructor
 * @extends {com.unhurdle.spectrum.ColorSlider}
 */
com.unhurdle.spectrum.AlphaColorSlider = function() {
  com.unhurdle.spectrum.AlphaColorSlider.base(this, 'constructor');
  this.colorStops = ["rgb(0, 0, 0)"];
};
goog.inherits(com.unhurdle.spectrum.AlphaColorSlider, com.unhurdle.spectrum.ColorSlider);


/**
 * @private
 * @type {number}
 */
com.unhurdle.spectrum.AlphaColorSlider.prototype.com_unhurdle_spectrum_AlphaColorSlider__opacity = NaN;


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.AlphaColorSlider.prototype.changeBackgroundColor = function() {
  var /** @type {string} */ gradientDir = null;
  if (!this.addedOnce) {
    return;
  }
  //var /** @type {string} */ gradientDir = null;
  if (this.vertical) {
    gradientDir = "bottom";
  } else {
    gradientDir = "right";
  }
  var /** @type {string} */ startStr = "linear-gradient(to " + gradientDir + ", ";
  startStr += this.colorStyle;
  var /** @type {string} */ endStr = " 0%, rgba(0, 0, 0, 0) 100%)";
  this.gradient.style.background = startStr + endStr;
};


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.AlphaColorSlider.prototype.onMouseMove = function(e) {
  if (this.disabled) {
    return;
  }
  var /** @type {number} */ percent = 100 - this.getMousePercentagePosition(e);
  var /** @type {com.unhurdle.spectrum.interfaces.IRGBA} */ color = this.handle.appliedColor.clone();
  color.alpha = percent / 100;
  this.handle.appliedColor = color;
  this.calculateHandlePosition();
  this.dispatchEvent(new org.apache.royale.events.ValueEvent("colorChanged", this.appliedColor));
};


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.AlphaColorSlider.prototype.calculateHandlePosition = function() {
  if (this.appliedColor && !isNaN(this.appliedColor.alpha)) {
    this.setHandlePosition(100 - (this.appliedColor.alpha * 100));
  } else {
    this.setHandlePosition(0);
  }
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
com.unhurdle.spectrum.AlphaColorSlider.prototype.colorStyle;


com.unhurdle.spectrum.AlphaColorSlider.prototype.get__colorStyle = function() {
  return org.apache.royale.utils.Language.string(this.colorStops[0]);
};


com.unhurdle.spectrum.AlphaColorSlider.prototype.set__colorStyle = function(val) {
  if (val != this.colorStops[0]) {
    this.colorStops[0] = val;
    this.changeBackgroundColor();
  }
};


/**
 * @nocollapse
 * @export
 * @type {com.unhurdle.spectrum.interfaces.IRGBA}
 */
com.unhurdle.spectrum.AlphaColorSlider.prototype.baseColor;


com.unhurdle.spectrum.AlphaColorSlider.prototype.get__baseColor = function() {
  var /** @type {com.unhurdle.spectrum.interfaces.IRGBA} */ color = this.appliedColor.clone();
  color.alpha = 1;
  return color;
};


com.unhurdle.spectrum.AlphaColorSlider.prototype.set__baseColor = function(value) {
  var /** @type {number} */ alpha = this.appliedColor ? this.appliedColor.alpha : 1;
  this.appliedColor = new com.unhurdle.spectrum.data.RGBColor([value.r, value.g, value.b, alpha]);
};


com.unhurdle.spectrum.AlphaColorSlider.prototype.set__appliedColor = function(value) {
  com.unhurdle.spectrum.AlphaColorSlider.superClass_.set__appliedColor.apply(this, [value]);
  var /** @type {com.unhurdle.spectrum.interfaces.IRGBA} */ base = value.clone();
  base.alpha = 1;
  this.colorStyle = base.styleString;
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
com.unhurdle.spectrum.AlphaColorSlider.prototype.opacity;


com.unhurdle.spectrum.AlphaColorSlider.prototype.get__opacity = function() {
  if (!this.appliedColor || isNaN(this.appliedColor.alpha)) {
    return 100;
  }
  return this.appliedColor.alpha * 100;
};


com.unhurdle.spectrum.AlphaColorSlider.prototype.set__opacity = function(value) {
  if (!this.appliedColor) {
    this.appliedColor = new com.unhurdle.spectrum.data.RGBColor([0, 0, 0]);
  }
  this.appliedColor.alpha = org.apache.royale.utils.number.pinValue(value / 100, 0, 1);
};


Object.defineProperties(com.unhurdle.spectrum.AlphaColorSlider.prototype, /** @lends {com.unhurdle.spectrum.AlphaColorSlider.prototype} */ {
/**
 * @type {string}
 */
colorStyle: {
get: com.unhurdle.spectrum.AlphaColorSlider.prototype.get__colorStyle,
set: com.unhurdle.spectrum.AlphaColorSlider.prototype.set__colorStyle},
/**
 * @type {com.unhurdle.spectrum.interfaces.IRGBA}
 */
baseColor: {
get: com.unhurdle.spectrum.AlphaColorSlider.prototype.get__baseColor,
set: com.unhurdle.spectrum.AlphaColorSlider.prototype.set__baseColor},
/**
 * @type {com.unhurdle.spectrum.interfaces.IRGBA}
 */
appliedColor: {
get: com.unhurdle.spectrum.ColorSlider.prototype.get__appliedColor,
set: com.unhurdle.spectrum.AlphaColorSlider.prototype.set__appliedColor},
/**
 * @type {number}
 */
opacity: {
get: com.unhurdle.spectrum.AlphaColorSlider.prototype.get__opacity,
set: com.unhurdle.spectrum.AlphaColorSlider.prototype.set__opacity}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
com.unhurdle.spectrum.AlphaColorSlider.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'AlphaColorSlider', qName: 'com.unhurdle.spectrum.AlphaColorSlider', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
com.unhurdle.spectrum.AlphaColorSlider.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'colorStyle': { type: 'String', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.AlphaColorSlider'},
        'baseColor': { type: 'com.unhurdle.spectrum.interfaces.IRGBA', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.AlphaColorSlider'},
        'appliedColor': { type: 'com.unhurdle.spectrum.interfaces.IRGBA', access: 'writeonly', declaredBy: 'com.unhurdle.spectrum.AlphaColorSlider'},
        'opacity': { type: 'Number', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.AlphaColorSlider'}
      };
    },
    methods: function () {
      return {
        'AlphaColorSlider': { type: '', declaredBy: 'com.unhurdle.spectrum.AlphaColorSlider'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
com.unhurdle.spectrum.AlphaColorSlider.prototype.ROYALE_COMPILE_FLAGS = 11;
