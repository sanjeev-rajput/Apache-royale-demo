/**
 * Generated by Apache Royale Compiler from com/unhurdle/spectrum/Label.as
 * com.unhurdle.spectrum.Label
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('com.unhurdle.spectrum.Label');
/* Royale Dependency List: */

goog.require('com.unhurdle.spectrum.TextBase');



/**
 * <inject_html>
 * <link rel="stylesheet" href="assets/css/components/label/dist.css">
 * </inject_html>
 * 
 * @constructor
 * @extends {com.unhurdle.spectrum.TextBase}
 */
com.unhurdle.spectrum.Label = function() {
  com.unhurdle.spectrum.Label.base(this, 'constructor');
  this.color = "grey";
};
goog.inherits(com.unhurdle.spectrum.Label, com.unhurdle.spectrum.TextBase);


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.Label.prototype.getSelector = function() {
  return "spectrum-Label";
};


/**
 * @private
 * @type {string}
 */
com.unhurdle.spectrum.Label.prototype.com_unhurdle_spectrum_Label__color = null;


/**
 * @private
 * @type {string}
 */
com.unhurdle.spectrum.Label.prototype.com_unhurdle_spectrum_Label__size = null;


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.Label.prototype.getTag = function() {
  return "span";
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
com.unhurdle.spectrum.Label.prototype.color;


com.unhurdle.spectrum.Label.prototype.get__color = function() {
  return this.com_unhurdle_spectrum_Label__color;
};


com.unhurdle.spectrum.Label.prototype.set__color = function(value) {
  if (value != this.com_unhurdle_spectrum_Label__color) {
    var /** @type {string} */ newColor = this.valueToSelector(value);
    this.toggle(newColor, true);
    if (this.com_unhurdle_spectrum_Label__color) {
      var /** @type {string} */ oldColor = this.valueToSelector(this.com_unhurdle_spectrum_Label__color);
      this.toggle(oldColor, false);
    }
    this.com_unhurdle_spectrum_Label__color = value;
  }
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
com.unhurdle.spectrum.Label.prototype.size;


com.unhurdle.spectrum.Label.prototype.get__size = function() {
  return this.com_unhurdle_spectrum_Label__size;
};


com.unhurdle.spectrum.Label.prototype.set__size = function(value) {
  if (value != this.com_unhurdle_spectrum_Label__size) {
    switch (value) {
      case "small":
      
      case "large":
      
      case "normal":
      
      case "":
        break;
      default:
        throw new Error("Invalid scale: " + value);
    }
    if (this.com_unhurdle_spectrum_Label__size) {
      this.toggle(this.valueToSelector(this.com_unhurdle_spectrum_Label__size), false);
    }
    if (value == "small" || value == "large") {
      this.toggle(this.valueToSelector(value), true);
    }
    this.com_unhurdle_spectrum_Label__size = value;
  }
};


Object.defineProperties(com.unhurdle.spectrum.Label.prototype, /** @lends {com.unhurdle.spectrum.Label.prototype} */ {
/**
 * @type {string}
 */
color: {
get: com.unhurdle.spectrum.Label.prototype.get__color,
set: com.unhurdle.spectrum.Label.prototype.set__color},
/**
 * @type {string}
 */
size: {
get: com.unhurdle.spectrum.Label.prototype.get__size,
set: com.unhurdle.spectrum.Label.prototype.set__size}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
com.unhurdle.spectrum.Label.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'Label', qName: 'com.unhurdle.spectrum.Label', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
com.unhurdle.spectrum.Label.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'color': { type: 'String', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.Label'},
        'size': { type: 'String', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.Label'}
      };
    },
    methods: function () {
      return {
        'Label': { type: '', declaredBy: 'com.unhurdle.spectrum.Label'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
com.unhurdle.spectrum.Label.prototype.ROYALE_COMPILE_FLAGS = 11;
