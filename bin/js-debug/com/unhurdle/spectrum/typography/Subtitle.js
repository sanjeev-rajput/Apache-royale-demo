/**
 * Generated by Apache Royale Compiler from com/unhurdle/spectrum/typography/Subtitle.as
 * com.unhurdle.spectrum.typography.Subtitle
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('com.unhurdle.spectrum.typography.Subtitle');
/* Royale Dependency List: */

goog.require('com.unhurdle.spectrum.typography.Heading');



/**
 * @constructor
 * @extends {com.unhurdle.spectrum.typography.Heading}
 */
com.unhurdle.spectrum.typography.Subtitle = function() {
  com.unhurdle.spectrum.typography.Subtitle.base(this, 'constructor');
  this.typeNames = "";
};
goog.inherits(com.unhurdle.spectrum.typography.Subtitle, com.unhurdle.spectrum.typography.Heading);


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.typography.Subtitle.prototype.getSelector = function() {
  return this.getTypographySelector() + "--subtitle";
};


/**
 * @override
 */
com.unhurdle.spectrum.typography.Subtitle.prototype.validateSize = function(value) {
  var /** @type {number} */ numVal = Number(value);
  if (!isNaN(numVal) && numVal <= 3 && numVal >= 1) {
    return true;
  }
  return false;
};


com.unhurdle.spectrum.typography.Subtitle.prototype.set__size = function(value) {
  if (!value || value == this._size) {
    return;
  }
  if (!this.validateSize(value)) {
    throw new Error("invalid size: " + value);
  }
  if (this._size) {
    this.toggle(this.appendSelector(this._size), false);
  }
  this._size = value;
  this.toggle(this.appendSelector(value), true);
};


Object.defineProperties(com.unhurdle.spectrum.typography.Subtitle.prototype, /** @lends {com.unhurdle.spectrum.typography.Subtitle.prototype} */ {
/**
 * @type {string}
 */
size: {
get: com.unhurdle.spectrum.typography.Typography.prototype.get__size,
set: com.unhurdle.spectrum.typography.Subtitle.prototype.set__size}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
com.unhurdle.spectrum.typography.Subtitle.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'Subtitle', qName: 'com.unhurdle.spectrum.typography.Subtitle', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
com.unhurdle.spectrum.typography.Subtitle.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'size': { type: 'String', access: 'writeonly', declaredBy: 'com.unhurdle.spectrum.typography.Subtitle'}
      };
    },
    methods: function () {
      return {
        'Subtitle': { type: '', declaredBy: 'com.unhurdle.spectrum.typography.Subtitle'},
        'validateSize': { type: 'Boolean', declaredBy: 'com.unhurdle.spectrum.typography.Subtitle', parameters: function () { return [ 'String', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
com.unhurdle.spectrum.typography.Subtitle.prototype.ROYALE_COMPILE_FLAGS = 11;
