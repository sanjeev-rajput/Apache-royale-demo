/**
 * Generated by Apache Royale Compiler from com/unhurdle/spectrum/typography/Heading.as
 * com.unhurdle.spectrum.typography.Heading
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('com.unhurdle.spectrum.typography.Heading');
/* Royale Dependency List: */

goog.require('com.unhurdle.spectrum.typography.Typography');



/**
 * @constructor
 * @extends {com.unhurdle.spectrum.typography.Typography}
 */
com.unhurdle.spectrum.typography.Heading = function() {
  com.unhurdle.spectrum.typography.Heading.base(this, 'constructor');
};
goog.inherits(com.unhurdle.spectrum.typography.Heading, com.unhurdle.spectrum.typography.Typography);


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.typography.Heading.prototype.com_unhurdle_spectrum_typography_Heading__quiet = false;


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.typography.Heading.prototype.com_unhurdle_spectrum_typography_Heading__strong = false;


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.typography.Heading.prototype.com_unhurdle_spectrum_typography_Heading__display = false;


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.typography.Heading.prototype.com_unhurdle_spectrum_typography_Heading__heavy = false;


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.typography.Heading.prototype.com_unhurdle_spectrum_typography_Heading__light = false;


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.typography.Heading.prototype.getTypographySelector = function() {
  return "spectrum-Heading";
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.typography.Heading.prototype.quiet;


com.unhurdle.spectrum.typography.Heading.prototype.get__quiet = function() {
  return this.com_unhurdle_spectrum_typography_Heading__quiet;
};


com.unhurdle.spectrum.typography.Heading.prototype.set__quiet = function(value) {
  this.light = value;
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.typography.Heading.prototype.strong;


com.unhurdle.spectrum.typography.Heading.prototype.get__strong = function() {
  return this.com_unhurdle_spectrum_typography_Heading__strong;
};


com.unhurdle.spectrum.typography.Heading.prototype.set__strong = function(value) {
  this.heavy = value;
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.typography.Heading.prototype.display;


com.unhurdle.spectrum.typography.Heading.prototype.get__display = function() {
  return this.size.indexOf('XXL') != -1 || this.com_unhurdle_spectrum_typography_Heading__display;
};


com.unhurdle.spectrum.typography.Heading.prototype.set__display = function(value) {
  this.com_unhurdle_spectrum_typography_Heading__display = value;
  if (!this._size) {
    return;
  }
  if (value) {
    if (this.size.indexOf('L') != -1) {
      if (this.size.indexOf('XX') == -1) {
        this.size = 'XX' + this.size;
      }
    }
  } else {
    this.size = this.size.replace('XX', '');
  }
};


com.unhurdle.spectrum.typography.Heading.prototype.set__size = function(value) {
  com.unhurdle.spectrum.typography.Heading.superClass_.set__size.apply(this, [value]);
  if (this.display && value.indexOf("XXL") == -1) {
    this.display = true;
  }
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.typography.Heading.prototype.heavy;


com.unhurdle.spectrum.typography.Heading.prototype.get__heavy = function() {
  return this.com_unhurdle_spectrum_typography_Heading__heavy;
};


com.unhurdle.spectrum.typography.Heading.prototype.set__heavy = function(value) {
  if (value != !!this.com_unhurdle_spectrum_typography_Heading__heavy) {
    this.toggle(this.valueToSelector("heavy"), value);
  }
  if (value) {
    this.light = false;
  }
  this.com_unhurdle_spectrum_typography_Heading__heavy = value;
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.typography.Heading.prototype.light;


com.unhurdle.spectrum.typography.Heading.prototype.get__light = function() {
  return this.com_unhurdle_spectrum_typography_Heading__light;
};


com.unhurdle.spectrum.typography.Heading.prototype.set__light = function(value) {
  if (value != !!this.com_unhurdle_spectrum_typography_Heading__light) {
    this.toggle(this.valueToSelector("light"), value);
  }
  if (value) {
    this.heavy = false;
  }
  this.com_unhurdle_spectrum_typography_Heading__light = value;
};


Object.defineProperties(com.unhurdle.spectrum.typography.Heading.prototype, /** @lends {com.unhurdle.spectrum.typography.Heading.prototype} */ {
/**
 * @type {boolean}
 */
quiet: {
get: com.unhurdle.spectrum.typography.Heading.prototype.get__quiet,
set: com.unhurdle.spectrum.typography.Heading.prototype.set__quiet},
/**
 * @type {boolean}
 */
strong: {
get: com.unhurdle.spectrum.typography.Heading.prototype.get__strong,
set: com.unhurdle.spectrum.typography.Heading.prototype.set__strong},
/**
 * @type {boolean}
 */
display: {
get: com.unhurdle.spectrum.typography.Heading.prototype.get__display,
set: com.unhurdle.spectrum.typography.Heading.prototype.set__display},
/**
 * @type {string}
 */
size: {
get: com.unhurdle.spectrum.typography.Typography.prototype.get__size,
set: com.unhurdle.spectrum.typography.Heading.prototype.set__size},
/**
 * @type {boolean}
 */
heavy: {
get: com.unhurdle.spectrum.typography.Heading.prototype.get__heavy,
set: com.unhurdle.spectrum.typography.Heading.prototype.set__heavy},
/**
 * @type {boolean}
 */
light: {
get: com.unhurdle.spectrum.typography.Heading.prototype.get__light,
set: com.unhurdle.spectrum.typography.Heading.prototype.set__light}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
com.unhurdle.spectrum.typography.Heading.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'Heading', qName: 'com.unhurdle.spectrum.typography.Heading', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
com.unhurdle.spectrum.typography.Heading.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'quiet': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.typography.Heading'},
        'strong': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.typography.Heading'},
        'display': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.typography.Heading'},
        'size': { type: 'String', access: 'writeonly', declaredBy: 'com.unhurdle.spectrum.typography.Heading'},
        'heavy': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.typography.Heading'},
        'light': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.typography.Heading'}
      };
    },
    methods: function () {
      return {
        'Heading': { type: '', declaredBy: 'com.unhurdle.spectrum.typography.Heading'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
com.unhurdle.spectrum.typography.Heading.prototype.ROYALE_COMPILE_FLAGS = 11;
