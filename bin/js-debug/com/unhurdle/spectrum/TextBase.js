/**
 * Generated by Apache Royale Compiler from com/unhurdle/spectrum/TextBase.as
 * com.unhurdle.spectrum.TextBase
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('com.unhurdle.spectrum.TextBase');
/* Royale Dependency List: com.unhurdle.spectrum.TextNode*/

goog.require('com.unhurdle.spectrum.SpectrumBase');



/**
 * @constructor
 * @extends {com.unhurdle.spectrum.SpectrumBase}
 */
com.unhurdle.spectrum.TextBase = function() {
  com.unhurdle.spectrum.TextBase.base(this, 'constructor');
  this.userSelect = true;
};
goog.inherits(com.unhurdle.spectrum.TextBase, com.unhurdle.spectrum.SpectrumBase);


/**
 * @protected
 * @type {com.unhurdle.spectrum.TextNode}
 */
com.unhurdle.spectrum.TextBase.prototype.textNode = null;


/**
 * @protected
 */
com.unhurdle.spectrum.TextBase.prototype.createTextNode = function() {
  this.textNode = new com.unhurdle.spectrum.TextNode("");
  this.textNode.element = this.element;
};


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.TextBase.prototype.com_unhurdle_spectrum_TextBase__userSelect = false;


/**
 * @nocollapse
 * @export
 * @type {string}
 */
com.unhurdle.spectrum.TextBase.prototype.text;


com.unhurdle.spectrum.TextBase.prototype.get__text = function() {
  
  if (!this.textNode) {
    return "";
  }
  return this.textNode.text;
};


com.unhurdle.spectrum.TextBase.prototype.set__text = function(value) {
  if (!this.textNode) {
    this.createTextNode();
  }
  this.textNode.text = value;
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.TextBase.prototype.userSelect;


com.unhurdle.spectrum.TextBase.prototype.get__userSelect = function() {
  return this.com_unhurdle_spectrum_TextBase__userSelect;
};


com.unhurdle.spectrum.TextBase.prototype.set__userSelect = function(value) {
  this.com_unhurdle_spectrum_TextBase__userSelect = value;
  if (value) {
    this.setAttribute("user-select", "");
  } else {
    this.setAttribute("user-select", "none");
  }
};


Object.defineProperties(com.unhurdle.spectrum.TextBase.prototype, /** @lends {com.unhurdle.spectrum.TextBase.prototype} */ {
/**
 * @type {string}
 */
text: {
get: com.unhurdle.spectrum.TextBase.prototype.get__text,
set: com.unhurdle.spectrum.TextBase.prototype.set__text},
/**
 * @type {boolean}
 */
userSelect: {
get: com.unhurdle.spectrum.TextBase.prototype.get__userSelect,
set: com.unhurdle.spectrum.TextBase.prototype.set__userSelect}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
com.unhurdle.spectrum.TextBase.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'TextBase', qName: 'com.unhurdle.spectrum.TextBase', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
com.unhurdle.spectrum.TextBase.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'text': { type: 'String', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.TextBase'},
        'userSelect': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.TextBase'}
      };
    },
    methods: function () {
      return {
        'TextBase': { type: '', declaredBy: 'com.unhurdle.spectrum.TextBase'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
com.unhurdle.spectrum.TextBase.prototype.ROYALE_COMPILE_FLAGS = 11;
