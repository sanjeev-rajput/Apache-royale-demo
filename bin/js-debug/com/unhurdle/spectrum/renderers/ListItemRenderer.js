/**
 * Generated by Apache Royale Compiler from com/unhurdle/spectrum/renderers/ListItemRenderer.as
 * com.unhurdle.spectrum.renderers.ListItemRenderer
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('com.unhurdle.spectrum.renderers.ListItemRenderer');
/* Royale Dependency List: com.unhurdle.spectrum.Icon,com.unhurdle.spectrum.ImageIcon,com.unhurdle.spectrum.TextNode,com.unhurdle.spectrum.data.IListItem,org.apache.royale.core.IParent,org.apache.royale.core.WrappedHTMLElement,org.apache.royale.html.util.getLabelFromData,org.apache.royale.utils.Language*/

goog.require('com.unhurdle.spectrum.renderers.DataItemRenderer');
goog.require('org.apache.royale.core.IListDataItemRenderer');



/**
 * @constructor
 * @extends {com.unhurdle.spectrum.renderers.DataItemRenderer}
 * @implements {org.apache.royale.core.IListDataItemRenderer}
 */
com.unhurdle.spectrum.renderers.ListItemRenderer = function() {
  com.unhurdle.spectrum.renderers.ListItemRenderer.base(this, 'constructor');
  this.typeNames = this.appendSelector('-item');
};
goog.inherits(com.unhurdle.spectrum.renderers.ListItemRenderer, com.unhurdle.spectrum.renderers.DataItemRenderer);


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.renderers.ListItemRenderer.prototype.getSelector = function() {
  return "spectrum-SideNav";
};


/**
 * @private
 * @type {Object}
 */
com.unhurdle.spectrum.renderers.ListItemRenderer.prototype.com_unhurdle_spectrum_renderers_ListItemRenderer__listData = null;


/**
 * @protected
 * @type {number}
 */
com.unhurdle.spectrum.renderers.ListItemRenderer.prototype.firstElementPosition = 0;


/**
 * @protected
 * @param {string} value
 */
com.unhurdle.spectrum.renderers.ListItemRenderer.prototype.setText = function(value) {
  this.textNode.text = value;
};


/**
 * @private
 * @return {string}
 */
com.unhurdle.spectrum.renderers.ListItemRenderer.prototype.com_unhurdle_spectrum_renderers_ListItemRenderer_getIconSelector = function() {
  if (org.apache.royale.utils.Language.is(this.data, com.unhurdle.spectrum.data.IListItem)) {
    return this.data.icon;
  }
  return org.apache.royale.utils.Language.string(this.data["icon"]);
};


/**
 * @private
 * @return {string}
 */
com.unhurdle.spectrum.renderers.ListItemRenderer.prototype.com_unhurdle_spectrum_renderers_ListItemRenderer_getImageIcon = function() {
  if (org.apache.royale.utils.Language.is(this.data, com.unhurdle.spectrum.data.IListItem)) {
    return this.data.imageIcon;
  }
  return org.apache.royale.utils.Language.string(this.data["imageIcon"]);
};


/**
 * @protected
 * @type {com.unhurdle.spectrum.Icon}
 */
com.unhurdle.spectrum.renderers.ListItemRenderer.prototype.icon = null;


/**
 * @protected
 * @type {com.unhurdle.spectrum.ImageIcon}
 */
com.unhurdle.spectrum.renderers.ListItemRenderer.prototype.imageIcon = null;


/**
 * @protected
 * @type {com.unhurdle.spectrum.TextNode}
 */
com.unhurdle.spectrum.renderers.ListItemRenderer.prototype.textNode = null;


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.renderers.ListItemRenderer.prototype.getTag = function() {
  return "li";
};


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.renderers.ListItemRenderer.prototype.createElement = function() {
  var /** @type {org.apache.royale.core.WrappedHTMLElement} */ elem = com.unhurdle.spectrum.renderers.ListItemRenderer.superClass_.createElement.apply(this);
  this.textNode = new com.unhurdle.spectrum.TextNode("span");
  this.textNode.className = this.appendSelector("-itemLink");
  this.textNode.element.style.userSelect = "none";
  this.textNode.element.style.display = "inline-flex";
  elem.appendChild(this.textNode.element);
  return elem;
};


/**
 * @nocollapse
 * @export
 * @type {Object}
 */
com.unhurdle.spectrum.renderers.ListItemRenderer.prototype.listData;


com.unhurdle.spectrum.renderers.ListItemRenderer.prototype.get__listData = function() {
  return this.com_unhurdle_spectrum_renderers_ListItemRenderer__listData;
};


com.unhurdle.spectrum.renderers.ListItemRenderer.prototype.set__listData = function(value) {
  this.com_unhurdle_spectrum_renderers_ListItemRenderer__listData = value;
};


/**
 * @nocollapse
 * @type {org.apache.royale.core.IParent}
 */
com.unhurdle.spectrum.renderers.ListItemRenderer.prototype.iconParent;


com.unhurdle.spectrum.renderers.ListItemRenderer.prototype.get__iconParent = function() {
  return this;
};


com.unhurdle.spectrum.renderers.ListItemRenderer.prototype.set__data = function(value) {
  com.unhurdle.spectrum.renderers.ListItemRenderer.superClass_.set__data.apply(this, [value]);
  this.setText(org.apache.royale.html.util.getLabelFromData(this, value));
  var /** @type {string} */ iconSelector = this.com_unhurdle_spectrum_renderers_ListItemRenderer_getIconSelector();
  if (iconSelector) {
    if (!this.icon) {
      this.icon = new com.unhurdle.spectrum.Icon(iconSelector);
      this.iconParent.addElementAt(this.icon, (this.firstElementPosition) >> 0);
    } else {
      this.icon.setStyle("display", null);
      this.icon.selector = iconSelector;
    }
  } else if (this.icon) {
    this.icon.setStyle("display", "none");
  }
  var /** @type {string} */ iconSrc = this.com_unhurdle_spectrum_renderers_ListItemRenderer_getImageIcon();
  if (iconSrc) {
    if (!this.imageIcon) {
      this.imageIcon = new com.unhurdle.spectrum.ImageIcon(iconSrc);
      this.iconParent.addElementAt(this.imageIcon, (this.firstElementPosition) >> 0);
    } else {
      this.imageIcon.setStyle("display", null);
      this.imageIcon.src = iconSrc;
    }
  } else if (this.imageIcon) {
    this.imageIcon.setStyle("display", "none");
  }
};


Object.defineProperties(com.unhurdle.spectrum.renderers.ListItemRenderer.prototype, /** @lends {com.unhurdle.spectrum.renderers.ListItemRenderer.prototype} */ {
/**
 * @type {Object}
 */
listData: {
get: com.unhurdle.spectrum.renderers.ListItemRenderer.prototype.get__listData,
set: com.unhurdle.spectrum.renderers.ListItemRenderer.prototype.set__listData},
/**
 * @type {org.apache.royale.core.IParent}
 */
iconParent: {
get: com.unhurdle.spectrum.renderers.ListItemRenderer.prototype.get__iconParent},
/**
 * @type {Object}
 */
data: {
get: org.apache.royale.html.supportClasses.UIItemRendererBase.prototype.get__data,
set: com.unhurdle.spectrum.renderers.ListItemRenderer.prototype.set__data}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
com.unhurdle.spectrum.renderers.ListItemRenderer.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'ListItemRenderer', qName: 'com.unhurdle.spectrum.renderers.ListItemRenderer', kind: 'class' }], interfaces: [org.apache.royale.core.IListDataItemRenderer] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
com.unhurdle.spectrum.renderers.ListItemRenderer.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'listData': { type: 'Object', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.renderers.ListItemRenderer', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: '__NoChangeEvent__' } ] } ]; }},
        'data': { type: 'Object', access: 'writeonly', declaredBy: 'com.unhurdle.spectrum.renderers.ListItemRenderer'}
      };
    },
    methods: function () {
      return {
        'ListItemRenderer': { type: '', declaredBy: 'com.unhurdle.spectrum.renderers.ListItemRenderer'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
com.unhurdle.spectrum.renderers.ListItemRenderer.prototype.ROYALE_COMPILE_FLAGS = 11;
