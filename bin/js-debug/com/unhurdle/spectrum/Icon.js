/**
 * Generated by Apache Royale Compiler from com/unhurdle/spectrum/Icon.as
 * com.unhurdle.spectrum.Icon
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('com.unhurdle.spectrum.Icon');
/* Royale Dependency List: com.unhurdle.spectrum.const.IconPrefix,com.unhurdle.spectrum.includes.IconInclude,com.unhurdle.spectrum.newIconSVG,com.unhurdle.spectrum.newSVGElement,org.apache.royale.core.WrappedHTMLElement*/

goog.require('com.unhurdle.spectrum.Group');
goog.require('com.unhurdle.spectrum.IAsset');



/**
 * @constructor
 * @extends {com.unhurdle.spectrum.Group}
 * @implements {com.unhurdle.spectrum.IAsset}
 * @param {string=} selector
 */
com.unhurdle.spectrum.Icon = function(selector) {
  selector = typeof selector !== 'undefined' ? selector : "";
  this.com_unhurdle_spectrum_Icon__selector = selector;
  com.unhurdle.spectrum.Icon.base(this, 'constructor');
  this.size = "S";
};
goog.inherits(com.unhurdle.spectrum.Icon, com.unhurdle.spectrum.Group);


/**
 * @nocollapse
 * @param {string} type
 * @return {string}
 */
com.unhurdle.spectrum.Icon.getCSSTypeSelector = function(type) {
  return com.unhurdle.spectrum.const.IconPrefix.SPECTRUM_CSS_ICON + type;
};


/**
 * @nocollapse
 * @param {string} type
 * @return {string}
 */
com.unhurdle.spectrum.Icon.getUIIconSelector = function(type) {
  return com.unhurdle.spectrum.const.IconPrefix.SPECTRUM_UI_ICON + type;
};


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.Icon.prototype.getSelector = function() {
  return com.unhurdle.spectrum.includes.IconInclude.getSelector();
};


/**
 * @private
 * @type {string}
 */
com.unhurdle.spectrum.Icon.prototype.com_unhurdle_spectrum_Icon__size = null;


/**
 * @nocollapse
 * @param {string} value
 * @return {boolean}
 */
com.unhurdle.spectrum.Icon.validateSize = function(value) {
  switch (value) {
    case "XXS":
    
    case "XS":
    
    case "S":
    
    case "M":
    
    case "L":
    
    case "XL":
    
    case "XXL":
      return true;
    default:
      return false;
  }
};


/**
 * @private
 * @type {string}
 */
com.unhurdle.spectrum.Icon.prototype.com_unhurdle_spectrum_Icon__type = null;


/**
 * @private
 * @type {string}
 */
com.unhurdle.spectrum.Icon.prototype.com_unhurdle_spectrum_Icon__selector = null;


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.Icon.prototype.setClassName = function(value) {
  this.element.setAttribute('class', value);
};


/**
 * @royaleignorecoercion org.apache.royale.core.WrappedHTMLElement
 * @protected
 * @override
 */
com.unhurdle.spectrum.Icon.prototype.createElement = function() {
  var /** @type {SVGElement} */ elem = com.unhurdle.spectrum.newIconSVG("");
  this.com_unhurdle_spectrum_Icon_useElement = com.unhurdle.spectrum.newSVGElement("use", "");
  this.com_unhurdle_spectrum_Icon_useElement.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', this.selector);
  elem.appendChild(this.com_unhurdle_spectrum_Icon_useElement);
  this.element = elem;
  return this.element;
};


/**
 * @private
 * @type {SVGUseElement}
 */
com.unhurdle.spectrum.Icon.prototype.com_unhurdle_spectrum_Icon_useElement = null;


/**
 * @nocollapse
 * @export
 * @type {string}
 */
com.unhurdle.spectrum.Icon.prototype.size;


com.unhurdle.spectrum.Icon.prototype.get__size = function() {
  return this.com_unhurdle_spectrum_Icon__size;
};


com.unhurdle.spectrum.Icon.prototype.set__size = function(value) {
  if (!value || value == this.com_unhurdle_spectrum_Icon__size) {
    return;
  }
  if (!com.unhurdle.spectrum.Icon.validateSize(value)) {
    throw new Error("invalid size: " + value);
  }
  if (this.com_unhurdle_spectrum_Icon__size) {
    this.toggle(this.valueToSelector("size" + this.com_unhurdle_spectrum_Icon__size), false);
  }
  this.com_unhurdle_spectrum_Icon__size = value;
  this.toggle(this.valueToSelector("size" + value), true);
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
com.unhurdle.spectrum.Icon.prototype.type;


com.unhurdle.spectrum.Icon.prototype.get__type = function() {
  return this.com_unhurdle_spectrum_Icon__type;
};


com.unhurdle.spectrum.Icon.prototype.set__type = function(value) {
  if (value != this.com_unhurdle_spectrum_Icon__type) {
    if (this.com_unhurdle_spectrum_Icon__type) {
      this.toggle(com.unhurdle.spectrum.const.IconPrefix.SPECTRUM_UI_ICON + this.com_unhurdle_spectrum_Icon__type, false);
    }
    if (value) {
      this.toggle(com.unhurdle.spectrum.const.IconPrefix.SPECTRUM_UI_ICON + value, true);
    }
  }
  this.com_unhurdle_spectrum_Icon__type = value;
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
com.unhurdle.spectrum.Icon.prototype.selector;


com.unhurdle.spectrum.Icon.prototype.get__selector = function() {
  return this.com_unhurdle_spectrum_Icon__selector;
};


com.unhurdle.spectrum.Icon.prototype.set__selector = function(value) {
  this.com_unhurdle_spectrum_Icon__selector = value;
  this.com_unhurdle_spectrum_Icon_useElement.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', value);
};


com.unhurdle.spectrum.Icon.prototype.set__x = function(value) {
  com.unhurdle.spectrum.Icon.superClass_.set__x.apply(this, [value]);
  this.setAttribute("x", value);
};


com.unhurdle.spectrum.Icon.prototype.set__y = function(value) {
  com.unhurdle.spectrum.Icon.superClass_.set__y.apply(this, [value]);
  this.setAttribute("y", value);
};


Object.defineProperties(com.unhurdle.spectrum.Icon.prototype, /** @lends {com.unhurdle.spectrum.Icon.prototype} */ {
/**
 * @type {string}
 */
size: {
get: com.unhurdle.spectrum.Icon.prototype.get__size,
set: com.unhurdle.spectrum.Icon.prototype.set__size},
/**
 * @type {string}
 */
type: {
get: com.unhurdle.spectrum.Icon.prototype.get__type,
set: com.unhurdle.spectrum.Icon.prototype.set__type},
/**
 * @type {string}
 */
selector: {
get: com.unhurdle.spectrum.Icon.prototype.get__selector,
set: com.unhurdle.spectrum.Icon.prototype.set__selector},
/**
 * @type {number}
 */
x: {
get: org.apache.royale.core.UIBase.prototype.get__x,
set: com.unhurdle.spectrum.Icon.prototype.set__x},
/**
 * @type {number}
 */
y: {
get: org.apache.royale.core.UIBase.prototype.get__y,
set: com.unhurdle.spectrum.Icon.prototype.set__y}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
com.unhurdle.spectrum.Icon.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'Icon', qName: 'com.unhurdle.spectrum.Icon', kind: 'class' }], interfaces: [com.unhurdle.spectrum.IAsset] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
com.unhurdle.spectrum.Icon.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'size': { type: 'String', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.Icon'},
        'type': { type: 'String', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.Icon'},
        'selector': { type: 'String', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.Icon'},
        'x': { type: 'Number', access: 'writeonly', declaredBy: 'com.unhurdle.spectrum.Icon'},
        'y': { type: 'Number', access: 'writeonly', declaredBy: 'com.unhurdle.spectrum.Icon'}
      };
    },
    methods: function () {
      return {
        'Icon': { type: '', declaredBy: 'com.unhurdle.spectrum.Icon', parameters: function () { return [ 'String', true ]; }},
        '|getCSSTypeSelector': { type: 'String', declaredBy: 'com.unhurdle.spectrum.Icon', parameters: function () { return [ 'String', false ]; }},
        '|getUIIconSelector': { type: 'String', declaredBy: 'com.unhurdle.spectrum.Icon', parameters: function () { return [ 'String', false ]; }},
        '|validateSize': { type: 'Boolean', declaredBy: 'com.unhurdle.spectrum.Icon', parameters: function () { return [ 'String', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
com.unhurdle.spectrum.Icon.prototype.ROYALE_COMPILE_FLAGS = 11;
/**
 * Provide reflection support for distinguishing dynamic fields on class object (static)
 * @const
 * @type {Array<string>}
 */
com.unhurdle.spectrum.Icon.prototype.ROYALE_INITIAL_STATICS = Object.keys(com.unhurdle.spectrum.Icon);
