/**
 * Generated by Apache Royale Compiler from com/unhurdle/spectrum/StatusLight.as
 * com.unhurdle.spectrum.StatusLight
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('com.unhurdle.spectrum.StatusLight');
/* Royale Dependency List: */

goog.require('com.unhurdle.spectrum.TextBase');



/**
 * <inject_html>
 * <link rel="stylesheet" href="assets/css/components/statuslight/dist.css">
 * </inject_html>
 * 
 * @constructor
 * @extends {com.unhurdle.spectrum.TextBase}
 */
com.unhurdle.spectrum.StatusLight = function() {
  com.unhurdle.spectrum.StatusLight.base(this, 'constructor');
};
goog.inherits(com.unhurdle.spectrum.StatusLight, com.unhurdle.spectrum.TextBase);


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.StatusLight.prototype.getSelector = function() {
  return "spectrum-StatusLight";
};


/**
 * @private
 * @type {string}
 */
com.unhurdle.spectrum.StatusLight.prototype.com_unhurdle_spectrum_StatusLight__status = null;


/**
 * @private
 * @type {string}
 */
com.unhurdle.spectrum.StatusLight.prototype.com_unhurdle_spectrum_StatusLight__disabled = null;


/**
 * @nocollapse
 * @export
 * @type {string}
 */
com.unhurdle.spectrum.StatusLight.prototype.status;


com.unhurdle.spectrum.StatusLight.prototype.get__status = function() {
  return this.com_unhurdle_spectrum_StatusLight__status;
};


com.unhurdle.spectrum.StatusLight.prototype.set__status = function(value) {
  if (value != this.com_unhurdle_spectrum_StatusLight__status) {
    if (this.com_unhurdle_spectrum_StatusLight__status) {
      this.toggle(this.valueToSelector(this.com_unhurdle_spectrum_StatusLight__status), false);
    }
    if (!value) {
      value = "neutral";
    }
    this.toggle(this.valueToSelector(value), true);
    this.com_unhurdle_spectrum_StatusLight__status = value;
  }
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
com.unhurdle.spectrum.StatusLight.prototype.disabled;


com.unhurdle.spectrum.StatusLight.prototype.get__disabled = function() {
  return this.com_unhurdle_spectrum_StatusLight__disabled;
};


com.unhurdle.spectrum.StatusLight.prototype.set__disabled = function(value) {
  if (value != this.com_unhurdle_spectrum_StatusLight__disabled) {
    this.toggle("is-disabled", !!(value));
  }
  this.com_unhurdle_spectrum_StatusLight__disabled = value;
};


Object.defineProperties(com.unhurdle.spectrum.StatusLight.prototype, /** @lends {com.unhurdle.spectrum.StatusLight.prototype} */ {
/**
 * @type {string}
 */
status: {
get: com.unhurdle.spectrum.StatusLight.prototype.get__status,
set: com.unhurdle.spectrum.StatusLight.prototype.set__status},
/**
 * @type {string}
 */
disabled: {
get: com.unhurdle.spectrum.StatusLight.prototype.get__disabled,
set: com.unhurdle.spectrum.StatusLight.prototype.set__disabled}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
com.unhurdle.spectrum.StatusLight.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'StatusLight', qName: 'com.unhurdle.spectrum.StatusLight', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
com.unhurdle.spectrum.StatusLight.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'status': { type: 'String', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.StatusLight'},
        'disabled': { type: 'String', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.StatusLight'}
      };
    },
    methods: function () {
      return {
        'StatusLight': { type: '', declaredBy: 'com.unhurdle.spectrum.StatusLight'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
com.unhurdle.spectrum.StatusLight.prototype.ROYALE_COMPILE_FLAGS = 11;
