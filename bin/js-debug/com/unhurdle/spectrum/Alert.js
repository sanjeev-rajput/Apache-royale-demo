/**
 * Generated by Apache Royale Compiler from com/unhurdle/spectrum/Alert.as
 * com.unhurdle.spectrum.Alert
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('com.unhurdle.spectrum.Alert');
/* Royale Dependency List: com.unhurdle.spectrum.Application,com.unhurdle.spectrum.Button,com.unhurdle.spectrum.Icon,com.unhurdle.spectrum.TextNode,com.unhurdle.spectrum.Underlay,com.unhurdle.spectrum.newElement,org.apache.royale.core.WrappedHTMLElement,org.apache.royale.events.KeyboardEvent,org.apache.royale.html.beads.plugin.ModalDisplay,org.apache.royale.utils.Language*/

goog.require('com.unhurdle.spectrum.SpectrumBase');



/**
 * <inject_html>
 * <link rel="stylesheet" href="assets/css/components/alert/dist.css">
 * </inject_html>
 * 
 * @constructor
 * @extends {com.unhurdle.spectrum.SpectrumBase}
 */
com.unhurdle.spectrum.Alert = function() {
  com.unhurdle.spectrum.Alert.base(this, 'constructor');
  this.visible = false;
  this.com_unhurdle_spectrum_Alert_modal = new org.apache.royale.html.beads.plugin.ModalDisplay();
  this.addBead(this.com_unhurdle_spectrum_Alert_modal);
};
goog.inherits(com.unhurdle.spectrum.Alert, com.unhurdle.spectrum.SpectrumBase);


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.Alert.prototype.getSelector = function() {
  return "spectrum-Alert";
};


/**
 * @private
 * @param {org.apache.royale.events.KeyboardEvent} event
 */
com.unhurdle.spectrum.Alert.prototype.com_unhurdle_spectrum_Alert_handleKeyDown = function(event) {
  if (event.key == "Escape") {
    this.hide();
  }
};


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.Alert.prototype.com_unhurdle_spectrum_Alert__noDismiss = false;


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.Alert.prototype.com_unhurdle_spectrum_Alert__showOverlay = false;


/**
 * @private
 * @type {org.apache.royale.html.beads.plugin.ModalDisplay}
 */
com.unhurdle.spectrum.Alert.prototype.com_unhurdle_spectrum_Alert_modal = null;


/**
 * @private
 * @return {com.unhurdle.spectrum.Underlay}
 */
com.unhurdle.spectrum.Alert.prototype.com_unhurdle_spectrum_Alert_getOverlayBead = function() {
  if (!this.com_unhurdle_spectrum_Alert__overlayBead) {
    this.com_unhurdle_spectrum_Alert__overlayBead = new com.unhurdle.spectrum.Underlay();
    this.addBead(this.com_unhurdle_spectrum_Alert__overlayBead);
  }
  this.com_unhurdle_spectrum_Alert__overlayBead.hideOnClick = !this.com_unhurdle_spectrum_Alert__noDismiss;
  return this.com_unhurdle_spectrum_Alert__overlayBead;
};


/**
 * @private
 * @type {com.unhurdle.spectrum.Underlay}
 */
com.unhurdle.spectrum.Alert.prototype.com_unhurdle_spectrum_Alert__overlayBead = null;


/**
 * @private
 * @type {string}
 */
com.unhurdle.spectrum.Alert.prototype.com_unhurdle_spectrum_Alert__closeText = null;


/**
 * @private
 * @type {string}
 */
com.unhurdle.spectrum.Alert.prototype.com_unhurdle_spectrum_Alert__header = null;


/**
 * @private
 * @type {string}
 */
com.unhurdle.spectrum.Alert.prototype.com_unhurdle_spectrum_Alert__content = null;


/**
 * @private
 * @type {com.unhurdle.spectrum.TextNode}
 */
com.unhurdle.spectrum.Alert.prototype.com_unhurdle_spectrum_Alert_headerNode = null;


/**
 * @private
 * @type {com.unhurdle.spectrum.TextNode}
 */
com.unhurdle.spectrum.Alert.prototype.com_unhurdle_spectrum_Alert_contentNode = null;


/**
 * @private
 * @type {com.unhurdle.spectrum.Button}
 */
com.unhurdle.spectrum.Alert.prototype.com_unhurdle_spectrum_Alert_button = null;


/**
 * @private
 * @type {com.unhurdle.spectrum.Icon}
 */
com.unhurdle.spectrum.Alert.prototype.com_unhurdle_spectrum_Alert_icon = null;


/**
 * @private
 * @param {string} status
 */
com.unhurdle.spectrum.Alert.prototype.com_unhurdle_spectrum_Alert_createIcon = function(status) {
  var /** @type {string} */ type = null;
  //var /** @type {string} */ type = null;
  switch (status) {
    case com.unhurdle.spectrum.Alert.ERROR:
      type = "Alert";
      break;
    case com.unhurdle.spectrum.Alert.HELP:
      type = "Help";
      break;
    case com.unhurdle.spectrum.Alert.INFO:
      type = "Info";
      break;
    case com.unhurdle.spectrum.Alert.SUCCESS:
      type = "Success";
      break;
    case com.unhurdle.spectrum.Alert.WARNING:
      type = "Alert";
      break;
    default:
      type = "Alert";
  }
  var /** @type {string} */ sizedType = type + "Medium";
  var /** @type {string} */ iconClass = this.appendSelector("-icon");
  var /** @type {string} */ selector = com.unhurdle.spectrum.Icon.getCSSTypeSelector(sizedType);
  if (this.com_unhurdle_spectrum_Alert_icon) {
    this.com_unhurdle_spectrum_Alert_icon.type = sizedType;
    this.com_unhurdle_spectrum_Alert_icon.className = iconClass;
    this.com_unhurdle_spectrum_Alert_icon.selector = selector;
  } else {
    this.com_unhurdle_spectrum_Alert_icon = new com.unhurdle.spectrum.Icon(selector);
    this.com_unhurdle_spectrum_Alert_icon.type = sizedType;
    this.com_unhurdle_spectrum_Alert_icon.className = iconClass;
    this.addElementAt(this.com_unhurdle_spectrum_Alert_icon, 0);
  }
};


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.Alert.prototype.createElement = function() {
  var /** @type {org.apache.royale.core.WrappedHTMLElement} */ elem = com.unhurdle.spectrum.Alert.superClass_.createElement.apply(this);
  var /** @type {string} */ styleStr = "z-index:100;";
  elem.setAttribute("style", styleStr);
  this.com_unhurdle_spectrum_Alert_headerNode = new com.unhurdle.spectrum.TextNode("div");
  this.com_unhurdle_spectrum_Alert_headerNode.className = this.appendSelector("-header");
  elem.appendChild(this.com_unhurdle_spectrum_Alert_headerNode.element);
  this.com_unhurdle_spectrum_Alert_contentNode = new com.unhurdle.spectrum.TextNode("div");
  this.com_unhurdle_spectrum_Alert_contentNode.className = this.appendSelector("-content");
  elem.appendChild(this.com_unhurdle_spectrum_Alert_contentNode.element);
  return elem;
};


/**
 * @private
 * @param {string} value
 */
com.unhurdle.spectrum.Alert.prototype.com_unhurdle_spectrum_Alert_setCloseButton = function(value) {
  if (!this.com_unhurdle_spectrum_Alert_button) {
    var /** @type {HTMLElement} */ footer = com.unhurdle.spectrum.newElement('div');
    footer.className = this.appendSelector("-footer");
    this.com_unhurdle_spectrum_Alert_button = new com.unhurdle.spectrum.Button();
    this.com_unhurdle_spectrum_Alert_button.quiet = true;
    this.com_unhurdle_spectrum_Alert_button.element.onclick = org.apache.royale.utils.Language.closure(this.hide, this, 'hide');
    footer.appendChild(this.com_unhurdle_spectrum_Alert_button.element);
    this.element.appendChild(footer);
  }
  this.com_unhurdle_spectrum_Alert_button.text = value;
};


/**
 */
com.unhurdle.spectrum.Alert.prototype.show = function() {
  this.visible = true;
  window.addEventListener(org.apache.royale.events.KeyboardEvent.KEY_DOWN, org.apache.royale.utils.Language.closure(this.com_unhurdle_spectrum_Alert_handleKeyDown, this, 'com_unhurdle_spectrum_Alert_handleKeyDown'));
  this.com_unhurdle_spectrum_Alert_modal.show(com.unhurdle.spectrum.Application.current.popUpHost);
};


/**
 */
com.unhurdle.spectrum.Alert.prototype.hide = function() {
  window.removeEventListener(org.apache.royale.events.KeyboardEvent.KEY_DOWN, org.apache.royale.utils.Language.closure(this.com_unhurdle_spectrum_Alert_handleKeyDown, this, 'com_unhurdle_spectrum_Alert_handleKeyDown'));
  this.visible = false;
  this.com_unhurdle_spectrum_Alert_modal.hide();
};


/**
 * @nocollapse
 * @const
 * @type {string}
 */
com.unhurdle.spectrum.Alert.ERROR = "error";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
com.unhurdle.spectrum.Alert.HELP = "help";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
com.unhurdle.spectrum.Alert.INFO = "info";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
com.unhurdle.spectrum.Alert.SUCCESS = "success";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
com.unhurdle.spectrum.Alert.WARNING = "warning";


/**
 * @private
 * @type {string}
 */
com.unhurdle.spectrum.Alert.prototype.com_unhurdle_spectrum_Alert__status = null;


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.Alert.prototype.noDismiss;


com.unhurdle.spectrum.Alert.prototype.get__noDismiss = function() {
  return this.com_unhurdle_spectrum_Alert__noDismiss;
};


com.unhurdle.spectrum.Alert.prototype.set__noDismiss = function(value) {
  this.com_unhurdle_spectrum_Alert__noDismiss = value;
  if (this.com_unhurdle_spectrum_Alert__overlayBead) {
    this.com_unhurdle_spectrum_Alert__overlayBead.hideOnClick = !value;
  }
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.Alert.prototype.showOverlay;


com.unhurdle.spectrum.Alert.prototype.get__showOverlay = function() {
  return this.com_unhurdle_spectrum_Alert__showOverlay;
};


com.unhurdle.spectrum.Alert.prototype.set__showOverlay = function(value) {
  if (value) {
    this.com_unhurdle_spectrum_Alert_getOverlayBead();
  } else if (this.com_unhurdle_spectrum_Alert__overlayBead) {
    this.removeBead(this.com_unhurdle_spectrum_Alert__overlayBead);
  }
  this.com_unhurdle_spectrum_Alert__showOverlay = value;
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
com.unhurdle.spectrum.Alert.prototype.closeText;


com.unhurdle.spectrum.Alert.prototype.get__closeText = function() {
  return this.com_unhurdle_spectrum_Alert__closeText;
};


com.unhurdle.spectrum.Alert.prototype.set__closeText = function(value) {
  if (value != this.com_unhurdle_spectrum_Alert__closeText) {
    this.com_unhurdle_spectrum_Alert_setCloseButton(value);
  }
  this.com_unhurdle_spectrum_Alert__closeText = value;
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
com.unhurdle.spectrum.Alert.prototype.header;


com.unhurdle.spectrum.Alert.prototype.get__header = function() {
  return this.com_unhurdle_spectrum_Alert__header;
};


com.unhurdle.spectrum.Alert.prototype.set__header = function(value) {
  this.com_unhurdle_spectrum_Alert_headerNode.text = value;
  this.com_unhurdle_spectrum_Alert__header = value;
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
com.unhurdle.spectrum.Alert.prototype.content;


com.unhurdle.spectrum.Alert.prototype.get__content = function() {
  return this.com_unhurdle_spectrum_Alert__content;
};


com.unhurdle.spectrum.Alert.prototype.set__content = function(value) {
  this.com_unhurdle_spectrum_Alert_contentNode.text = value;
  this.com_unhurdle_spectrum_Alert__content = value;
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
com.unhurdle.spectrum.Alert.prototype.status;


com.unhurdle.spectrum.Alert.prototype.get__status = function() {
  return this.com_unhurdle_spectrum_Alert__status;
};


com.unhurdle.spectrum.Alert.prototype.set__status = function(value) {
  if (value != this.com_unhurdle_spectrum_Alert__status) {
    switch (value) {
      case com.unhurdle.spectrum.Alert.ERROR:
      
      case com.unhurdle.spectrum.Alert.HELP:
      
      case com.unhurdle.spectrum.Alert.INFO:
      
      case com.unhurdle.spectrum.Alert.SUCCESS:
      
      case com.unhurdle.spectrum.Alert.WARNING:
        break;
      default:
        throw new Error("Invalid status: " + value);
    }
    if (this.com_unhurdle_spectrum_Alert__status) {
      this.toggle(this.valueToSelector(this.com_unhurdle_spectrum_Alert__status), false);
    }
    this.toggle(this.valueToSelector(value), true);
    this.com_unhurdle_spectrum_Alert_createIcon(value);
  }
  this.com_unhurdle_spectrum_Alert__status = value;
};


Object.defineProperties(com.unhurdle.spectrum.Alert.prototype, /** @lends {com.unhurdle.spectrum.Alert.prototype} */ {
/**
 * @type {boolean}
 */
noDismiss: {
get: com.unhurdle.spectrum.Alert.prototype.get__noDismiss,
set: com.unhurdle.spectrum.Alert.prototype.set__noDismiss},
/**
 * @type {boolean}
 */
showOverlay: {
get: com.unhurdle.spectrum.Alert.prototype.get__showOverlay,
set: com.unhurdle.spectrum.Alert.prototype.set__showOverlay},
/**
 * @type {string}
 */
closeText: {
get: com.unhurdle.spectrum.Alert.prototype.get__closeText,
set: com.unhurdle.spectrum.Alert.prototype.set__closeText},
/**
 * @type {string}
 */
header: {
get: com.unhurdle.spectrum.Alert.prototype.get__header,
set: com.unhurdle.spectrum.Alert.prototype.set__header},
/**
 * @type {string}
 */
content: {
get: com.unhurdle.spectrum.Alert.prototype.get__content,
set: com.unhurdle.spectrum.Alert.prototype.set__content},
/**
 * @type {string}
 */
status: {
get: com.unhurdle.spectrum.Alert.prototype.get__status,
set: com.unhurdle.spectrum.Alert.prototype.set__status}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
com.unhurdle.spectrum.Alert.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'Alert', qName: 'com.unhurdle.spectrum.Alert', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
com.unhurdle.spectrum.Alert.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'noDismiss': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.Alert'},
        'showOverlay': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.Alert'},
        'closeText': { type: 'String', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.Alert'},
        'header': { type: 'String', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.Alert'},
        'content': { type: 'String', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.Alert'},
        'status': { type: 'String', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.Alert'}
      };
    },
    methods: function () {
      return {
        'Alert': { type: '', declaredBy: 'com.unhurdle.spectrum.Alert'},
        'show': { type: 'void', declaredBy: 'com.unhurdle.spectrum.Alert'},
        'hide': { type: 'void', declaredBy: 'com.unhurdle.spectrum.Alert'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
com.unhurdle.spectrum.Alert.prototype.ROYALE_COMPILE_FLAGS = 11;
/**
 * Provide reflection support for distinguishing dynamic fields on class object (static)
 * @const
 * @type {Array<string>}
 */
com.unhurdle.spectrum.Alert.prototype.ROYALE_INITIAL_STATICS = Object.keys(com.unhurdle.spectrum.Alert);
