/**
 * Generated by Apache Royale Compiler from com/unhurdle/spectrum/ComboBoxList.as
 * com.unhurdle.spectrum.ComboBoxList
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('com.unhurdle.spectrum.ComboBoxList');
/* Royale Dependency List: com.unhurdle.spectrum.Application,com.unhurdle.spectrum.Menu,com.unhurdle.spectrum.Search,com.unhurdle.spectrum.renderers.MenuItemRenderer,org.apache.royale.core.IStrand,org.apache.royale.events.Event,org.apache.royale.events.MouseEvent,org.apache.royale.functional.decorator.debounceLong,org.apache.royale.geom.Rectangle,org.apache.royale.html.beads.DataContainerView,org.apache.royale.utils.DisplayUtils,org.apache.royale.utils.Language*/

goog.require('com.unhurdle.spectrum.Popover');
goog.require('org.apache.royale.core.IBead');
goog.require('org.apache.royale.core.IPopUp');



/**
 * @constructor
 * @extends {com.unhurdle.spectrum.Popover}
 * @implements {org.apache.royale.core.IPopUp}
 * @implements {org.apache.royale.core.IBead}
 */
com.unhurdle.spectrum.ComboBoxList = function() {
  com.unhurdle.spectrum.ComboBoxList.base(this, 'constructor');
  this.com_unhurdle_spectrum_ComboBoxList__list = new com.unhurdle.spectrum.Menu();
  this.floating = true;
  this.tabFocusable = false;
  this.com_unhurdle_spectrum_ComboBoxList__list.addEventListener("change", org.apache.royale.utils.Language.closure(this.handleListChange, this, 'handleListChange'));
};
goog.inherits(com.unhurdle.spectrum.ComboBoxList, com.unhurdle.spectrum.Popover);


/**
 * @private
 * @type {com.unhurdle.spectrum.Menu}
 */
com.unhurdle.spectrum.ComboBoxList.prototype.com_unhurdle_spectrum_ComboBoxList__list = null;


/**
 * @override
 */
com.unhurdle.spectrum.ComboBoxList.prototype.addedToParent = function() {
  com.unhurdle.spectrum.ComboBoxList.superClass_.addedToParent.apply(this);
  this.addElement(this.com_unhurdle_spectrum_ComboBoxList__list);
};


/**
 * @private
 * @type {com.unhurdle.spectrum.Search}
 */
com.unhurdle.spectrum.ComboBoxList.prototype.com_unhurdle_spectrum_ComboBoxList_search = null;


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.ComboBoxList.prototype.com_unhurdle_spectrum_ComboBoxList__searchable = false;


/**
 * @private
 */
com.unhurdle.spectrum.ComboBoxList.prototype.com_unhurdle_spectrum_ComboBoxList_handleSearch = function() {
  var /** @type {org.apache.royale.html.beads.DataContainerView} */ dataView = this.list.view;
  var /** @type {number} */ len = dataView.numItemRenderers;
  for (var /** @type {number} */ i = 0; i < len; i++) {
    var /** @type {com.unhurdle.spectrum.renderers.MenuItemRenderer} */ renderer = dataView.getItemRendererAt(i);
    if (!this.com_unhurdle_spectrum_ComboBoxList_search.text || (renderer.data["label"] && renderer.data["label"]["toLowerCase"]()["includes"](this.com_unhurdle_spectrum_ComboBoxList_search.text.toLowerCase()))) {
      renderer.visible = true;
    } else {
      renderer.visible = false;
    }
  }
};


/**
 */
com.unhurdle.spectrum.ComboBoxList.prototype.handleListChange = function() {
  this.open = false;
  this.dispatchEvent(new org.apache.royale.events.Event("change"));
};


/**
 * @protected
 * @param {org.apache.royale.events.MouseEvent} event
 */
com.unhurdle.spectrum.ComboBoxList.prototype.handleControlMouseDown = function(event) {
  event.stopImmediatePropagation();
};


/**
 * @protected
 * @param {org.apache.royale.events.MouseEvent} event
 */
com.unhurdle.spectrum.ComboBoxList.prototype.handleTopMostEventDispatcherMouseDown = function(event) {
  this.open = false;
};


/**
 * @private
 * @type {number}
 */
com.unhurdle.spectrum.ComboBoxList.prototype.com_unhurdle_spectrum_ComboBoxList__minMenuHeight = 60;


/**
 * @param {org.apache.royale.geom.Rectangle} componentBounds
 * @param {number=} preferredWidth
 */
com.unhurdle.spectrum.ComboBoxList.prototype.positionPopup = function(componentBounds, preferredWidth) {
  preferredWidth = typeof preferredWidth !== 'undefined' ? preferredWidth : NaN;
  var /** @type {number} */ minHeight = this.com_unhurdle_spectrum_ComboBoxList__minMenuHeight + 6;
  var /** @type {org.apache.royale.geom.Rectangle} */ appBounds = org.apache.royale.utils.DisplayUtils.getScreenBoundingRect(com.unhurdle.spectrum.Application.current.initialView);
  var /** @type {number} */ spaceToBottom = appBounds.bottom - componentBounds.bottom;
  var /** @type {number} */ spaceToTop = componentBounds.top - appBounds.top;
  var /** @type {boolean} */ spaceOnBottom = spaceToBottom >= spaceToTop;
  var /** @type {string} */ pxStr = "px";
  switch (this.position) {
    case "top":
      if (spaceToTop >= minHeight || !spaceOnBottom) {
        this.com_unhurdle_spectrum_ComboBoxList_positionPopoverTop(appBounds.bottom - componentBounds.top, spaceToTop);
      } else {
        this.com_unhurdle_spectrum_ComboBoxList_positionPopoverBottom(componentBounds, spaceToBottom);
      }
      break;
    default:
      if (spaceToBottom >= minHeight || spaceOnBottom) {
        this.com_unhurdle_spectrum_ComboBoxList_positionPopoverBottom(componentBounds, spaceToBottom);
      } else {
        this.com_unhurdle_spectrum_ComboBoxList_positionPopoverTop(appBounds.bottom - componentBounds.top, spaceToTop);
      }
      break;
  }
  var /** @type {number} */ leftSpace = componentBounds.x;
  var /** @type {number} */ rightSpace = appBounds.width - (componentBounds.x + componentBounds.width);
  if (rightSpace < leftSpace) {
    this.setStyle("right", rightSpace + "px");
    this.setStyle("left", null);
  } else {
    this.setStyle("right", null);
    this.setStyle("left", leftSpace + "px");
  }
  if (isNaN(this.explicitWidth) && !isNaN(preferredWidth)) {
    this.setStyle("minWidth", preferredWidth + "px");
  }
};


/**
 * @private
 * @param {org.apache.royale.geom.Rectangle} componentBounds
 * @param {number} maxHeight
 */
com.unhurdle.spectrum.ComboBoxList.prototype.com_unhurdle_spectrum_ComboBoxList_positionPopoverBottom = function(componentBounds, maxHeight) {
  var /** @type {string} */ pxStr = null;
  maxHeight -= 6;
  //var /** @type {string} */ pxStr = null;
  this.setStyle("bottom", "");
  pxStr = componentBounds.bottom + "px";
  this.setStyle("top", pxStr);
  pxStr = maxHeight + "px";
  this.setStyle("max-height", pxStr);
  if (this.position == "top") {
    this.position = "bottom";
  }
};


/**
 * @private
 * @param {number} bottom
 * @param {number} maxHeight
 */
com.unhurdle.spectrum.ComboBoxList.prototype.com_unhurdle_spectrum_ComboBoxList_positionPopoverTop = function(bottom, maxHeight) {
  var /** @type {string} */ pxStr = null;
  maxHeight -= 6;
  //var /** @type {string} */ pxStr = null;
  pxStr = bottom + "px";
  this.setStyle("top", "");
  this.setStyle("bottom", pxStr);
  pxStr = maxHeight + "px";
  this.setStyle("max-height", pxStr);
  if (this.position == "bottom") {
    this.position = "top";
  }
};


/**
 * @nocollapse
 * @export
 * @type {com.unhurdle.spectrum.Menu}
 */
com.unhurdle.spectrum.ComboBoxList.prototype.list;


com.unhurdle.spectrum.ComboBoxList.prototype.get__list = function() {
  return this.com_unhurdle_spectrum_ComboBoxList__list;
};


com.unhurdle.spectrum.ComboBoxList.prototype.set__list = function(value) {
  this.com_unhurdle_spectrum_ComboBoxList__list = value;
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.ComboBoxList.prototype.searchable;


com.unhurdle.spectrum.ComboBoxList.prototype.get__searchable = function() {
  return this.com_unhurdle_spectrum_ComboBoxList__searchable;
};


com.unhurdle.spectrum.ComboBoxList.prototype.set__searchable = function(value) {
  this.com_unhurdle_spectrum_ComboBoxList__searchable = value;
  if (!this.com_unhurdle_spectrum_ComboBoxList__searchable) {
    if (this.com_unhurdle_spectrum_ComboBoxList_search) {
      this.removeElement(this.com_unhurdle_spectrum_ComboBoxList_search);
    }
  } else {
    if (!this.com_unhurdle_spectrum_ComboBoxList_search) {
      this.com_unhurdle_spectrum_ComboBoxList_search = new com.unhurdle.spectrum.Search();
      this.com_unhurdle_spectrum_ComboBoxList_search.addEventListener("input", org.apache.royale.functional.decorator.debounceLong(org.apache.royale.utils.Language.closure(this.com_unhurdle_spectrum_ComboBoxList_handleSearch, this, 'com_unhurdle_spectrum_ComboBoxList_handleSearch'), 150));
      this.com_unhurdle_spectrum_ComboBoxList_search.addEventListener("search", org.apache.royale.utils.Language.closure(this.com_unhurdle_spectrum_ComboBoxList_handleSearch, this, 'com_unhurdle_spectrum_ComboBoxList_handleSearch'));
      this.com_unhurdle_spectrum_ComboBoxList_search.tabFocusable = true;
      this.addElement(this.com_unhurdle_spectrum_ComboBoxList_search);
    }
  }
};


com.unhurdle.spectrum.ComboBoxList.prototype.set__tabFocusable = function(value) {
  this._tabFocusable = value;
  if (value) {
    this.setAttribute("tabindex", 0);
  } else {
    this.setAttribute("tabindex", -1);
  }
};


com.unhurdle.spectrum.ComboBoxList.prototype.set__open = function(value) {
  com.unhurdle.spectrum.ComboBoxList.superClass_.set__open.apply(this, [value]);
  if (value) {
    this.com_unhurdle_spectrum_ComboBoxList__list.focus();
    this.addEventListener(org.apache.royale.events.MouseEvent.MOUSE_DOWN, org.apache.royale.utils.Language.closure(this.handleControlMouseDown, this, 'handleControlMouseDown'));
    this.topMostEventDispatcher.addEventListener(org.apache.royale.events.MouseEvent.MOUSE_DOWN, org.apache.royale.utils.Language.closure(this.handleTopMostEventDispatcherMouseDown, this, 'handleTopMostEventDispatcherMouseDown'));
  } else {
    this.com_unhurdle_spectrum_ComboBoxList__list.blur();
    this.removeEventListener(org.apache.royale.events.MouseEvent.MOUSE_DOWN, org.apache.royale.utils.Language.closure(this.handleControlMouseDown, this, 'handleControlMouseDown'));
    this.topMostEventDispatcher.removeEventListener(org.apache.royale.events.MouseEvent.MOUSE_DOWN, org.apache.royale.utils.Language.closure(this.handleTopMostEventDispatcherMouseDown, this, 'handleTopMostEventDispatcherMouseDown'));
  }
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
com.unhurdle.spectrum.ComboBoxList.prototype.minMenuHeight;


com.unhurdle.spectrum.ComboBoxList.prototype.get__minMenuHeight = function() {
  return this.com_unhurdle_spectrum_ComboBoxList__minMenuHeight;
};


com.unhurdle.spectrum.ComboBoxList.prototype.set__minMenuHeight = function(value) {
  this.com_unhurdle_spectrum_ComboBoxList__minMenuHeight = value;
};


/**
 * @nocollapse
 * @export
 * @type {org.apache.royale.core.IStrand}
 */
com.unhurdle.spectrum.ComboBoxList.prototype.strand;


com.unhurdle.spectrum.ComboBoxList.prototype.set__strand = function(value) {
};


Object.defineProperties(com.unhurdle.spectrum.ComboBoxList.prototype, /** @lends {com.unhurdle.spectrum.ComboBoxList.prototype} */ {
/**
 * @type {com.unhurdle.spectrum.Menu}
 */
list: {
get: com.unhurdle.spectrum.ComboBoxList.prototype.get__list,
set: com.unhurdle.spectrum.ComboBoxList.prototype.set__list},
/**
 * @type {boolean}
 */
searchable: {
get: com.unhurdle.spectrum.ComboBoxList.prototype.get__searchable,
set: com.unhurdle.spectrum.ComboBoxList.prototype.set__searchable},
/**
 * @type {boolean}
 */
tabFocusable: {
get: com.unhurdle.spectrum.Group.prototype.get__tabFocusable,
set: com.unhurdle.spectrum.ComboBoxList.prototype.set__tabFocusable},
/**
 * @type {boolean}
 */
open: {
get: com.unhurdle.spectrum.Popover.prototype.get__open,
set: com.unhurdle.spectrum.ComboBoxList.prototype.set__open},
/**
 * @type {number}
 */
minMenuHeight: {
get: com.unhurdle.spectrum.ComboBoxList.prototype.get__minMenuHeight,
set: com.unhurdle.spectrum.ComboBoxList.prototype.set__minMenuHeight},
/**
 * @type {org.apache.royale.core.IStrand}
 */
strand: {
set: com.unhurdle.spectrum.ComboBoxList.prototype.set__strand}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
com.unhurdle.spectrum.ComboBoxList.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'ComboBoxList', qName: 'com.unhurdle.spectrum.ComboBoxList', kind: 'class' }], interfaces: [org.apache.royale.core.IPopUp, org.apache.royale.core.IBead] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
com.unhurdle.spectrum.ComboBoxList.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'list': { type: 'com.unhurdle.spectrum.Menu', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.ComboBoxList'},
        'searchable': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.ComboBoxList'},
        'tabFocusable': { type: 'Boolean', access: 'writeonly', declaredBy: 'com.unhurdle.spectrum.ComboBoxList'},
        'open': { type: 'Boolean', access: 'writeonly', declaredBy: 'com.unhurdle.spectrum.ComboBoxList'},
        'minMenuHeight': { type: 'Number', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.ComboBoxList'},
        'strand': { type: 'org.apache.royale.core.IStrand', access: 'writeonly', declaredBy: 'com.unhurdle.spectrum.ComboBoxList'}
      };
    },
    methods: function () {
      return {
        'ComboBoxList': { type: '', declaredBy: 'com.unhurdle.spectrum.ComboBoxList'},
        'addedToParent': { type: 'void', declaredBy: 'com.unhurdle.spectrum.ComboBoxList'},
        'handleListChange': { type: 'void', declaredBy: 'com.unhurdle.spectrum.ComboBoxList'},
        'positionPopup': { type: 'void', declaredBy: 'com.unhurdle.spectrum.ComboBoxList', parameters: function () { return [ 'org.apache.royale.geom.Rectangle', false ,'Number', true ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
com.unhurdle.spectrum.ComboBoxList.prototype.ROYALE_COMPILE_FLAGS = 11;
