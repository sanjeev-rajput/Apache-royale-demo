/**
 * Generated by Apache Royale Compiler from com/unhurdle/spectrum/Toast.as
 * com.unhurdle.spectrum.Toast
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('com.unhurdle.spectrum.Toast');
/* Royale Dependency List: com.unhurdle.spectrum.Application,com.unhurdle.spectrum.Button,com.unhurdle.spectrum.ClearButton,com.unhurdle.spectrum.Icon,com.unhurdle.spectrum.TextNode,com.unhurdle.spectrum.newElement,org.apache.royale.core.WrappedHTMLElement,org.apache.royale.events.Event,org.apache.royale.utils.Timer,org.apache.royale.utils.css.addDynamicSelector,org.apache.royale.utils.Language*/

goog.require('com.unhurdle.spectrum.SpectrumBase');



/**
 * <inject_html>
 * <link rel="stylesheet" href="assets/css/components/toast/dist.css">
 * </inject_html>
 * 
 * @constructor
 * @extends {com.unhurdle.spectrum.SpectrumBase}
 * @param {string=} content
 * @param {number=} autoClose
 */
com.unhurdle.spectrum.Toast = function(content, autoClose) {
  content = typeof content !== 'undefined' ? content : null;
  autoClose = typeof autoClose !== 'undefined' ? autoClose : 0;
  com.unhurdle.spectrum.Toast.base(this, 'constructor');
  this.typeNames = this.appendSelector("-container");
  if (content) {
    this.text = content;
  }
  this.autoClose = autoClose;
  if (!com.unhurdle.spectrum.Toast.keyFramesSet) {
    this.setKeyFrames();
  }
};
goog.inherits(com.unhurdle.spectrum.Toast, com.unhurdle.spectrum.SpectrumBase);


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.Toast.keyFramesSet = false;


/**
 * @nocollapse
 * @const
 * @type {string}
 */
com.unhurdle.spectrum.Toast.INFO = "info";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
com.unhurdle.spectrum.Toast.NEGATIVE = "negative";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
com.unhurdle.spectrum.Toast.POSITIVE = "positive";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
com.unhurdle.spectrum.Toast.WARNING = "warning";


/**
 * @nocollapse
 * @const
 * @type {string}
 */
com.unhurdle.spectrum.Toast.SUCCESS = "success";


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.Toast.prototype.getSelector = function() {
  return "spectrum-Toast";
};


/**
 * @protected
 */
com.unhurdle.spectrum.Toast.prototype.setKeyFrames = function() {
  com.unhurdle.spectrum.Toast.keyFramesSet = true;
  var /** @type {string} */ selector = "@-webkit-keyframes spectrum-toast-fadein";
  var /** @type {string} */ rule = "from {bottom: 0; opacity: 0;} to {bottom: 30px; opacity: 1;}";
  org.apache.royale.utils.css.addDynamicSelector(selector, rule);
  selector = "@keyframes spectrum-toast-fadein";
  org.apache.royale.utils.css.addDynamicSelector(selector, rule);
  selector = "@-webkit-keyframes spectrum-toast-fadeout";
  rule = "from {bottom: 30px; opacity: 1;} to {bottom: 0px; opacity: 0;}";
  org.apache.royale.utils.css.addDynamicSelector(selector, rule);
  selector = "@keyframes spectrum-toast-fadeout";
  org.apache.royale.utils.css.addDynamicSelector(selector, rule);
  selector = ".spectrum-Toast-container.show";
  rule = "visibility: visible; -webkit-animation: spectrum-toast-fadein 0.5s; animation: spectrum-toast-fadein 0.5s;";
  org.apache.royale.utils.css.addDynamicSelector(selector, rule);
  selector = ".spectrum-Toast-container.hide";
  rule = "visibility: visible; -webkit-animation: spectrum-toast-fadeout 0.5s; animation: spectrum-toast-fadeout 0.5s;";
  org.apache.royale.utils.css.addDynamicSelector(selector, rule);
};


/**
 * @private
 * @type {string}
 */
com.unhurdle.spectrum.Toast.prototype.com_unhurdle_spectrum_Toast__text = null;


/**
 * @private
 * @type {string}
 */
com.unhurdle.spectrum.Toast.prototype.com_unhurdle_spectrum_Toast__action = null;


/**
 * @private
 * @type {com.unhurdle.spectrum.Button}
 */
com.unhurdle.spectrum.Toast.prototype.com_unhurdle_spectrum_Toast_actionButton = null;


/**
 * @private
 * @param {org.apache.royale.events.Event} ev
 */
com.unhurdle.spectrum.Toast.prototype.com_unhurdle_spectrum_Toast_onAction = function(ev) {
  if (this.com_unhurdle_spectrum_Toast__shown) {
    this.dispatchEvent(new org.apache.royale.events.Event("accept"));
  }
  this.hide();
};


/**
 * @private
 * @type {string}
 */
com.unhurdle.spectrum.Toast.prototype.com_unhurdle_spectrum_Toast__flavor = null;


/**
 * @private
 * @type {org.apache.royale.utils.Timer}
 */
com.unhurdle.spectrum.Toast.prototype.com_unhurdle_spectrum_Toast_timer = null;


/**
 */
com.unhurdle.spectrum.Toast.prototype.show = function() {
  if (this.com_unhurdle_spectrum_Toast__shown) {
    return;
  }
  this.com_unhurdle_spectrum_Toast__shown = true;
  com.unhurdle.spectrum.Application.current.popUpParent.addElement(this);
  this.toggle("show", true);
  this.element.style.visibility = null;
  if (this.autoClose) {
    this.com_unhurdle_spectrum_Toast_timer = new org.apache.royale.utils.Timer(this.autoClose);
    this.com_unhurdle_spectrum_Toast_timer.addEventListener(org.apache.royale.utils.Timer.TIMER, org.apache.royale.utils.Language.closure(this.com_unhurdle_spectrum_Toast_onTimer, this, 'com_unhurdle_spectrum_Toast_onTimer'));
    this.com_unhurdle_spectrum_Toast_timer.start();
  }
};


/**
 * @private
 * @param {org.apache.royale.events.Event} ev
 */
com.unhurdle.spectrum.Toast.prototype.com_unhurdle_spectrum_Toast_onTimer = function(ev) {
  this.com_unhurdle_spectrum_Toast_timer.removeEventListener(org.apache.royale.utils.Timer.TIMER, org.apache.royale.utils.Language.closure(this.com_unhurdle_spectrum_Toast_onTimer, this, 'com_unhurdle_spectrum_Toast_onTimer'));
  this.hide();
};


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.Toast.prototype.com_unhurdle_spectrum_Toast__shown = false;


/**
 */
com.unhurdle.spectrum.Toast.prototype.hide = function() {
  if (!this.com_unhurdle_spectrum_Toast__shown) {
    return;
  }
  this.com_unhurdle_spectrum_Toast__shown = false;
  this.toggle("show", false);
  this.toggle("hide", true);
  setTimeout(org.apache.royale.utils.Language.closure(this.com_unhurdle_spectrum_Toast_removeMe, this, 'com_unhurdle_spectrum_Toast_removeMe'), 500);
  this.dispatchEvent(new org.apache.royale.events.Event("close"));
};


/**
 * @private
 */
com.unhurdle.spectrum.Toast.prototype.com_unhurdle_spectrum_Toast_removeMe = function() {
  com.unhurdle.spectrum.Application.current.popUpParent.removeElement(this);
  this.toggle("hide", false);
};


/**
 * @private
 * @type {number}
 */
com.unhurdle.spectrum.Toast.prototype.com_unhurdle_spectrum_Toast__autoClose = 0;


/**
 * @private
 * @type {com.unhurdle.spectrum.Icon}
 */
com.unhurdle.spectrum.Toast.prototype.com_unhurdle_spectrum_Toast_icon = null;


/**
 * @private
 * @param {string} flavor
 */
com.unhurdle.spectrum.Toast.prototype.com_unhurdle_spectrum_Toast_createIcon = function(flavor) {
  var /** @type {string} */ type = null;
  //var /** @type {string} */ type = null;
  switch (flavor) {
    case "negative":
      type = "Alert";
      break;
    case "positive":
      type = "Success";
      break;
    case "success":
      type = "Success";
      break;
    case "info":
      type = "Info";
      break;
    case "error":
      type = "Alert";
      break;
    case "warning":
      type = "Alert";
      break;
    default:
      return;
  }
  var /** @type {string} */ sizedType = type + "Medium";
  var /** @type {string} */ iconClass = this.appendSelector("-typeIcon");
  var /** @type {string} */ useSelector = com.unhurdle.spectrum.Icon.getCSSTypeSelector(sizedType);
  if (this.com_unhurdle_spectrum_Toast_icon) {
    this.com_unhurdle_spectrum_Toast_icon.type = sizedType;
    this.com_unhurdle_spectrum_Toast_icon.toggle(iconClass, true);
    this.com_unhurdle_spectrum_Toast_icon.selector = useSelector;
  } else {
    this.com_unhurdle_spectrum_Toast_icon = new com.unhurdle.spectrum.Icon(useSelector);
    this.com_unhurdle_spectrum_Toast_icon.type = sizedType;
    this.com_unhurdle_spectrum_Toast_icon.toggle(iconClass, true);
    this.com_unhurdle_spectrum_Toast_toast.insertBefore(this.com_unhurdle_spectrum_Toast_icon.element, this.com_unhurdle_spectrum_Toast_body || null);
  }
};


/**
 * @private
 * @type {HTMLElement}
 */
com.unhurdle.spectrum.Toast.prototype.com_unhurdle_spectrum_Toast_toast = null;


/**
 * @private
 * @type {com.unhurdle.spectrum.TextNode}
 */
com.unhurdle.spectrum.Toast.prototype.com_unhurdle_spectrum_Toast_contentNode = null;


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.Toast.prototype.createElement = function() {
  var /** @type {org.apache.royale.core.WrappedHTMLElement} */ elem = com.unhurdle.spectrum.Toast.superClass_.createElement.apply(this);
  var /** @type {string} */ styleStr = "visibility:hidden;position:fixed;bottom:30px;width:100%;display:flex;align-items:center;justify-content:center;z-index:100;";
  elem.setAttribute("style", styleStr);
  this.com_unhurdle_spectrum_Toast_toast = com.unhurdle.spectrum.newElement("div");
  this.com_unhurdle_spectrum_Toast_toast.className = this.getSelector();
  this.com_unhurdle_spectrum_Toast_body = com.unhurdle.spectrum.newElement("div");
  this.com_unhurdle_spectrum_Toast_body.className = this.appendSelector("-body");
  this.com_unhurdle_spectrum_Toast_contentNode = new com.unhurdle.spectrum.TextNode("div");
  this.com_unhurdle_spectrum_Toast_contentNode.className = this.appendSelector("-content");
  this.com_unhurdle_spectrum_Toast_body.appendChild(this.com_unhurdle_spectrum_Toast_contentNode.element);
  this.com_unhurdle_spectrum_Toast_toast.appendChild(this.com_unhurdle_spectrum_Toast_body);
  var /** @type {HTMLElement} */ buttons = com.unhurdle.spectrum.newElement("div");
  buttons.className = this.appendSelector("-buttons");
  var /** @type {com.unhurdle.spectrum.ClearButton} */ button = new com.unhurdle.spectrum.ClearButton();
  button.overBackground = true;
  buttons.appendChild(button.element);
  button.addEventListener("click", org.apache.royale.utils.Language.closure(this.hide, this, 'hide'));
  this.com_unhurdle_spectrum_Toast_toast.appendChild(buttons);
  elem.appendChild(this.com_unhurdle_spectrum_Toast_toast);
  return elem;
};


/**
 * @private
 * @type {HTMLElement}
 */
com.unhurdle.spectrum.Toast.prototype.com_unhurdle_spectrum_Toast_body = null;


/**
 * @nocollapse
 * @export
 * @type {string}
 */
com.unhurdle.spectrum.Toast.prototype.text;


com.unhurdle.spectrum.Toast.prototype.get__text = function() {
  return this.com_unhurdle_spectrum_Toast__text;
};


com.unhurdle.spectrum.Toast.prototype.set__text = function(value) {
  this.com_unhurdle_spectrum_Toast__text = value;
  this.com_unhurdle_spectrum_Toast_contentNode.text = value;
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
com.unhurdle.spectrum.Toast.prototype.action;


com.unhurdle.spectrum.Toast.prototype.get__action = function() {
  return this.com_unhurdle_spectrum_Toast__action;
};


com.unhurdle.spectrum.Toast.prototype.set__action = function(value) {
  if (!this.com_unhurdle_spectrum_Toast_actionButton) {
    this.com_unhurdle_spectrum_Toast_actionButton = new com.unhurdle.spectrum.Button();
    this.com_unhurdle_spectrum_Toast_actionButton.flavor = com.unhurdle.spectrum.Button.OVER_BACKGROUND;
    this.com_unhurdle_spectrum_Toast_actionButton.quiet = true;
    this.com_unhurdle_spectrum_Toast_actionButton.addEventListener("click", org.apache.royale.utils.Language.closure(this.com_unhurdle_spectrum_Toast_onAction, this, 'com_unhurdle_spectrum_Toast_onAction'));
    this.com_unhurdle_spectrum_Toast_body.appendChild(this.com_unhurdle_spectrum_Toast_actionButton.element);
  }
  this.com_unhurdle_spectrum_Toast_actionButton.text = value;
  this.com_unhurdle_spectrum_Toast__action = value;
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
com.unhurdle.spectrum.Toast.prototype.flavor;


com.unhurdle.spectrum.Toast.prototype.get__flavor = function() {
  return this.com_unhurdle_spectrum_Toast__flavor;
};


com.unhurdle.spectrum.Toast.prototype.set__flavor = function(value) {
  if (value != this.com_unhurdle_spectrum_Toast__flavor) {
    switch (value) {
      case "info":
      
      case "positive":
      
      case "success":
      
      case "negative":
      
      case "error":
      
      case "warning":
      
      case "":
        break;
      default:
        throw new Error("Unknown flavor: " + value);
    }
    if (this.com_unhurdle_spectrum_Toast__flavor) {
      var /** @type {string} */ oldFlavor = this.valueToSelector(this.com_unhurdle_spectrum_Toast__flavor);
      this.com_unhurdle_spectrum_Toast_toast.classList.remove(oldFlavor);
    }
    var /** @type {string} */ newFlavor = this.valueToSelector(value);
    this.com_unhurdle_spectrum_Toast_toast.classList.add(newFlavor);
    this.com_unhurdle_spectrum_Toast_createIcon(value);
  }
  this.com_unhurdle_spectrum_Toast__flavor = value;
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
com.unhurdle.spectrum.Toast.prototype.autoClose;


com.unhurdle.spectrum.Toast.prototype.get__autoClose = function() {
  return this.com_unhurdle_spectrum_Toast__autoClose;
};


com.unhurdle.spectrum.Toast.prototype.set__autoClose = function(value) {
  this.com_unhurdle_spectrum_Toast__autoClose = value;
};


Object.defineProperties(com.unhurdle.spectrum.Toast.prototype, /** @lends {com.unhurdle.spectrum.Toast.prototype} */ {
/**
 * @type {string}
 */
text: {
get: com.unhurdle.spectrum.Toast.prototype.get__text,
set: com.unhurdle.spectrum.Toast.prototype.set__text},
/**
 * @type {string}
 */
action: {
get: com.unhurdle.spectrum.Toast.prototype.get__action,
set: com.unhurdle.spectrum.Toast.prototype.set__action},
/**
 * @type {string}
 */
flavor: {
get: com.unhurdle.spectrum.Toast.prototype.get__flavor,
set: com.unhurdle.spectrum.Toast.prototype.set__flavor},
/**
 * @type {number}
 */
autoClose: {
get: com.unhurdle.spectrum.Toast.prototype.get__autoClose,
set: com.unhurdle.spectrum.Toast.prototype.set__autoClose}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
com.unhurdle.spectrum.Toast.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'Toast', qName: 'com.unhurdle.spectrum.Toast', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
com.unhurdle.spectrum.Toast.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'text': { type: 'String', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.Toast'},
        'action': { type: 'String', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.Toast'},
        'flavor': { type: 'String', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.Toast'},
        'autoClose': { type: 'int', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.Toast'}
      };
    },
    methods: function () {
      return {
        'Toast': { type: '', declaredBy: 'com.unhurdle.spectrum.Toast', parameters: function () { return [ 'String', true ,'int', true ]; }},
        'show': { type: 'void', declaredBy: 'com.unhurdle.spectrum.Toast'},
        'hide': { type: 'void', declaredBy: 'com.unhurdle.spectrum.Toast'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
com.unhurdle.spectrum.Toast.prototype.ROYALE_COMPILE_FLAGS = 11;
/**
 * Provide reflection support for distinguishing dynamic fields on class object (static)
 * @const
 * @type {Array<string>}
 */
com.unhurdle.spectrum.Toast.prototype.ROYALE_INITIAL_STATICS = Object.keys(com.unhurdle.spectrum.Toast);
