/**
 * Generated by Apache Royale Compiler from com/unhurdle/spectrum/Application.as
 * com.unhurdle.spectrum.Application
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('com.unhurdle.spectrum.Application');
/* Royale Dependency List: org.apache.royale.binding.ApplicationDataBinding,org.apache.royale.core.AllCSSValuesImpl*/

goog.require('org.apache.royale.core.Application');



/**
 * <inject_html>
 * <link rel="stylesheet" href="assets/css/components/page/dist.css">
 * </inject_html>
 * @constructor
 * @extends {org.apache.royale.core.Application}
 */
com.unhurdle.spectrum.Application = function() {
  com.unhurdle.spectrum.Application.base(this, 'constructor');
  this.valuesImpl = new org.apache.royale.core.AllCSSValuesImpl();
  this.addBead(new org.apache.royale.binding.ApplicationDataBinding());
  this._colorstop = "light";
  this.com_unhurdle_spectrum_Application__appScale = "medium";
  this.element.className = 'Application spectrum spectrum--medium spectrum--light';
  com.unhurdle.spectrum.Application._current = this;
};
goog.inherits(com.unhurdle.spectrum.Application, org.apache.royale.core.Application);


/**
 * @private
 * @type {com.unhurdle.spectrum.Application}
 */
com.unhurdle.spectrum.Application._current = null;


/**
 * @nocollapse
 * @return {string}
 */
com.unhurdle.spectrum.Application.getSelectionColor = function() {
  switch (com.unhurdle.spectrum.Application.current.colorstop) {
    case "light":
      return "#1473e6";
    case "lightest":
      return "#2680eb";
    case "dark":
      return "#378ef0";
    case "darkest":
      return "#2680eb";
    case "paneldarkest":
      return "#2680eb";
  }
  return "#0";
};


/**
 * @param {string} selector
 * @param {boolean} value
 */
com.unhurdle.spectrum.Application.prototype.toggle = function(selector, value) {
  this.element.classList.toggle(selector, value);
};


/**
 * @protected
 * @type {string}
 */
com.unhurdle.spectrum.Application.prototype._colorstop = null;


/**
 * @protected
 * @param {string} value
 * @return {string}
 */
com.unhurdle.spectrum.Application.prototype.valueToSelector = function(value) {
  return "spectrum--" + value;
};


/**
 * @private
 * @type {string}
 */
com.unhurdle.spectrum.Application.prototype.com_unhurdle_spectrum_Application__appScale = null;


/**
 * @private
 * @type {string}
 */
com.unhurdle.spectrum.Application.prototype.com_unhurdle_spectrum_Application__dir = "ltr";


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.Application.prototype.initialize = function() {
  com.unhurdle.spectrum.Application.superClass_.initialize.apply(this);
  this.dir = this.com_unhurdle_spectrum_Application__dir;
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
com.unhurdle.spectrum.Application.prototype.colorstop;


com.unhurdle.spectrum.Application.prototype.get__colorstop = function() {
  return this._colorstop;
};


com.unhurdle.spectrum.Application.prototype.set__colorstop = function(value) {
  if (value != this._colorstop) {
    switch (value) {
      case "light":
      
      case "lightest":
      
      case "dark":
      
      case "darkest":
      
      case "paneldarkest":
        break;
      default:
        throw new Error("Invalid colorstop: " + value);
    }
    var /** @type {string} */ oldStop = this.valueToSelector(this._colorstop);
    var /** @type {string} */ newStop = this.valueToSelector(value);
    this.toggle(newStop, true);
    this.toggle(oldStop, false);
    this._colorstop = value;
  }
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
com.unhurdle.spectrum.Application.prototype.appScale;


com.unhurdle.spectrum.Application.prototype.get__appScale = function() {
  return this.com_unhurdle_spectrum_Application__appScale;
};


com.unhurdle.spectrum.Application.prototype.set__appScale = function(value) {
  if (value != this.com_unhurdle_spectrum_Application__appScale) {
    switch (value) {
      case "medium":
      
      case "large":
        break;
      default:
        throw new Error("Invalid scale: " + value);
    }
    var /** @type {string} */ oldScale = this.valueToSelector(this.com_unhurdle_spectrum_Application__appScale);
    var /** @type {string} */ newScale = this.valueToSelector(value);
    this.toggle(newScale, true);
    this.toggle(oldScale, false);
    this.com_unhurdle_spectrum_Application__appScale = value;
  }
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
com.unhurdle.spectrum.Application.prototype.dir;


com.unhurdle.spectrum.Application.prototype.get__dir = function() {
  return this.com_unhurdle_spectrum_Application__dir;
};


com.unhurdle.spectrum.Application.prototype.set__dir = function(value) {
  this.com_unhurdle_spectrum_Application__dir = value;
  if (this.initialView) {
    this.initialView.element.dir = this.com_unhurdle_spectrum_Application__dir;
  }
  document.documentElement.dir = this.com_unhurdle_spectrum_Application__dir;
};


Object.defineProperties(com.unhurdle.spectrum.Application.prototype, /** @lends {com.unhurdle.spectrum.Application.prototype} */ {
/**
 * @type {string}
 */
colorstop: {
get: com.unhurdle.spectrum.Application.prototype.get__colorstop,
set: com.unhurdle.spectrum.Application.prototype.set__colorstop},
/**
 * @type {string}
 */
appScale: {
get: com.unhurdle.spectrum.Application.prototype.get__appScale,
set: com.unhurdle.spectrum.Application.prototype.set__appScale},
/**
 * @type {string}
 */
dir: {
get: com.unhurdle.spectrum.Application.prototype.get__dir,
set: com.unhurdle.spectrum.Application.prototype.set__dir}}
);


/**
 * @nocollapse
 * @export
 * @type {com.unhurdle.spectrum.Application}
 */
com.unhurdle.spectrum.Application.current;


com.unhurdle.spectrum.Application.get__current = function() {
  return com.unhurdle.spectrum.Application._current;
};


Object.defineProperties(com.unhurdle.spectrum.Application, /** @lends {com.unhurdle.spectrum.Application} */ {
/**
 * @type {com.unhurdle.spectrum.Application}
 */
current: {
get: com.unhurdle.spectrum.Application.get__current}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
com.unhurdle.spectrum.Application.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'Application', qName: 'com.unhurdle.spectrum.Application', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
com.unhurdle.spectrum.Application.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        '|current': { type: 'com.unhurdle.spectrum.Application', access: 'readonly', declaredBy: 'com.unhurdle.spectrum.Application'},
        'colorstop': { type: 'String', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.Application'},
        'appScale': { type: 'String', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.Application'},
        'dir': { type: 'String', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.Application'}
      };
    },
    methods: function () {
      return {
        'Application': { type: '', declaredBy: 'com.unhurdle.spectrum.Application'},
        '|getSelectionColor': { type: 'String', declaredBy: 'com.unhurdle.spectrum.Application'},
        'toggle': { type: 'void', declaredBy: 'com.unhurdle.spectrum.Application', parameters: function () { return [ 'String', false ,'Boolean', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
com.unhurdle.spectrum.Application.prototype.ROYALE_COMPILE_FLAGS = 11;
/**
 * Provide reflection support for distinguishing dynamic fields on class object (static)
 * @const
 * @type {Array<string>}
 */
com.unhurdle.spectrum.Application.prototype.ROYALE_INITIAL_STATICS = Object.keys(com.unhurdle.spectrum.Application);
