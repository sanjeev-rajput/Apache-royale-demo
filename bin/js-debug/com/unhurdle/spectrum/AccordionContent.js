/**
 * Generated by Apache Royale Compiler from com/unhurdle/spectrum/AccordionContent.as
 * com.unhurdle.spectrum.AccordionContent
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('com.unhurdle.spectrum.AccordionContent');
/* Royale Dependency List: */

goog.require('com.unhurdle.spectrum.Group');



/**
 * @constructor
 * @extends {com.unhurdle.spectrum.Group}
 */
com.unhurdle.spectrum.AccordionContent = function() {
  com.unhurdle.spectrum.AccordionContent.base(this, 'constructor');
};
goog.inherits(com.unhurdle.spectrum.AccordionContent, com.unhurdle.spectrum.Group);


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.AccordionContent.prototype.getSelector = function() {
  return "spectrum-Accordion-itemContent";
};


/**
 * @private
 * @type {Text}
 */
com.unhurdle.spectrum.AccordionContent.prototype.com_unhurdle_spectrum_AccordionContent__textNode = null;


/**
 * @private
 * @type {string}
 */
com.unhurdle.spectrum.AccordionContent.prototype.com_unhurdle_spectrum_AccordionContent__text = null;


/**
 * @nocollapse
 * @export
 * @type {string}
 */
com.unhurdle.spectrum.AccordionContent.prototype.text;


com.unhurdle.spectrum.AccordionContent.prototype.get__text = function() {
  return this.com_unhurdle_spectrum_AccordionContent__text;
};


com.unhurdle.spectrum.AccordionContent.prototype.set__text = function(value) {
  this.com_unhurdle_spectrum_AccordionContent__text = value;
  if (!this.com_unhurdle_spectrum_AccordionContent__textNode) {
    this.com_unhurdle_spectrum_AccordionContent__textNode = document.createTextNode(this.com_unhurdle_spectrum_AccordionContent__text);
    this._element.appendChild(this.com_unhurdle_spectrum_AccordionContent__textNode);
  }
  this.com_unhurdle_spectrum_AccordionContent__textNode.nodeValue = value;
};


Object.defineProperties(com.unhurdle.spectrum.AccordionContent.prototype, /** @lends {com.unhurdle.spectrum.AccordionContent.prototype} */ {
/**
 * @type {string}
 */
text: {
get: com.unhurdle.spectrum.AccordionContent.prototype.get__text,
set: com.unhurdle.spectrum.AccordionContent.prototype.set__text}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
com.unhurdle.spectrum.AccordionContent.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'AccordionContent', qName: 'com.unhurdle.spectrum.AccordionContent', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
com.unhurdle.spectrum.AccordionContent.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'text': { type: 'String', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.AccordionContent'}
      };
    },
    methods: function () {
      return {
        'AccordionContent': { type: '', declaredBy: 'com.unhurdle.spectrum.AccordionContent'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
com.unhurdle.spectrum.AccordionContent.prototype.ROYALE_COMPILE_FLAGS = 11;
