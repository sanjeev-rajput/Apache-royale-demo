/**
 * Generated by Apache Royale Compiler from com/unhurdle/spectrum/HDivider.as
 * com.unhurdle.spectrum.HDivider
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('com.unhurdle.spectrum.HDivider');
/* Royale Dependency List: */

goog.require('com.unhurdle.spectrum.Divider');



/**
 * @constructor
 * @extends {com.unhurdle.spectrum.Divider}
 */
com.unhurdle.spectrum.HDivider = function() {
  com.unhurdle.spectrum.HDivider.base(this, 'constructor');
};
goog.inherits(com.unhurdle.spectrum.HDivider, com.unhurdle.spectrum.Divider);


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.HDivider.prototype.com_unhurdle_spectrum_HDivider__compact = false;


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.HDivider.prototype.getTag = function() {
  return "hr";
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.HDivider.prototype.compact;


com.unhurdle.spectrum.HDivider.prototype.get__compact = function() {
  return !!this.com_unhurdle_spectrum_HDivider__compact;
};


com.unhurdle.spectrum.HDivider.prototype.set__compact = function(value) {
  if (!!this.com_unhurdle_spectrum_HDivider__compact != value) {
    var /** @type {*} */ val = value ? 0 : "";
    this.setStyle("marginTop", val);
    this.setStyle("marginBottom", val);
    this.com_unhurdle_spectrum_HDivider__compact = value;
  }
};


Object.defineProperties(com.unhurdle.spectrum.HDivider.prototype, /** @lends {com.unhurdle.spectrum.HDivider.prototype} */ {
/**
 * @type {boolean}
 */
compact: {
get: com.unhurdle.spectrum.HDivider.prototype.get__compact,
set: com.unhurdle.spectrum.HDivider.prototype.set__compact}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
com.unhurdle.spectrum.HDivider.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'HDivider', qName: 'com.unhurdle.spectrum.HDivider', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
com.unhurdle.spectrum.HDivider.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'compact': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.HDivider'}
      };
    },
    methods: function () {
      return {
        'HDivider': { type: '', declaredBy: 'com.unhurdle.spectrum.HDivider'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
com.unhurdle.spectrum.HDivider.prototype.ROYALE_COMPILE_FLAGS = 11;
