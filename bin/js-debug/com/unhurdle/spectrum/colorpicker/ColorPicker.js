/**
 * Generated by Apache Royale Compiler from com/unhurdle/spectrum/colorpicker/ColorPicker.as
 * com.unhurdle.spectrum.colorpicker.ColorPicker
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('com.unhurdle.spectrum.colorpicker.ColorPicker');
/* Royale Dependency List: com.unhurdle.spectrum.ColorSwatch,com.unhurdle.spectrum.data.RGBColor,com.unhurdle.spectrum.interfaces.IColorPopover,com.unhurdle.spectrum.interfaces.IRGBA,com.unhurdle.spectrum.utils.getDataProviderItem,org.apache.royale.core.ValuesManager,org.apache.royale.core.WrappedHTMLElement,org.apache.royale.events.Event,org.apache.royale.events.MouseEvent,org.apache.royale.events.ValueEvent,org.apache.royale.utils.DisplayUtils,org.apache.royale.utils.Language*/

goog.require('com.unhurdle.spectrum.SpectrumBase');



/**
 * @constructor
 * @extends {com.unhurdle.spectrum.SpectrumBase}
 */
com.unhurdle.spectrum.colorpicker.ColorPicker = function() {
  com.unhurdle.spectrum.colorpicker.ColorPicker.base(this, 'constructor');
};
goog.inherits(com.unhurdle.spectrum.colorpicker.ColorPicker, com.unhurdle.spectrum.SpectrumBase);


/**
 * @private
 * @type {string}
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.com_unhurdle_spectrum_colorpicker_ColorPicker__position = "bottom";


/**
 * @protected
 * @type {com.unhurdle.spectrum.ColorSwatch}
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.button = null;


/**
 * @private
 * @type {Object}
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.com_unhurdle_spectrum_colorpicker_ColorPicker__dataProvider = null;


/**
 * @private
 * @type {string}
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.com_unhurdle_spectrum_colorpicker_ColorPicker__applyText = "Apply";


/**
 * @private
 * @type {string}
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.com_unhurdle_spectrum_colorpicker_ColorPicker__cancelText = "Cancel";


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.com_unhurdle_spectrum_colorpicker_ColorPicker__showApplyButtons = true;


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.com_unhurdle_spectrum_colorpicker_ColorPicker__showColorControls = true;


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.com_unhurdle_spectrum_colorpicker_ColorPicker__showAlphaControls = true;


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.com_unhurdle_spectrum_colorpicker_ColorPicker__showSelectionSwatch = true;


/**
 * @private
 * @type {number}
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.com_unhurdle_spectrum_colorpicker_ColorPicker__areaSize = 196;


/**
 * @private
 * @type {number}
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.com_unhurdle_spectrum_colorpicker_ColorPicker__preferredColumns = 0;


/**
 * @private
 * @type {number}
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.com_unhurdle_spectrum_colorpicker_ColorPicker__preferredRows = 0;


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.com_unhurdle_spectrum_colorpicker_ColorPicker__hexEditable = true;


/**
 * @private
 * @return {com.unhurdle.spectrum.ColorSwatch}
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.com_unhurdle_spectrum_colorpicker_ColorPicker_createButton = function() {
  var /** @type {com.unhurdle.spectrum.ColorSwatch} */ button = new com.unhurdle.spectrum.ColorSwatch();
  button.size = 24;
  button.setStyle("cursor", "pointer");
  button.addEventListener("click", org.apache.royale.utils.Language.closure(this.togglePopover, this, 'togglePopover'));
  return button;
};


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.createElement = function() {
  var /** @type {org.apache.royale.core.WrappedHTMLElement} */ elem = com.unhurdle.spectrum.colorpicker.ColorPicker.superClass_.createElement.apply(this);
  this.button = this.com_unhurdle_spectrum_colorpicker_ColorPicker_createButton();
  this.addElement(this.button);
  return elem;
};


/**
 * @override
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.addedToParent = function() {
  if (!this.appliedColor && this.dataProvider) {
    this.appliedColor = com.unhurdle.spectrum.utils.getDataProviderItem(this.dataProvider, 0);
  }
  com.unhurdle.spectrum.colorpicker.ColorPicker.superClass_.addedToParent.apply(this);
};


/**
 * @private
 * @type {com.unhurdle.spectrum.interfaces.IColorPopover}
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.com_unhurdle_spectrum_colorpicker_ColorPicker__popover = null;


/**
 * @protected
 * @param {org.apache.royale.events.ValueEvent} ev
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.handleColorChange = function(ev) {
  this.button.color = ev.value;
  this.dispatchEvent(ev);
};


/**
 * @protected
 * @param {org.apache.royale.events.ValueEvent} ev
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.handleColorCommit = function(ev) {
  this.dispatchEvent(ev);
  this.closePopover();
};


/**
 * @protected
 * @param {org.apache.royale.events.ValueEvent} ev
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.handleCancel = function(ev) {
  this.appliedColor = this.initialColor;
  this.dispatchEvent(ev);
  this.closePopover();
};


/**
 * @protected
 * @param {org.apache.royale.events.Event} ev
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.handleOpenChanged = function(ev) {
  this.dispatchEvent(ev);
};


/**
 * @protected
 * @param {org.apache.royale.events.Event} ev
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.togglePopover = function(ev) {
  ev.preventDefault();
  var /** @type {boolean} */ open = !this.popover.open;
  if (open) {
    requestAnimationFrame(org.apache.royale.utils.Language.closure(this.openPopup, this, 'openPopup'));
  } else {
    this.closePopover();
  }
};


/**
 * @protected
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.setPopupProperties = function() {
  this.popover.position = this.position;
  if (!this.appliedColor) {
    this.appliedColor = new com.unhurdle.spectrum.data.RGBColor([0, 0, 0, 1]);
  }
  this.popover.appliedColor = this.appliedColor;
  this.popover.dataProvider = this.dataProvider;
  this.popover.applyText = this.applyText;
  this.popover.cancelText = this.cancelText;
  this.popover.showApplyButtons = this.showApplyButtons;
  this.popover.showColorControls = this.showColorControls;
  this.popover.showAlphaControls = this.showAlphaControls;
  this.popover.showSelectionSwatch = this.showSelectionSwatch;
  this.popover.areaSize = this.areaSize;
  this.popover.preferredColumns = this.preferredColumns;
  this.popover.preferredRows = this.preferredRows;
  this.popover.hexEditable = this.hexEditable;
};


/**
 * @type {com.unhurdle.spectrum.interfaces.IRGBA}
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.initialColor = null;


/**
 * @protected
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.openPopup = function() {
  this.initialColor = this.appliedColor;
  this.popover.anchor = org.apache.royale.utils.DisplayUtils.getScreenBoundingRect(this.button);
  this.setPopupProperties();
  this.popover.open = true;
  this.button.addEventListener(org.apache.royale.events.MouseEvent.MOUSE_DOWN, org.apache.royale.utils.Language.closure(this.handleControlMouseDown, this, 'handleControlMouseDown'));
  this.popover.addEventListener(org.apache.royale.events.MouseEvent.MOUSE_DOWN, org.apache.royale.utils.Language.closure(this.handleControlMouseDown, this, 'handleControlMouseDown'));
  this.topMostEventDispatcher.addEventListener(org.apache.royale.events.MouseEvent.MOUSE_DOWN, org.apache.royale.utils.Language.closure(this.handleTopMostEventDispatcherMouseDown, this, 'handleTopMostEventDispatcherMouseDown'));
};


/**
 * @protected
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.closePopover = function() {
  var self = this;
  if (this.popover && this.popover.open) {
    this.popover.removeEventListener(org.apache.royale.events.MouseEvent.MOUSE_DOWN, org.apache.royale.utils.Language.closure(this.handleControlMouseDown, this, 'handleControlMouseDown'));
    this.button.removeEventListener(org.apache.royale.events.MouseEvent.MOUSE_DOWN, org.apache.royale.utils.Language.closure(this.handleControlMouseDown, this, 'handleControlMouseDown'));
    this.topMostEventDispatcher.removeEventListener(org.apache.royale.events.MouseEvent.MOUSE_DOWN, org.apache.royale.utils.Language.closure(this.handleTopMostEventDispatcherMouseDown, this, 'handleTopMostEventDispatcherMouseDown'));
    this.popover.open = false;
    requestAnimationFrame(function() {
      self.initialColor = null;
    });
  }
};


/**
 * @protected
 * @param {org.apache.royale.events.MouseEvent} event
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.handleControlMouseDown = function(event) {
  event.stopImmediatePropagation();
};


/**
 * @protected
 * @param {org.apache.royale.events.MouseEvent} event
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.handleTopMostEventDispatcherMouseDown = function(event) {
  this.cancelPopover();
};


/**
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.cancelPopover = function() {
  if (this.popover.open) {
    this.dispatchEvent(new org.apache.royale.events.Event("cancel"));
    this.closePopover();
  }
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.position;


com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.get__position = function() {
  return this.com_unhurdle_spectrum_colorpicker_ColorPicker__position;
};


com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.set__position = function(value) {
  this.com_unhurdle_spectrum_colorpicker_ColorPicker__position = value;
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.colorValue;


com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.get__colorValue = function() {
  if (!this.appliedColor) {
    return 0;
  }
  return this.appliedColor.colorValue;
};


com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.set__colorValue = function(value) {
  var /** @type {com.unhurdle.spectrum.data.RGBColor} */ color = new com.unhurdle.spectrum.data.RGBColor();
  color.colorValue = value;
  this.appliedColor = color;
};


/**
 * @nocollapse
 * @export
 * @type {com.unhurdle.spectrum.interfaces.IRGBA}
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.appliedColor;


com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.get__appliedColor = function() {
  return this.button.color;
};


com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.set__appliedColor = function(value) {
  this.button.color = value;
};


/**
 * @nocollapse
 * @export
 * @type {Object}
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.dataProvider;


com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.get__dataProvider = function() {
  return this.com_unhurdle_spectrum_colorpicker_ColorPicker__dataProvider;
};


com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.set__dataProvider = function(value) {
  this.com_unhurdle_spectrum_colorpicker_ColorPicker__dataProvider = value;
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.applyText;


com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.get__applyText = function() {
  return this.com_unhurdle_spectrum_colorpicker_ColorPicker__applyText;
};


com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.set__applyText = function(value) {
  this.com_unhurdle_spectrum_colorpicker_ColorPicker__applyText = value;
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.cancelText;


com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.get__cancelText = function() {
  return this.com_unhurdle_spectrum_colorpicker_ColorPicker__cancelText;
};


com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.set__cancelText = function(value) {
  this.com_unhurdle_spectrum_colorpicker_ColorPicker__cancelText = value;
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.showApplyButtons;


com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.get__showApplyButtons = function() {
  return this.com_unhurdle_spectrum_colorpicker_ColorPicker__showApplyButtons;
};


com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.set__showApplyButtons = function(value) {
  this.com_unhurdle_spectrum_colorpicker_ColorPicker__showApplyButtons = value;
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.showColorControls;


com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.get__showColorControls = function() {
  return this.com_unhurdle_spectrum_colorpicker_ColorPicker__showColorControls;
};


com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.set__showColorControls = function(value) {
  this.com_unhurdle_spectrum_colorpicker_ColorPicker__showColorControls = value;
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.showAlphaControls;


com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.get__showAlphaControls = function() {
  return this.com_unhurdle_spectrum_colorpicker_ColorPicker__showAlphaControls;
};


com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.set__showAlphaControls = function(value) {
  this.com_unhurdle_spectrum_colorpicker_ColorPicker__showAlphaControls = value;
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.showSelectionSwatch;


com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.get__showSelectionSwatch = function() {
  return this.com_unhurdle_spectrum_colorpicker_ColorPicker__showSelectionSwatch;
};


com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.set__showSelectionSwatch = function(value) {
  this.com_unhurdle_spectrum_colorpicker_ColorPicker__showSelectionSwatch = value;
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.areaSize;


com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.get__areaSize = function() {
  return this.com_unhurdle_spectrum_colorpicker_ColorPicker__areaSize;
};


com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.set__areaSize = function(value) {
  this.com_unhurdle_spectrum_colorpicker_ColorPicker__areaSize = value;
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.preferredColumns;


com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.get__preferredColumns = function() {
  return this.com_unhurdle_spectrum_colorpicker_ColorPicker__preferredColumns;
};


com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.set__preferredColumns = function(value) {
  this.com_unhurdle_spectrum_colorpicker_ColorPicker__preferredColumns = value;
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.preferredRows;


com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.get__preferredRows = function() {
  return this.com_unhurdle_spectrum_colorpicker_ColorPicker__preferredRows;
};


com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.set__preferredRows = function(value) {
  this.com_unhurdle_spectrum_colorpicker_ColorPicker__preferredRows = value;
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.hexEditable;


com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.get__hexEditable = function() {
  return this.com_unhurdle_spectrum_colorpicker_ColorPicker__hexEditable;
};


com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.set__hexEditable = function(value) {
  this.com_unhurdle_spectrum_colorpicker_ColorPicker__hexEditable = value;
};


/**
 * @nocollapse
 * @export
 * @type {com.unhurdle.spectrum.interfaces.IColorPopover}
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.popover;


com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.get__popover = function() {
  if (!this.com_unhurdle_spectrum_colorpicker_ColorPicker__popover) {
    var /** @type {Object} */ c =  /** @type {Object|null} */ (org.apache.royale.core.ValuesManager.valuesImpl.getValue(this, "iColorPopover"));
    if (c) {
      this.com_unhurdle_spectrum_colorpicker_ColorPicker__popover = org.apache.royale.utils.Language.resolveUncertain(new c());
    }
    if (this.com_unhurdle_spectrum_colorpicker_ColorPicker__popover) {
      this.com_unhurdle_spectrum_colorpicker_ColorPicker__popover.addEventListener("colorChanged", org.apache.royale.utils.Language.closure(this.handleColorChange, this, 'handleColorChange'));
      this.com_unhurdle_spectrum_colorpicker_ColorPicker__popover.addEventListener("colorCommit", org.apache.royale.utils.Language.closure(this.handleColorCommit, this, 'handleColorCommit'));
      this.com_unhurdle_spectrum_colorpicker_ColorPicker__popover.addEventListener("cancel", org.apache.royale.utils.Language.closure(this.handleCancel, this, 'handleCancel'));
      this.com_unhurdle_spectrum_colorpicker_ColorPicker__popover.addEventListener("openChanged", org.apache.royale.utils.Language.closure(this.handleOpenChanged, this, 'handleOpenChanged'));
    }
  }
  return this.com_unhurdle_spectrum_colorpicker_ColorPicker__popover;
};


com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.set__popover = function(value) {
  this.com_unhurdle_spectrum_colorpicker_ColorPicker__popover = value;
};


Object.defineProperties(com.unhurdle.spectrum.colorpicker.ColorPicker.prototype, /** @lends {com.unhurdle.spectrum.colorpicker.ColorPicker.prototype} */ {
/**
 * @type {string}
 */
position: {
get: com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.get__position,
set: com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.set__position},
/**
 * @type {number}
 */
colorValue: {
get: com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.get__colorValue,
set: com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.set__colorValue},
/**
 * @type {com.unhurdle.spectrum.interfaces.IRGBA}
 */
appliedColor: {
get: com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.get__appliedColor,
set: com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.set__appliedColor},
/**
 * @type {Object}
 */
dataProvider: {
get: com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.get__dataProvider,
set: com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.set__dataProvider},
/**
 * @type {string}
 */
applyText: {
get: com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.get__applyText,
set: com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.set__applyText},
/**
 * @type {string}
 */
cancelText: {
get: com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.get__cancelText,
set: com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.set__cancelText},
/**
 * @type {boolean}
 */
showApplyButtons: {
get: com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.get__showApplyButtons,
set: com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.set__showApplyButtons},
/**
 * @type {boolean}
 */
showColorControls: {
get: com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.get__showColorControls,
set: com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.set__showColorControls},
/**
 * @type {boolean}
 */
showAlphaControls: {
get: com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.get__showAlphaControls,
set: com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.set__showAlphaControls},
/**
 * @type {boolean}
 */
showSelectionSwatch: {
get: com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.get__showSelectionSwatch,
set: com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.set__showSelectionSwatch},
/**
 * @type {number}
 */
areaSize: {
get: com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.get__areaSize,
set: com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.set__areaSize},
/**
 * @type {number}
 */
preferredColumns: {
get: com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.get__preferredColumns,
set: com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.set__preferredColumns},
/**
 * @type {number}
 */
preferredRows: {
get: com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.get__preferredRows,
set: com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.set__preferredRows},
/**
 * @type {boolean}
 */
hexEditable: {
get: com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.get__hexEditable,
set: com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.set__hexEditable},
/**
 * @type {com.unhurdle.spectrum.interfaces.IColorPopover}
 */
popover: {
get: com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.get__popover,
set: com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.set__popover}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'ColorPicker', qName: 'com.unhurdle.spectrum.colorpicker.ColorPicker', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'initialColor': { type: 'com.unhurdle.spectrum.interfaces.IRGBA', get_set: function (/** com.unhurdle.spectrum.colorpicker.ColorPicker */ inst, /** * */ v) {return v !== undefined ? inst.initialColor = v : inst.initialColor;}}
      };
    },
    accessors: function () {
      return {
        'position': { type: 'String', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.colorpicker.ColorPicker'},
        'colorValue': { type: 'uint', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.colorpicker.ColorPicker'},
        'appliedColor': { type: 'com.unhurdle.spectrum.interfaces.IRGBA', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.colorpicker.ColorPicker'},
        'dataProvider': { type: 'Object', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.colorpicker.ColorPicker'},
        'applyText': { type: 'String', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.colorpicker.ColorPicker'},
        'cancelText': { type: 'String', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.colorpicker.ColorPicker'},
        'showApplyButtons': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.colorpicker.ColorPicker'},
        'showColorControls': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.colorpicker.ColorPicker'},
        'showAlphaControls': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.colorpicker.ColorPicker'},
        'showSelectionSwatch': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.colorpicker.ColorPicker'},
        'areaSize': { type: 'Number', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.colorpicker.ColorPicker'},
        'preferredColumns': { type: 'int', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.colorpicker.ColorPicker'},
        'preferredRows': { type: 'int', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.colorpicker.ColorPicker'},
        'hexEditable': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.colorpicker.ColorPicker'},
        'popover': { type: 'com.unhurdle.spectrum.interfaces.IColorPopover', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.colorpicker.ColorPicker'}
      };
    },
    methods: function () {
      return {
        'ColorPicker': { type: '', declaredBy: 'com.unhurdle.spectrum.colorpicker.ColorPicker'},
        'addedToParent': { type: 'void', declaredBy: 'com.unhurdle.spectrum.colorpicker.ColorPicker'},
        'cancelPopover': { type: 'void', declaredBy: 'com.unhurdle.spectrum.colorpicker.ColorPicker'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
com.unhurdle.spectrum.colorpicker.ColorPicker.prototype.ROYALE_COMPILE_FLAGS = 11;
