/**
 * Generated by Apache Royale Compiler from com/unhurdle/spectrum/TypographyGroup.as
 * com.unhurdle.spectrum.TypographyGroup
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('com.unhurdle.spectrum.TypographyGroup');
/* Royale Dependency List: */

goog.require('com.unhurdle.spectrum.TextGroup');



/**
 * <inject_html>
 * <link rel="stylesheet" href="assets/css/components/typography/dist.css">
 * </inject_html>
 * 
 * @constructor
 * @extends {com.unhurdle.spectrum.TextGroup}
 */
com.unhurdle.spectrum.TypographyGroup = function() {
  com.unhurdle.spectrum.TypographyGroup.base(this, 'constructor');
  this.userSelect = false;
};
goog.inherits(com.unhurdle.spectrum.TypographyGroup, com.unhurdle.spectrum.TextGroup);


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.TypographyGroup.prototype.getSelector = function() {
  return "spectrum-Typography";
};


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.TypographyGroup.prototype.com_unhurdle_spectrum_TypographyGroup__userSelect = false;


/**
 * @private
 * @type {string}
 */
com.unhurdle.spectrum.TypographyGroup.prototype.com_unhurdle_spectrum_TypographyGroup__language = null;


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.TypographyGroup.prototype.userSelect;


com.unhurdle.spectrum.TypographyGroup.prototype.get__userSelect = function() {
  return this.com_unhurdle_spectrum_TypographyGroup__userSelect;
};


com.unhurdle.spectrum.TypographyGroup.prototype.set__userSelect = function(value) {
  this.com_unhurdle_spectrum_TypographyGroup__userSelect = value;
  if (value) {
    this.setAttribute("user-select", "");
  } else {
    this.setAttribute("user-select", "none");
  }
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
com.unhurdle.spectrum.TypographyGroup.prototype.language;


com.unhurdle.spectrum.TypographyGroup.prototype.get__language = function() {
  return this.com_unhurdle_spectrum_TypographyGroup__language;
};


com.unhurdle.spectrum.TypographyGroup.prototype.set__language = function(value) {
  this.com_unhurdle_spectrum_TypographyGroup__language = value;
  if (value) {
    if (value == 'he' || value == 'ar') {
      this.setAttribute("dir", "rtl");
    } else {
      this.removeAttribute("dir");
    }
    this.setAttribute("lang", value);
  } else {
    this.removeAttribute("lang");
    this.removeAttribute("dir");
  }
};


Object.defineProperties(com.unhurdle.spectrum.TypographyGroup.prototype, /** @lends {com.unhurdle.spectrum.TypographyGroup.prototype} */ {
/**
 * @type {boolean}
 */
userSelect: {
get: com.unhurdle.spectrum.TypographyGroup.prototype.get__userSelect,
set: com.unhurdle.spectrum.TypographyGroup.prototype.set__userSelect},
/**
 * @type {string}
 */
language: {
get: com.unhurdle.spectrum.TypographyGroup.prototype.get__language,
set: com.unhurdle.spectrum.TypographyGroup.prototype.set__language}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
com.unhurdle.spectrum.TypographyGroup.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'TypographyGroup', qName: 'com.unhurdle.spectrum.TypographyGroup', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
com.unhurdle.spectrum.TypographyGroup.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'userSelect': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.TypographyGroup'},
        'language': { type: 'String', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.TypographyGroup'}
      };
    },
    methods: function () {
      return {
        'TypographyGroup': { type: '', declaredBy: 'com.unhurdle.spectrum.TypographyGroup'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
com.unhurdle.spectrum.TypographyGroup.prototype.ROYALE_COMPILE_FLAGS = 11;
