/**
 * Generated by Apache Royale Compiler from com/unhurdle/spectrum/TextFieldBase.as
 * com.unhurdle.spectrum.TextFieldBase
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('com.unhurdle.spectrum.TextFieldBase');
/* Royale Dependency List: com.unhurdle.spectrum.Icon,com.unhurdle.spectrum.beads.KeyboardFocusHandler,org.apache.royale.debugging.assert,org.apache.royale.events.KeyboardEvent,org.apache.royale.events.ValueEvent,org.apache.royale.events.utils.EditingKeys,org.apache.royale.events.utils.NavigationKeys,org.apache.royale.events.utils.WhitespaceKeys,org.apache.royale.utils.Language*/

goog.require('com.unhurdle.spectrum.SpectrumBase');
goog.require('com.unhurdle.spectrum.interfaces.IKeyboardFocusable');



/**
 * <inject_html>
 * <link rel="stylesheet" href="assets/css/components/textfield/dist.css">
 * </inject_html>
 * 
 * @constructor
 * @extends {com.unhurdle.spectrum.SpectrumBase}
 * @implements {com.unhurdle.spectrum.interfaces.IKeyboardFocusable}
 */
com.unhurdle.spectrum.TextFieldBase = function() {
  com.unhurdle.spectrum.TextFieldBase.base(this, 'constructor');
  this.addEventListener(org.apache.royale.events.KeyboardEvent.KEY_DOWN, org.apache.royale.utils.Language.closure(this.com_unhurdle_spectrum_TextFieldBase_handleKeyDown, this, 'com_unhurdle_spectrum_TextFieldBase_handleKeyDown'));
  this._tabFocusable = true;
};
goog.inherits(com.unhurdle.spectrum.TextFieldBase, com.unhurdle.spectrum.SpectrumBase);


/**
 * @private
 * @param {org.apache.royale.events.KeyboardEvent} event
 */
com.unhurdle.spectrum.TextFieldBase.prototype.com_unhurdle_spectrum_TextFieldBase_handleKeyDown = function(event) {
  var /** @type {string} */ eventName = null;
  //var /** @type {string} */ eventName = null;
  var /** @type {string} */ key = event.key;
  switch (key) {
    case org.apache.royale.events.utils.WhitespaceKeys.ENTER:
    
    case org.apache.royale.events.utils.EditingKeys.BACKSPACE:
    
    case org.apache.royale.events.utils.NavigationKeys.DOWN:
    
    case org.apache.royale.events.utils.NavigationKeys.UP:
    
    case org.apache.royale.events.utils.WhitespaceKeys.TAB:
      eventName = "on" + key;
      break;
    default:
      return;
  }
  this.dispatchEvent(new org.apache.royale.events.ValueEvent(eventName, event));
};


/**
 * @protected
 * @override
 */
com.unhurdle.spectrum.TextFieldBase.prototype.getSelector = function() {
  return "spectrum-Textfield";
};


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.TextFieldBase.prototype.com_unhurdle_spectrum_TextFieldBase__quiet = false;


/**
 * @return {boolean}
 */
com.unhurdle.spectrum.TextFieldBase.prototype.validate = function() {
  return true;
};


/**
 * @param {boolean} value
 */
com.unhurdle.spectrum.TextFieldBase.prototype.setValidity = function(value) {
  this.valid = value;
  this.invalid = !value;
};


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.TextFieldBase.prototype.com_unhurdle_spectrum_TextFieldBase__valid = false;


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.TextFieldBase.prototype.com_unhurdle_spectrum_TextFieldBase__invalid = false;


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.TextFieldBase.prototype.com_unhurdle_spectrum_TextFieldBase__disabled = false;


/**
 * @override
 */
com.unhurdle.spectrum.TextFieldBase.prototype.focus = function() {
  this.focusElement.focus();
};


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.TextFieldBase.prototype.com_unhurdle_spectrum_TextFieldBase__focused = false;


/**
 * @private
 * @type {boolean}
 */
com.unhurdle.spectrum.TextFieldBase.prototype.com_unhurdle_spectrum_TextFieldBase__keyboardFocused = false;


/**
 * @private
 * @type {string}
 */
com.unhurdle.spectrum.TextFieldBase.prototype.com_unhurdle_spectrum_TextFieldBase__icon = null;


/**
 * @private
 * @type {string}
 */
com.unhurdle.spectrum.TextFieldBase.prototype.com_unhurdle_spectrum_TextFieldBase__iconClass = "";


/**
 * @private
 * @type {string}
 */
com.unhurdle.spectrum.TextFieldBase.prototype.com_unhurdle_spectrum_TextFieldBase__iconSize = null;


/**
 * @private
 * @type {string}
 */
com.unhurdle.spectrum.TextFieldBase.prototype.com_unhurdle_spectrum_TextFieldBase__iconType = null;


/**
 * @private
 * @type {com.unhurdle.spectrum.Icon}
 */
com.unhurdle.spectrum.TextFieldBase.prototype.com_unhurdle_spectrum_TextFieldBase__iconElement = null;


/**
 * @protected
 * @param {string} selector
 */
com.unhurdle.spectrum.TextFieldBase.prototype.createIcon = function(selector) {
  if (this.com_unhurdle_spectrum_TextFieldBase__iconElement) {
    this.com_unhurdle_spectrum_TextFieldBase__iconElement.selector = selector;
    this.setIconProps();
  } else {
    this.com_unhurdle_spectrum_TextFieldBase__iconElement = new com.unhurdle.spectrum.Icon(selector);
    this.setIconProps();
    this.addElementAt(this.com_unhurdle_spectrum_TextFieldBase__iconElement, 0);
  }
};


/**
 * @protected
 */
com.unhurdle.spectrum.TextFieldBase.prototype.setIconProps = function() {
  if (this.iconClass) {
    this.com_unhurdle_spectrum_TextFieldBase__iconElement.className = this.iconClass;
  }
  this.com_unhurdle_spectrum_TextFieldBase__iconElement.size = this.iconSize;
  this.com_unhurdle_spectrum_TextFieldBase__iconElement.type = this.iconType;
  this.com_unhurdle_spectrum_TextFieldBase__iconElement.toggle(this.appendSelector("-icon"), true);
};


/**
 * @override
 */
com.unhurdle.spectrum.TextFieldBase.prototype.addedToParent = function() {
  com.unhurdle.spectrum.TextFieldBase.superClass_.addedToParent.apply(this);
  if (this.tabFocusable) {
    this.addBead(new com.unhurdle.spectrum.beads.KeyboardFocusHandler());
  }
};


com.unhurdle.spectrum.TextFieldBase.prototype.set__tabFocusable = function(value) {
  this._tabFocusable = value;
  if (value) {
    this.focusElement.removeAttribute("tabindex");
  } else {
    this.focusElement.setAttribute("tabindex", -1);
  }
};


/**
 * @nocollapse
 * @export
 * @type {HTMLElement}
 */
com.unhurdle.spectrum.TextFieldBase.prototype.focusElement;


com.unhurdle.spectrum.TextFieldBase.prototype.get__focusElement = function() {
  org.apache.royale.debugging.assert(false, "Must override focusElement getter!");
  return null;
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.TextFieldBase.prototype.quiet;


com.unhurdle.spectrum.TextFieldBase.prototype.get__quiet = function() {
  return this.com_unhurdle_spectrum_TextFieldBase__quiet;
};


com.unhurdle.spectrum.TextFieldBase.prototype.set__quiet = function(value) {
  if (value != !!this.com_unhurdle_spectrum_TextFieldBase__quiet) {
    this.toggle(this.valueToSelector("quiet"), value);
  }
  this.com_unhurdle_spectrum_TextFieldBase__quiet = value;
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.TextFieldBase.prototype.valid;


com.unhurdle.spectrum.TextFieldBase.prototype.get__valid = function() {
  return this.com_unhurdle_spectrum_TextFieldBase__valid;
};


com.unhurdle.spectrum.TextFieldBase.prototype.set__valid = function(value) {
  if (value != this.com_unhurdle_spectrum_TextFieldBase__valid) {
    this.toggle("is-valid", value);
  }
  if (value) {
    this.invalid = false;
  }
  this.com_unhurdle_spectrum_TextFieldBase__valid = value;
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.TextFieldBase.prototype.invalid;


com.unhurdle.spectrum.TextFieldBase.prototype.get__invalid = function() {
  return this.com_unhurdle_spectrum_TextFieldBase__invalid;
};


com.unhurdle.spectrum.TextFieldBase.prototype.set__invalid = function(value) {
  if (value != this.com_unhurdle_spectrum_TextFieldBase__invalid) {
    this.toggle("is-invalid", value);
  }
  if (value) {
    this.valid = false;
  }
  this.com_unhurdle_spectrum_TextFieldBase__invalid = value;
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.TextFieldBase.prototype.disabled;


com.unhurdle.spectrum.TextFieldBase.prototype.get__disabled = function() {
  return this.com_unhurdle_spectrum_TextFieldBase__disabled;
};


com.unhurdle.spectrum.TextFieldBase.prototype.set__disabled = function(value) {
  if (value != !!this.com_unhurdle_spectrum_TextFieldBase__disabled) {
    this.toggle("is-disabled", value);
  }
  this.com_unhurdle_spectrum_TextFieldBase__disabled = value;
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.TextFieldBase.prototype.focused;


com.unhurdle.spectrum.TextFieldBase.prototype.get__focused = function() {
  return this.com_unhurdle_spectrum_TextFieldBase__focused;
};


com.unhurdle.spectrum.TextFieldBase.prototype.set__focused = function(value) {
  if (value != this.com_unhurdle_spectrum_TextFieldBase__focused) {
    this.toggle("is-focused", value);
    if (value) {
      this.focus();
      this.toggle("is-keyboardFocused", false);
    }
  }
  this.com_unhurdle_spectrum_TextFieldBase__focused = value;
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.unhurdle.spectrum.TextFieldBase.prototype.keyboardFocused;


com.unhurdle.spectrum.TextFieldBase.prototype.get__keyboardFocused = function() {
  return this.com_unhurdle_spectrum_TextFieldBase__keyboardFocused;
};


com.unhurdle.spectrum.TextFieldBase.prototype.set__keyboardFocused = function(value) {
  if (value != this.com_unhurdle_spectrum_TextFieldBase__keyboardFocused) {
    this.toggle("is-keyboardFocused", value);
    if (value) {
      this.focus();
      this.toggle("is-focused", false);
    }
  }
  this.com_unhurdle_spectrum_TextFieldBase__keyboardFocused = value;
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
com.unhurdle.spectrum.TextFieldBase.prototype.icon;


com.unhurdle.spectrum.TextFieldBase.prototype.get__icon = function() {
  return this.com_unhurdle_spectrum_TextFieldBase__icon;
};


com.unhurdle.spectrum.TextFieldBase.prototype.set__icon = function(value) {
  this.com_unhurdle_spectrum_TextFieldBase__icon = value;
  this.createIcon(value);
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
com.unhurdle.spectrum.TextFieldBase.prototype.iconClass;


com.unhurdle.spectrum.TextFieldBase.prototype.get__iconClass = function() {
  return this.com_unhurdle_spectrum_TextFieldBase__iconClass;
};


com.unhurdle.spectrum.TextFieldBase.prototype.set__iconClass = function(value) {
  this.com_unhurdle_spectrum_TextFieldBase__iconClass = value;
  if (this.iconElement) {
    this.iconElement.className = value;
  }
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
com.unhurdle.spectrum.TextFieldBase.prototype.iconSize;


com.unhurdle.spectrum.TextFieldBase.prototype.get__iconSize = function() {
  return this.com_unhurdle_spectrum_TextFieldBase__iconSize;
};


com.unhurdle.spectrum.TextFieldBase.prototype.set__iconSize = function(value) {
  if (!com.unhurdle.spectrum.Icon.validateSize(value)) {
    return;
  }
  this.com_unhurdle_spectrum_TextFieldBase__iconSize = value;
  if (this.iconElement) {
    this.iconElement.size = value;
  }
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
com.unhurdle.spectrum.TextFieldBase.prototype.iconType;


com.unhurdle.spectrum.TextFieldBase.prototype.get__iconType = function() {
  return this.com_unhurdle_spectrum_TextFieldBase__iconType;
};


com.unhurdle.spectrum.TextFieldBase.prototype.set__iconType = function(value) {
  this.com_unhurdle_spectrum_TextFieldBase__iconType = value;
  if (this.iconElement) {
    this.iconElement.type = value;
  }
};


/**
 * @nocollapse
 * @export
 * @type {com.unhurdle.spectrum.Icon}
 */
com.unhurdle.spectrum.TextFieldBase.prototype.iconElement;


com.unhurdle.spectrum.TextFieldBase.prototype.get__iconElement = function() {
  return this.com_unhurdle_spectrum_TextFieldBase__iconElement;
};


com.unhurdle.spectrum.TextFieldBase.prototype.set__iconElement = function(value) {
  if (this.com_unhurdle_spectrum_TextFieldBase__iconElement) {
    this.removeElement(this.com_unhurdle_spectrum_TextFieldBase__iconElement);
  }
  this.com_unhurdle_spectrum_TextFieldBase__iconElement = value;
  if (this.com_unhurdle_spectrum_TextFieldBase__iconElement) {
    this.addElementAt(this.com_unhurdle_spectrum_TextFieldBase__iconElement, 0);
  }
};


Object.defineProperties(com.unhurdle.spectrum.TextFieldBase.prototype, /** @lends {com.unhurdle.spectrum.TextFieldBase.prototype} */ {
/**
 * @type {boolean}
 */
tabFocusable: {
get: com.unhurdle.spectrum.SpectrumBase.prototype.get__tabFocusable,
set: com.unhurdle.spectrum.TextFieldBase.prototype.set__tabFocusable},
/**
 * @type {HTMLElement}
 */
focusElement: {
get: com.unhurdle.spectrum.TextFieldBase.prototype.get__focusElement},
/**
 * @type {boolean}
 */
quiet: {
get: com.unhurdle.spectrum.TextFieldBase.prototype.get__quiet,
set: com.unhurdle.spectrum.TextFieldBase.prototype.set__quiet},
/**
 * @type {boolean}
 */
valid: {
get: com.unhurdle.spectrum.TextFieldBase.prototype.get__valid,
set: com.unhurdle.spectrum.TextFieldBase.prototype.set__valid},
/**
 * @type {boolean}
 */
invalid: {
get: com.unhurdle.spectrum.TextFieldBase.prototype.get__invalid,
set: com.unhurdle.spectrum.TextFieldBase.prototype.set__invalid},
/**
 * @type {boolean}
 */
disabled: {
get: com.unhurdle.spectrum.TextFieldBase.prototype.get__disabled,
set: com.unhurdle.spectrum.TextFieldBase.prototype.set__disabled},
/**
 * @type {boolean}
 */
focused: {
get: com.unhurdle.spectrum.TextFieldBase.prototype.get__focused,
set: com.unhurdle.spectrum.TextFieldBase.prototype.set__focused},
/**
 * @type {boolean}
 */
keyboardFocused: {
get: com.unhurdle.spectrum.TextFieldBase.prototype.get__keyboardFocused,
set: com.unhurdle.spectrum.TextFieldBase.prototype.set__keyboardFocused},
/**
 * @type {string}
 */
icon: {
get: com.unhurdle.spectrum.TextFieldBase.prototype.get__icon,
set: com.unhurdle.spectrum.TextFieldBase.prototype.set__icon},
/**
 * @type {string}
 */
iconClass: {
get: com.unhurdle.spectrum.TextFieldBase.prototype.get__iconClass,
set: com.unhurdle.spectrum.TextFieldBase.prototype.set__iconClass},
/**
 * @type {string}
 */
iconSize: {
get: com.unhurdle.spectrum.TextFieldBase.prototype.get__iconSize,
set: com.unhurdle.spectrum.TextFieldBase.prototype.set__iconSize},
/**
 * @type {string}
 */
iconType: {
get: com.unhurdle.spectrum.TextFieldBase.prototype.get__iconType,
set: com.unhurdle.spectrum.TextFieldBase.prototype.set__iconType},
/**
 * @type {com.unhurdle.spectrum.Icon}
 */
iconElement: {
get: com.unhurdle.spectrum.TextFieldBase.prototype.get__iconElement,
set: com.unhurdle.spectrum.TextFieldBase.prototype.set__iconElement}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
com.unhurdle.spectrum.TextFieldBase.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'TextFieldBase', qName: 'com.unhurdle.spectrum.TextFieldBase', kind: 'class' }], interfaces: [com.unhurdle.spectrum.interfaces.IKeyboardFocusable] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
com.unhurdle.spectrum.TextFieldBase.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'tabFocusable': { type: 'Boolean', access: 'writeonly', declaredBy: 'com.unhurdle.spectrum.TextFieldBase'},
        'focusElement': { type: 'HTMLElement', access: 'readonly', declaredBy: 'com.unhurdle.spectrum.TextFieldBase'},
        'quiet': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.TextFieldBase'},
        'valid': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.TextFieldBase'},
        'invalid': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.TextFieldBase'},
        'disabled': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.TextFieldBase'},
        'focused': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.TextFieldBase'},
        'keyboardFocused': { type: 'Boolean', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.TextFieldBase'},
        'icon': { type: 'String', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.TextFieldBase'},
        'iconClass': { type: 'String', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.TextFieldBase'},
        'iconSize': { type: 'String', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.TextFieldBase'},
        'iconType': { type: 'String', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.TextFieldBase'},
        'iconElement': { type: 'com.unhurdle.spectrum.Icon', access: 'readwrite', declaredBy: 'com.unhurdle.spectrum.TextFieldBase'}
      };
    },
    methods: function () {
      return {
        'TextFieldBase': { type: '', declaredBy: 'com.unhurdle.spectrum.TextFieldBase'},
        'validate': { type: 'Boolean', declaredBy: 'com.unhurdle.spectrum.TextFieldBase'},
        'setValidity': { type: 'void', declaredBy: 'com.unhurdle.spectrum.TextFieldBase', parameters: function () { return [ 'Boolean', false ]; }},
        'focus': { type: 'void', declaredBy: 'com.unhurdle.spectrum.TextFieldBase'},
        'addedToParent': { type: 'void', declaredBy: 'com.unhurdle.spectrum.TextFieldBase'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
com.unhurdle.spectrum.TextFieldBase.prototype.ROYALE_COMPILE_FLAGS = 11;
