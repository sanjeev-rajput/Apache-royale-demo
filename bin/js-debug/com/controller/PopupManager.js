/**
 * Generated by Apache Royale Compiler from com/controller/PopupManager.as
 * com.controller.PopupManager
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('com.controller.PopupManager');
/* Royale Dependency List: org.apache.royale.core.UIBase,org.apache.royale.events.CloseEvent,org.apache.royale.events.Event,org.apache.royale.utils.Language,XML*/

goog.require('org.apache.royale.jewel.PopUp');



/**
 * @constructor
 * @extends {org.apache.royale.jewel.PopUp}
 */
com.controller.PopupManager = function() {
  com.controller.PopupManager.base(this, 'constructor');
  if (com.controller.PopupManager._instance) {
    throw new Error("Singleton class, use getInstance() method.");
  }
  com.controller.PopupManager._instance = this;
};
goog.inherits(com.controller.PopupManager, org.apache.royale.jewel.PopUp);


/**
 * @private
 * @type {com.controller.PopupManager}
 */
com.controller.PopupManager._instance = null;


/**
 * @nocollapse
 * @return {com.controller.PopupManager}
 */
com.controller.PopupManager.getInstance = function() {
  if (!com.controller.PopupManager._instance) {
    com.controller.PopupManager._instance = new com.controller.PopupManager();
  }
  return com.controller.PopupManager._instance;
};


/**
 * @param {Object} popup
 * @param {org.apache.royale.core.UIBase} ui
 * @param {number=} w
 * @param {number=} h
 */
com.controller.PopupManager.prototype.createPopup = function(popup, ui, w, h) {
  w = typeof w !== 'undefined' ? w : 490;
  h = typeof h !== 'undefined' ? h : 392;
  popup.width = w;
  popup.height = h;
  com.controller.PopupManager._instance.content = popup;
  com.controller.PopupManager._instance.modal = true;
  ui.addElement(com.controller.PopupManager._instance);
  com.controller.PopupManager._instance.open = true;
  org.apache.royale.utils.Language.trace(com.controller.PopupManager._instance);
};


/**
 */
com.controller.PopupManager.prototype.reomovePopup = function() {
  com.controller.PopupManager._instance.dispatchEvent(new org.apache.royale.events.Event(org.apache.royale.events.CloseEvent.CLOSE));
  com.controller.PopupManager._instance.open = false;
  org.apache.royale.utils.Language.trace("Hiding current popup");
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
com.controller.PopupManager.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'PopupManager', qName: 'com.controller.PopupManager', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
com.controller.PopupManager.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    methods: function () {
      return {
        '|getInstance': { type: 'com.controller.PopupManager', declaredBy: 'com.controller.PopupManager'},
        'createPopup': { type: 'void', declaredBy: 'com.controller.PopupManager', parameters: function () { return [ 'Object', false ,'org.apache.royale.core.UIBase', false ,'int', true ,'int', true ]; }},
        'reomovePopup': { type: 'void', declaredBy: 'com.controller.PopupManager'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
com.controller.PopupManager.prototype.ROYALE_COMPILE_FLAGS = 9;
/**
 * Provide reflection support for distinguishing dynamic fields on class object (static)
 * @const
 * @type {Array<string>}
 */
com.controller.PopupManager.prototype.ROYALE_INITIAL_STATICS = Object.keys(com.controller.PopupManager);

//# sourceMappingURL=./PopupManager.js.map
