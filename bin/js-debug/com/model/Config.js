/**
 * Generated by Apache Royale Compiler from com/model/Config.as
 * com.model.Config
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('com.model.Config');
/* Royale Dependency List: XML*/



/**
 * @constructor
 */
com.model.Config = function() {
  throw new Error("Config is a static class and cannot be instantiated.");
};


/**
 * @private
 * @const
 * @type {string}
 */
com.model.Config.LIVE_SERVER = "apache-roayle-demo-app.onrender.com";


/**
 * @private
 * @const
 * @type {string}
 */
com.model.Config.LOCAL_SERVER = "localhost:3000";


/**
 * @private
 * @type {string}
 */
com.model.Config._serverUrl;


/**
 * @private
 * @type {boolean}
 */
com.model.Config._isLocal = true;


/**
 * @private
 * @type {Object}
 */
com.model.Config._productJson = null;


/**
 * @nocollapse
 * @export
 * @type {string}
 */
com.model.Config.serverEnvironment;


com.model.Config.set__serverEnvironment = function(value) {
  var /** @type {string} */ env = value.toUpperCase();
  if (env === "LIVE") {
    com.model.Config._isLocal = false;
    com.model.Config._serverUrl = com.model.Config.LIVE_SERVER;
  } else if (env === "LOCAL") {
    com.model.Config._isLocal = true;
    com.model.Config._serverUrl = com.model.Config.LOCAL_SERVER;
  } else {
    throw new Error("Invalid environment. Use 'LIVE' or 'LOCAL'.");
  }
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
com.model.Config.serverHost;


com.model.Config.get__serverHost = function() {
  return com.model.Config._serverUrl;
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
com.model.Config.apiBaseUrl;


com.model.Config.get__apiBaseUrl = function() {
  var /** @type {string} */ protocol = com.model.Config._isLocal ? "http://" : "https://";
  return protocol + com.model.Config._serverUrl + "/api/";
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
com.model.Config.wsUrl;


com.model.Config.get__wsUrl = function() {
  var /** @type {string} */ protocol = com.model.Config._isLocal ? "ws://" : "wss://";
  return protocol + com.model.Config._serverUrl;
};


/**
 * @nocollapse
 * @export
 * @type {boolean}
 */
com.model.Config.isLocal;


com.model.Config.get__isLocal = function() {
  return com.model.Config._isLocal;
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
com.model.Config.version;


com.model.Config.get__version = function() {
  return "1.0.0";
};


/**
 * @nocollapse
 * @export
 * @type {Object}
 */
com.model.Config.productJson;


com.model.Config.get__productJson = function() {
  return com.model.Config._productJson;
};


com.model.Config.set__productJson = function(value) {
  com.model.Config._productJson = value;
};


Object.defineProperties(com.model.Config, /** @lends {com.model.Config} */ {
/**
 * @type {string}
 */
serverEnvironment: {
set: com.model.Config.set__serverEnvironment},
/**
 * @type {string}
 */
serverHost: {
get: com.model.Config.get__serverHost},
/**
 * @type {string}
 */
apiBaseUrl: {
get: com.model.Config.get__apiBaseUrl},
/**
 * @type {string}
 */
wsUrl: {
get: com.model.Config.get__wsUrl},
/**
 * @type {boolean}
 */
isLocal: {
get: com.model.Config.get__isLocal},
/**
 * @type {string}
 */
version: {
get: com.model.Config.get__version},
/**
 * @type {Object}
 */
productJson: {
get: com.model.Config.get__productJson,
set: com.model.Config.set__productJson}}
);

com.model.Config._serverUrl = com.model.Config.LOCAL_SERVER;




/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
com.model.Config.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'Config', qName: 'com.model.Config', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
com.model.Config.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        '|serverEnvironment': { type: 'String', access: 'writeonly', declaredBy: 'com.model.Config'},
        '|serverHost': { type: 'String', access: 'readonly', declaredBy: 'com.model.Config'},
        '|apiBaseUrl': { type: 'String', access: 'readonly', declaredBy: 'com.model.Config'},
        '|wsUrl': { type: 'String', access: 'readonly', declaredBy: 'com.model.Config'},
        '|isLocal': { type: 'Boolean', access: 'readonly', declaredBy: 'com.model.Config'},
        '|version': { type: 'String', access: 'readonly', declaredBy: 'com.model.Config'},
        '|productJson': { type: 'Object', access: 'readwrite', declaredBy: 'com.model.Config'}
      };
    },
    methods: function () {
      return {
        'Config': { type: '', declaredBy: 'com.model.Config'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
com.model.Config.prototype.ROYALE_COMPILE_FLAGS = 9;
/**
 * Provide reflection support for distinguishing dynamic fields on class object (static)
 * @const
 * @type {Array<string>}
 */
com.model.Config.prototype.ROYALE_INITIAL_STATICS = Object.keys(com.model.Config);

//# sourceMappingURL=./Config.js.map
