<j:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
    xmlns:j="library://ns.apache.org/royale/jewel"
    xmlns:sp="library://ns.unhurdle.com/spectrum"
    initComplete="init()" width="100%" height="100%" className="collaborativeContainer">

    <fx:Script>
    <![CDATA[
        import views.actionitemviews.websocket.SocketService;
        import org.apache.royale.collections.ArrayList;

        import views.actionitemviews.collaboration.SocketMessageHandler;
        import views.actionitemviews.collaboration.SocketVideoHandler;

        private var _socketService:SocketService;
        private var _socketMsgHandler:SocketMessageHandler;
        private var _socketVideoHandler:SocketVideoHandler;
        private var myUserId:String;

        private function init():void {
            _socketService = new SocketService();
            _socketService.addCAllBackFunction(onSocketData);
            _socketService.connectWebSocket(SocketService.SUBSCRIBE_COLLABARATION);

            _socketMsgHandler = new SocketMessageHandler(input, outputContainer);
            _socketVideoHandler = new SocketVideoHandler(uVidContainer, shareCamBtn, _socketService);
        }

        private function updateUserList():void{
            if (userList.dataProvider && userList.dataProvider.length > 0){
                var ulist:ArrayList = userList.dataProvider as ArrayList;
                var idx:int = ulist.getItemIndex(myUserId);
                if (idx >= 0){
                    ulist.setItemAt(myUserId + " (You)", idx);
                }
                userList.dataProvider = ulist;
            }
        }


        private function onSocketData(data:Object):void {
            if (data.type == "welcome") {
                myUserId = data.userId;
                _socketVideoHandler.setMyUserId(myUserId)
                _socketMsgHandler.process(data);
                updateUserList();
            } else if (data.type == "user_list") {
                userList.dataProvider = new ArrayList(data.users);
                usrNos.text = "Connected Users: " + data.count + "/" + data.max;
                updateUserList();
            }else if (_socketVideoHandler.isVideoMessage(data.type)) {
                _socketVideoHandler.process(data);
            } else {
                _socketMsgHandler.process(data);
            }
        }

        private function onInputChange():void {
            var msg:String = input.text;
            if (_socketService && msg.length > 0) {
                _socketService.sendToSocket({
                    type: SocketService.SUBSCRIBE_COLLABARATION,
                    text: msg
                });
                input.text = "";
                input.focus();
            }
        }

        private function onShareWebcam():void {
            var flag:Boolean = shareCamBtn.checked;
            if (flag) {
                _socketVideoHandler.onStartWebcam();
            } else {
                _socketVideoHandler.onStopWebcam();
            }
        }
    ]]>
</fx:Script>

    <j:HGroup height="100%" width="100%" gap="1">
        <j:VGroup width="85%" height="100%">
            <j:VGroup width="100%" height="100%" id="outputContainer" itemsVerticalAlign="itemsTop" gap="1">
                <j:beads>
                    <j:ScrollingViewport/>
                </j:beads>
            </j:VGroup>
            <sp:TextField id="input" width="100%" onEnter="onInputChange()" placeholder="Type your message here..." style="resize:none"/>
        </j:VGroup>
        <j:VGroup style="border:1px dashed gray;" width="15%" height="100%" itemsVerticalAlign="itemsTop" gap="1">
            <sp:Label id="usrNos" text="Connected Users:" width="100%"/>
            <j:List id="userList" width="100%" height="50%"/>
            <sp:Switch id="shareCamBtn" offLabel="Webcam Off" onLabel="Webcam On" click="onShareWebcam()"/>
            <j:VGroup id="uVidContainer" width="100%" height="50%">
                <j:beads>
                    <j:ScrollingViewport/>
                </j:beads>
            </j:VGroup>
        </j:VGroup>
    </j:HGroup>

</j:VGroup>
